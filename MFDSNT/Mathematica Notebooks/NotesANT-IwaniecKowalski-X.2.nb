(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    676875,      12994]
NotebookOptionsPosition[    660791,      12704]
NotebookOutlinePosition[    661515,      12727]
CellTagsIndexPosition[    661472,      12724]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Foreword, etc.", "Chapter",ExpressionUUID->"5a6c7533-8b40-45b9-bf5b-4812b4c0344f"],

Cell[CellGroupData[{

Cell["Pre-amble", "Section",ExpressionUUID->"584864ba-1211-47c1-96bd-09b055380762"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{
   "$Path", ",", 
    "\"\<C:\\\\Users\\\\deroo\\\\__DATA\\\\MEGA\\\\DATA\\\\git\\\\MFDSNT\\\\\
Mathematica Notebooks\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "BKPNumberTheory`"}]}], "Input",
 CellLabel->
  "In[121]:=",ExpressionUUID->"0dff1cfb-3f9f-456d-93b9-e60cdbe2bc42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nCollatz", "[", "23", "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"720ab3c7-4c2b-42ad-98c1-8661b1045d5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "23", ",", "70", ",", "35", ",", "106", ",", "53", ",", "160", ",", "80", 
   ",", "40", ",", "20", ",", "10", ",", "5", ",", "16", ",", "8", ",", "4", 
   ",", "2", ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[3]=",ExpressionUUID->"b036b63a-8f3e-4507-ba80-fe47b6d02919"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Topic", "Section",
 CellChangeTimes->{{3.7832737703729143`*^9, 3.7832737842442713`*^9}, {
  3.7832739024677706`*^9, 3.7832739104188433`*^9}, {3.7832739717708426`*^9, 
  3.783273973717634*^9}, {3.7853374065365705`*^9, 3.7853374175281563`*^9}, {
  3.7853377031963477`*^9, 
  3.7853377048362412`*^9}},ExpressionUUID->"a73767dc-da7f-4f30-b355-\
4465af181835"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Definition / Theorem ",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.7826654768540397`*^9, 3.782665485158893*^9}, 
   3.782715887476343*^9, {3.782716848474037*^9, 3.782716871121205*^9}, {
   3.7827173361574907`*^9, 3.7827173415799327`*^9}, {3.7828031783556767`*^9, 
   3.78280318145585*^9}, {3.7828034538688183`*^9, 3.7828034574366493`*^9}, {
   3.7833530768548527`*^9, 3.7833530903994584`*^9}, {3.783358080038978*^9, 
   3.7833580879180937`*^9}, {3.7853375280890074`*^9, 
   3.7853375294890585`*^9}, {3.7853377669291077`*^9, 3.785337780886693*^9}},
 FontColor->GrayLevel[
  0],ExpressionUUID->"647ffe1f-34c1-4183-b04e-b4fa274fb19d"],

Cell["This is text.", "Text",
 CellChangeTimes->{{3.7853375391106453`*^9, 
  3.785337545415392*^9}},ExpressionUUID->"ca7ae836-4645-4cb2-b244-\
e563110366b9"],

Cell[TextData[StyleBox["Example",
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.5019607843137255, 0.5019607843137255, 
   0.5019607843137255]]], "Subsubsection",
 CellChangeTimes->{{3.7828068396307926`*^9, 
  3.782806841526989*^9}},ExpressionUUID->"741ce6e3-3daf-4cc1-810c-\
8d6edfec343d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["*Table of Arithmetical Functions ( -under construction- )", "Section",
 CellChangeTimes->{{3.7971443454340277`*^9, 3.7971443807461643`*^9}, {
  3.797237164033742*^9, 
  3.797237184536951*^9}},ExpressionUUID->"4a28bc01-1314-4d89-86b1-\
d25783421b8d"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Definition",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.7826654768540397`*^9, 3.782665485158893*^9}, 
   3.782715887476343*^9, {3.782716848474037*^9, 3.782716871121205*^9}, {
   3.7827173361574907`*^9, 3.7827173415799327`*^9}, {3.7828031783556767`*^9, 
   3.78280318145585*^9}, {3.7828034538688183`*^9, 3.7828034574366493`*^9}, {
   3.7833530768548527`*^9, 3.7833530903994584`*^9}, {3.783358080038978*^9, 
   3.7833580879180937`*^9}, {3.7853375280890074`*^9, 
   3.7853375294890585`*^9}, {3.7853377669291077`*^9, 3.785337780886693*^9}, {
   3.785589310595995*^9, 3.785589311435477*^9}},
 FontColor->GrayLevel[
  0],ExpressionUUID->"ae085fba-bac2-41a1-b588-c3ceca0da615"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Table",
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.5019607843137255, 0.5019607843137255, 
   0.5019607843137255]]], "Subsubsection",
 CellChangeTimes->{{3.7828068396307926`*^9, 3.782806841526989*^9}, {
  3.7979508055149355`*^9, 
  3.7979508261551304`*^9}},ExpressionUUID->"0737d7a8-f14f-4786-b6fc-\
075c458198cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*Cell[\"I\",ExpressionUUID->\"77878252-9a1d-4b58-b066-\
202a47535308\"]\)\>\"", ",", "\"\<-\>\"", ",", "\"\<Floor[1/n]\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<CM\>\"", ",", "\"\<I\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<1\>\"", ",", "\"\<1\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<1\>\"", ",", "\"\<-\>\"", ",", "\"\<1\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<CM\>\"", ",", "\"\<\[Mu]\>\"", ",", "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{"1", ",", "n", ",", "s"}], "]"}], "//", "TraditionalForm"}], 
       ",", "\"\<1/(1-x)\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<N\>\"", ",", "\"\<-\>\"", ",", "\"\<n\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<CM\>\"", ",", "\"\<\[Mu]N\>\"", ",", "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{"n", ",", "n", ",", "s"}], "]"}], "//", "TraditionalForm"}], 
       ",", "\"\<1/(1-px)\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[\(N\), \(a\)]\)\>\"", ",", 
       "\"\<a\[GreaterSlantEqual]0\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(n\), \(a\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(a\)]\)*\[Mu] ; \
\!\(\*SubscriptBox[\(J\), \(a\)]\)*1\>\"", ",", "\"\<CM\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(\[Mu]N\), \(a\)]\)\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(x\), \(a + \
1\)]\)/(a+1)+O(\!\(\*SuperscriptBox[\(x\), \(a\)]\))\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          SuperscriptBox["n", "a"], ",", "n", ",", "s"}], "]"}], "//", 
        "TraditionalForm"}], ",", 
       "\"\<1/(1-\!\(\*SuperscriptBox[\(p\), \(a\)]\)x)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Mu]\>\"", ",", "\"\<Sum of primitive\\nn-th roots of unity\>\"", 
       ",", "\"\<MoebiusMu[n]\>\"", ",", "\"\<-\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<1\>\"", ",", "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"MoebiusMu", "[", "n", "]"}], ",", "n", ",", "s"}], "]"}], "//",
         "TraditionalForm"}], ",", "\"\<1-x\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(k\)]\)\>\"", ",", 
       "\"\<M\[ODoubleDot]bius function of order k\>\"", ",", 
       "\"\<nMoebiusMu[k,n]\>\"", ",", "\"\<-\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Phi]\>\"", ",", "\"\<Euler Totient function\>\"", ",", 
       "\"\<EulerPhi[n]\>\"", ",", "\"\<\[Mu]*N\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\[Mu]N*1\>\"", ",", 
       "\"\<3/\!\(\*SuperscriptBox[\(\[Pi]\), \(2\)]\) \
\!\(\*SuperscriptBox[\(x\), \(2\)]\) + O(x Log[x])\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"EulerPhi", "[", "n", "]"}], ",", "n", ",", "s"}], "]"}], "//",
         "TraditionalForm"}], ",", "\"\<(1-x)/(1-px)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(J\), \(k\)]\)\>\"", ",", 
       "\"\<Jordan Totient function\>\"", ",", "\"\<nJordanTotient[k,n]\>\"", 
       ",", "\"\<\[Mu]*\!\(\*SuperscriptBox[\(N\), \(k\)]\) ; \
\!\(\*SubscriptBox[\(\[Sigma]\), \(k\)]\)*\[Mu]*\[Mu]\>\"", ",", "\"\<M\>\"", 
       ",", "\"\<\!\(\*SuperscriptBox[\(\[Mu]N\), \(k\)]\)*1\>\"", ",", 
       "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"DirichletConvolve", "[", 
           RowBox[{
            SuperscriptBox["j", "k"], ",", 
            RowBox[{"MoebiusMu", "[", "j", "]"}], ",", "j", ",", "n"}], "]"}],
           ",", "n", ",", "s"}], "]"}], "//", "TraditionalForm"}], ",", 
       "\"\<(\!\(\*SuperscriptBox[\(p\), \(k\)]\)-1)/(1-\!\(\*SuperscriptBox[\
\(p\), \(k\)]\)x)\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Tau]\>\"", ",", "\"\<-\>\"", ",", "\"\<DivisorSigma[0,n]\>\"", 
       ",", "\"\<1*1\>\"", ",", "\"\<M\>\"", ",", "\"\<\[Mu]*\[Mu]\>\"", ",", 
       "\"\<x Log[x]+(2\[Gamma]-1)x+O(\!\(\*SqrtBox[\(x\)]\))\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"DivisorSigma", "[", 
           RowBox[{"0", ",", "n"}], "]"}], ",", "n", ",", "s"}], "]"}], "//", 
        "TraditionalForm"}], ",", 
       "\"\<1/(1-x\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[\(\[Tau]\), \((k)\)]\)\>\"", ",", 
       "\"\<The number of ways of expressing n\\nas a product of k positive \
factors\>\"", ",", "\"\<nDirichletPower\\n[DivisorSigma[0,#]&,k][n]\>\"", 
       ",", "\"\<\!\(\*SuperscriptBox[\(1\), \((k + 1)\)]\)\>\"", ",", 
       "\"\<M\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \((k + 1)\)]\)\>\"", ",", 
       "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Sigma]\>\"", ",", "\"\<-\>\"", ",", "\"\<DivisorSigma[1,n]\>\"", 
       ",", "\"\<N*1 ; \[Sigma]=\[Phi]*\[Tau]\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\[Mu]*\[Mu]N\>\"", ",", 
       "\"\<\[Zeta](2)/2 \!\(\*SuperscriptBox[\(x\), \(2\)]\)+O(x \
Log[x])\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"DivisorSigma", "[", 
           RowBox[{"1", ",", "n"}], "]"}], ",", "n", ",", "s"}], "]"}], "//", 
        "TraditionalForm"}], ",", "\"\<1/((1-px)(1-x))\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(a\)]\)\>\"", ",", 
       "\"\<a\[GreaterEqual]2\>\"", ",", "\"\<DivisorSigma[a,n]\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(N\), \(a\)]\)*1 ; \!\(\*SubscriptBox[\(\
\[Sigma]\), \(1\)]\)=\[Phi]*\[Tau]\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\[Mu]*\!\(\*SuperscriptBox[\(\[Mu]N\), \(a\)]\)\>\"", ",", 
       "\"\<\[Zeta](a+1)/(a+1)\!\(\*SuperscriptBox[\(x\), \(a + 1\)]\)+O(\!\(\
\*SuperscriptBox[\(x\), \(a\)]\))\>\"", ",", 
       "\"\<\!\(\*TagBox[FormBox[RowBox[{TemplateBox[{
RowBox[{\"s\", \"-\", \"a\"}]},\"Zeta\"], \" \", \
TemplateBox[{\"s\"},\"Zeta\"]}],TraditionalForm],TraditionalForm,Editable->\
True]\)\>\"", ",", 
       "\"\<1/((1-\!\(\*SuperscriptBox[\(p\), \(a\)]\)x)(1-x))\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(GCD\), \(k\)]\)\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<GCD[k,n]\>\"", ",", "\"\<-\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Mu]GCD\), \(k\)]\)\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Gamma]\>\"", ",", "\"\<Core\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<M\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<(1-(1-p)x)/(1-x)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Lambda]\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<LiouvilleLambda[n]\\n(-1\!\(\*SuperscriptBox[\()\), \
\(PrimeOmega[n]\)]\)\>\"", ",", "\"\<-\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \(2\)]\) ; |\[Mu]|\>\"", ",", 
       "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"LiouvilleLambda", "[", "n", "]"}], ",", "n", ",", "s"}], 
         "]"}], "//", "TraditionalForm"}], ",", "\"\<1/(1+x)\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \(2\)]\)\>\"", ",", 
       "\"\<1 if squarefree, 0 otherwise\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<M\>\"", ",", "\"\<\[Lambda]\>\"", ",", 
       "\"\<?\>\"", ",", "\"\<\[Zeta](s)/\[Zeta](2s)\>\"", ",", 
       "\"\<1+x\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Lambda]*1\>\"", ",", "\"\<1 if square, 0 otherwise\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<-\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \(2\)]\)*\[Mu]\>\"", ",", 
       "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \(2\)]\)*1\>\"", ",", 
       "\"\<Number of square-free divisors\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(2\), \(PrimeNu[n]\)]\)\>\"", ",", 
       "\"\<|\[Mu]|*1\>\"", ",", "\"\<M\>\"", ",", "\"\<\[Lambda]*\[Mu]\>\"", 
       ",", "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"DirichletConvolve", "[", 
           RowBox[{"1", ",", 
            RowBox[{"Abs", "[", 
             RowBox[{"MoebiusMu", "[", "j", "]"}], "]"}], ",", "j", ",", 
            "n"}], "]"}], ",", "n", ",", "s"}], "]"}], "//", 
        "TraditionalForm"}], ",", "\"\<(1+x)/(1-x)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<a\>\"", ",", "\"\<Number of abelian groups\>\"", ",", 
       "\"\<FiniteAbelianGroupCount[n]\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<M\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(k\)]\)\>\"", ",", 
       "\"\<Euler Totient function of order k\>\"", ",", 
       "\"\<nEulerPhi[k,n]\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(Faulhaber\), \
\(k\)]\)*\!\(\*SuperscriptBox[\(\[Mu]N\), \(k\)]\)\>\"", ",", "\"\<-\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", 
       "\"\<?\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Nu]\>\"", ",", "\"\<-\>\"", ",", "\"\<PrimeNu[n]\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<A\>\"", ",", "\"\<None\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[CapitalOmega]\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<PrimeOmega[n]\>\"", ",", "\"\<-\>\"", ",", "\"\<CA\>\"", ",", 
       "\"\<None\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[CapitalLambda]\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<MangoldtLambda[n]\>\"", ",", "\"\<-\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<None\>\"", ",", "\"\<?\>\"", ",", 
       "\"\<-\[Zeta]'(s)/\[Zeta](s)\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<L\>\"", ",", "\"\<-\>\"", ",", "\"\<Log[n]\>\"", ",", 
       "\"\<\[CapitalLambda]*1\>\"", ",", "\"\<CA\>\"", ",", "\"\<None\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Nu]*\[Mu]\>\"", ",", "\"\<1 if prime, 0 otherwise\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<-\>\"", ",", "\"\<?\>\"", ",", "\"\<None\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<?\>\"", ",", "\"\<1 if k-th-powerfree, 0 otherwise\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<-\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<\[Zeta](s)/\[Zeta](ks)\>\"", ",", 
       "\"\<?\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<?\>\"", ",", "\"\<Von Sterneck function\>\"", ",", "\"\<-\>\"", 
       ",", "\"\<-\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"",
        ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<?\>\"", ",", "\"\<Lehmer Divisor function\>\"", ",", "\"\<-\>\"", 
       ",", "\"\<-\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"",
        ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<?\>\"", ",", "\"\<Ramanujan sum\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(M\), \(k\)]\)\>\"", ",", 
       "\"\<Lehmer Inverse\>\"", ",", "\"\<-\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<M\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<S\>\"", ",", 
       "\"\<Number of divisors of \!\(\*SuperscriptBox[\(n\), \(2\)]\)\>\"", 
       ",", "\"\<-\>\"", ",", 
       "\"\<1*\!\(\*SuperscriptBox[\(2\), \(PrimeNu\)]\)\>\"", ",", 
       "\"\<M\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\""}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<ARF\>\"", ",", "\"\<Remark\>\"", ",", " ", "\"\<Mathematica\>\"", 
        ",", "\"\<Alt. Def.\>\"", ",", "\"\<(C)M/A/-\>\"", ",", 
        "\"\<Inverse\>\"", ",", 
        "\"\<Asymptotic \!\(\*UnderscriptBox[\(\[Sum]\), \(n \
\[LessSlantEqual] x\)]\)\>\"", ",", " ", "\"\<Dirichlet Series\>\"", ",", 
        " ", "\"\<Bell Series\>\""}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7972367655373945`*^9, 3.797236884803892*^9}, {
   3.797236970117671*^9, 3.7972370049302177`*^9}, {3.797237037066684*^9, 
   3.797237040523458*^9}, {3.797237072980253*^9, 3.7972371450179987`*^9}, {
   3.797237210675645*^9, 3.797237284144663*^9}, {3.7972378562419376`*^9, 
   3.7972379472652473`*^9}, {3.7972379903724394`*^9, 3.797238017913464*^9}, {
   3.7972380531228695`*^9, 3.7972381171997576`*^9}, {3.797238183322748*^9, 
   3.7972382285513644`*^9}, 3.797238356823968*^9, {3.7972383969222074`*^9, 
   3.7972384030612307`*^9}, 3.797238458764307*^9, {3.797238598255804*^9, 
   3.7972386293702965`*^9}, {3.7972387374107122`*^9, 3.797238754921446*^9}, {
   3.7972389178876357`*^9, 3.797238949423573*^9}, {3.797239060577543*^9, 
   3.7972390609339514`*^9}, {3.7972390979742804`*^9, 3.797239122901398*^9}, 
   3.7972391788704824`*^9, {3.797242734660542*^9, 3.797242779289898*^9}, {
   3.797323991593075*^9, 3.797324131251282*^9}, {3.797324252907699*^9, 
   3.797324255809094*^9}, {3.7973242888115635`*^9, 3.7973242922008677`*^9}, {
   3.797324573056706*^9, 3.797324573462454*^9}, {3.797327727746457*^9, 
   3.79732783940443*^9}, {3.7973278971165967`*^9, 3.7973279717548532`*^9}, {
   3.797328113339966*^9, 3.7973282567672048`*^9}, {3.797328490029185*^9, 
   3.7973284909894905`*^9}, {3.7973285234672165`*^9, 
   3.7973285777076435`*^9}, {3.7973292156547227`*^9, 
   3.7973292524828587`*^9}, {3.7973293559723253`*^9, 3.797329356617699*^9}, {
   3.797329413107662*^9, 3.797329457592304*^9}, {3.7973295400368423`*^9, 
   3.797329540408251*^9}, {3.7973295735138516`*^9, 3.797329665908766*^9}, {
   3.7973297044323797`*^9, 3.797329720429721*^9}, {3.797329751068718*^9, 
   3.7973297539246745`*^9}, {3.7973297977087297`*^9, 
   3.7973299356867294`*^9}, {3.797330035978756*^9, 3.7973301211516714`*^9}, {
   3.7973303470779085`*^9, 3.7973303675405397`*^9}, {3.797330522302568*^9, 
   3.797330539811192*^9}, {3.7973321056111946`*^9, 3.7973321094799967`*^9}, 
   3.797332281006474*^9, {3.797332347814085*^9, 3.7973325129633102`*^9}, {
   3.7973348040823927`*^9, 3.7973348093500853`*^9}, {3.7973416926729665`*^9, 
   3.797341767228052*^9}, {3.797343372346616*^9, 3.7973434264144735`*^9}, {
   3.797406466857822*^9, 3.797406508471693*^9}, {3.797575956435258*^9, 
   3.797575995455349*^9}, {3.7975767506637173`*^9, 3.79757676868353*^9}, {
   3.79757886912611*^9, 3.797578919530611*^9}, {3.7975789686225386`*^9, 
   3.797578968922269*^9}, {3.7975797053214827`*^9, 3.797579716749736*^9}, {
   3.7975824827606363`*^9, 3.79758248371721*^9}, {3.7975829924337406`*^9, 
   3.79758299654786*^9}, {3.7975830554248776`*^9, 3.797583056045585*^9}, {
   3.7975848986971245`*^9, 3.797584903752351*^9}, {3.7975883843324237`*^9, 
   3.7975883919303493`*^9}, {3.7976569429783444`*^9, 
   3.7976570042996683`*^9}, {3.797657165388465*^9, 3.7976572258337955`*^9}, {
   3.797657285619481*^9, 3.7976572911691465`*^9}, {3.797657556408805*^9, 
   3.7976575744632664`*^9}, {3.7976576086390066`*^9, 3.797657686651658*^9}, {
   3.7977520465798955`*^9, 3.797752050296607*^9}, {3.7980153847742295`*^9, 
   3.7980155257197857`*^9}, {3.798015592061627*^9, 3.7980157048176703`*^9}, {
   3.798015751586655*^9, 3.7980157526250114`*^9}, {3.7980164618869767`*^9, 
   3.7980164665850677`*^9}, {3.798016642195405*^9, 3.7980166607419014`*^9}, {
   3.7984624816202517`*^9, 3.7984624981609917`*^9}, {3.7984626148795795`*^9, 
   3.7984626355907288`*^9}, {3.7993834908450165`*^9, 3.7993835000575457`*^9}, 
   3.7993836064999237`*^9, {3.7993836368872895`*^9, 3.799383637349717*^9}, {
   3.7994055436381555`*^9, 3.799405550404771*^9}, {3.7994055909409084`*^9, 
   3.799405662995284*^9}, {3.7994062368248634`*^9, 3.799406238557459*^9}, {
   3.7994063057432985`*^9, 3.799406318116599*^9}, {3.7994066727568*^9, 
   3.7994066730179186`*^9}, {3.7994067086889353`*^9, 3.799406731263775*^9}, {
   3.7994068161621804`*^9, 3.7994068279988422`*^9}, {3.7994068891478405`*^9, 
   3.7994068922308016`*^9}, {3.7994070560638123`*^9, 3.7994070929481*^9}, {
   3.7994795609054623`*^9, 3.7994795790061803`*^9}, {3.7994796729366817`*^9, 
   3.7994796730367975`*^9}, {3.799482093396386*^9, 3.799482123927994*^9}, 
   3.79948249014421*^9, {3.79948286612393*^9, 3.799482891886905*^9}, {
   3.7994829360811777`*^9, 3.7994829382940946`*^9}, {3.7994830094967427`*^9, 
   3.7994830556177883`*^9}, {3.7995691354180326`*^9, 3.799569142041932*^9}, 
   3.7995692083548827`*^9, {3.799572736566614*^9, 3.799572744953421*^9}, {
   3.7996445855010777`*^9, 3.7996447289313045`*^9}, {3.7996448244601808`*^9, 
   3.7996448298488455`*^9}, {3.7996448945937757`*^9, 
   3.7996449039200068`*^9}, {3.7996449537051888`*^9, 
   3.7996450359523706`*^9}, {3.7996472555331087`*^9, 
   3.7996472609200754`*^9}, {3.799653647000885*^9, 3.7996536516070356`*^9}, 
   3.799654136779707*^9, 3.7996541713263226`*^9, {3.79965420645058*^9, 
   3.799654264343746*^9}, {3.799655275614562*^9, 3.7996552804695573`*^9}, {
   3.799655326542037*^9, 3.799655331052244*^9}, {3.7996553692146206`*^9, 
   3.7996554076068554`*^9}, {3.7996554989413185`*^9, 3.7996555023632*^9}, {
   3.79965790230407*^9, 3.7996579079762697`*^9}, {3.7996579582074385`*^9, 
   3.7996579641461997`*^9}, {3.7996580055364485`*^9, 
   3.7996580116005154`*^9}, {3.799658075090721*^9, 3.7996580828340993`*^9}, {
   3.799666154008635*^9, 3.799666194167477*^9}, {3.799666237744564*^9, 
   3.7996662743828087`*^9}, {3.799759330692809*^9, 3.7997594220600576`*^9}, {
   3.79977808521562*^9, 3.7997781370135546`*^9}, {3.799812072557211*^9, 
   3.7998120730569*^9}, 3.7998297904328756`*^9, {3.7998440733226166`*^9, 
   3.7998440775979714`*^9}, {3.8008639471437216`*^9, 
   3.8008640554350276`*^9}, {3.8008641095725136`*^9, 
   3.8008641442130747`*^9}, {3.800941932296118*^9, 3.8009419557535973`*^9}, {
   3.8009419955619535`*^9, 3.800942082461163*^9}, {3.8009422119679966`*^9, 
   3.800942257202996*^9}, {3.8013802348310843`*^9, 3.801380295396325*^9}, {
   3.801380344870739*^9, 3.8013803561876817`*^9}, {3.801380714066635*^9, 
   3.801380740225103*^9}, {3.8013864534965563`*^9, 3.8013864539496665`*^9}, 
   3.801390578760848*^9, {3.8013946144372606`*^9, 3.801394670513377*^9}, {
   3.8014589659385414`*^9, 3.80145902748678*^9}, {3.8014590641327944`*^9, 
   3.8014590787652507`*^9}, {3.8014591463201933`*^9, 
   3.8014591806760483`*^9}, {3.801459880436472*^9, 3.8014598857004457`*^9}, {
   3.801459967303751*^9, 3.8014599843596754`*^9}, {3.801476855920661*^9, 
   3.8014768699200163`*^9}, {3.8014783034273243`*^9, 3.801478309120784*^9}, {
   3.8016538907459345`*^9, 3.8016539071894183`*^9}, {3.801667966470323*^9, 
   3.8016679960325394`*^9}, {3.8016680960828958`*^9, 3.801668099890047*^9}, {
   3.801749478861636*^9, 3.801749494420245*^9}, {3.80175117497995*^9, 
   3.8017511844322414`*^9}, {3.801751228902465*^9, 3.8017512623012056`*^9}, {
   3.8017522138750534`*^9, 3.8017522423041487`*^9}, 3.8017522739682684`*^9, {
   3.801752319399583*^9, 3.8017523200477123`*^9}, {3.801801451795803*^9, 
   3.801801464393262*^9}, {3.801801648193982*^9, 3.8018016753408055`*^9}, {
   3.801814910366765*^9, 3.8018150146983156`*^9}, {3.8018152516728635`*^9, 
   3.801815269406106*^9}, {3.801978108477476*^9, 3.8019781672573338`*^9}, {
   3.8019782601026554`*^9, 3.8019782840402327`*^9}, {3.8019824563345847`*^9, 
   3.801982492013088*^9}, {3.801982528068801*^9, 3.801982579360976*^9}, {
   3.801982613404452*^9, 3.8019826288193345`*^9}, {3.8019843954135733`*^9, 
   3.8019844331538687`*^9}, {3.8019844652047615`*^9, 
   3.8019844716410756`*^9}, {3.8019847797354937`*^9, 
   3.8019847810921755`*^9}, {3.8019848439684277`*^9, 
   3.8019849405550227`*^9}, {3.801985472079074*^9, 3.8019855106861687`*^9}, {
   3.8019856132054815`*^9, 3.801985675082782*^9}, {3.801986695104598*^9, 
   3.8019867540613146`*^9}, {3.802062970951729*^9, 3.802062993635459*^9}, {
   3.8020633847844734`*^9, 3.8020634264723563`*^9}, {3.802069974958353*^9, 
   3.802069978809571*^9}, {3.8022575633228273`*^9, 3.8022575783212256`*^9}, {
   3.8024049973271284`*^9, 3.802405009260539*^9}, {3.802416357386174*^9, 
   3.802416379801156*^9}, {3.802419272340622*^9, 3.8024192994360957`*^9}, {
   3.8024198018225513`*^9, 3.8024198327711897`*^9}, {3.802695974541159*^9, 
   3.802695978417035*^9}, 3.802777969227388*^9, {3.802778121702602*^9, 
   3.8027781492364655`*^9}, {3.8033549214715633`*^9, 3.803354932812893*^9}, {
   3.803705851380985*^9, 3.803705857473088*^9}, {3.803705894288554*^9, 
   3.8037059382630725`*^9}, {3.8037059711032953`*^9, 3.803705996336035*^9}, 
   3.803706051634448*^9, {3.8037060827860484`*^9, 3.8037060918766813`*^9}, {
   3.803706162539256*^9, 3.8037061653958964`*^9}},
 CellLabel->
  "In[587]:=",ExpressionUUID->"163d618f-dec4-431f-9d2a-074390a020dd"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"ARF\"\>",
       HoldForm], 
      TagBox["\<\"Remark\"\>",
       HoldForm], 
      TagBox["\<\"Mathematica\"\>",
       HoldForm], 
      TagBox["\<\"Alt. Def.\"\>",
       HoldForm], 
      TagBox["\<\"(C)M/A/-\"\>",
       HoldForm], 
      TagBox["\<\"Inverse\"\>",
       HoldForm], 
      TagBox["\<\"Asymptotic \\!\\(\\*UnderscriptBox[\\(\[Sum]\\), \\(n \
\[LessSlantEqual] x\\)]\\)\"\>",
       HoldForm], 
      TagBox["\<\"Dirichlet Series\"\>",
       HoldForm], 
      TagBox["\<\"Bell Series\"\>",
       HoldForm]},
     {"\<\"\\!\\(\\*Cell[\\\"I\\\"]\\)\"\>", "\<\"-\"\>", \
"\<\"Floor[1/n]\"\>", "\<\"-\"\>", "\<\"CM\"\>", "\<\"I\"\>", "\<\"?\"\>", \
"\<\"1\"\>", "\<\"1\"\>"},
     {"\<\"1\"\>", "\<\"-\"\>", "\<\"1\"\>", "\<\"-\"\>", "\<\"CM\"\>", "\<\"\
\[Mu]\"\>", "\<\"?\"\>", 
      TagBox[
       FormBox[
        TemplateBox[{"s"},
         "Zeta"],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"1/(1-x)\"\>"},
     {"\<\"N\"\>", "\<\"-\"\>", "\<\"n\"\>", "\<\"-\"\>", "\<\"CM\"\>", "\<\"\
\[Mu]N\"\>", "\<\"?\"\>", 
      TagBox[
       FormBox[
        TemplateBox[{
          RowBox[{"s", "-", "1"}]},
         "Zeta"],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"1/(1-px)\"\>"},
     {"\<\"\\!\\(\\*SuperscriptBox[\\(N\\), \\(a\\)]\\)\"\>", "\<\"a\
\[GreaterSlantEqual]0\"\>", "\<\"\\!\\(\\*SuperscriptBox[\\(n\\), \\(a\\)]\\)\
\"\>", "\<\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(a\\)]\\)*\[Mu] ; \
\\!\\(\\*SubscriptBox[\\(J\\), \\(a\\)]\\)*1\"\>", "\<\"CM\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]N\\), \\(a\\)]\\)\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(x\\), \\(a + \
1\\)]\\)/(a+1)+O(\\!\\(\\*SuperscriptBox[\\(x\\), \\(a\\)]\\))\"\>", 
      TagBox[
       FormBox[
        TemplateBox[{
          RowBox[{"s", "-", "a"}]},
         "Zeta"],
        TraditionalForm],
       TraditionalForm,
       Editable->
        True], "\<\"1/(1-\\!\\(\\*SuperscriptBox[\\(p\\), \\(a\\)]\\)x)\"\>"},
     {"\<\"\[Mu]\"\>", "\<\"Sum of primitive\\nn-th roots of unity\"\>", \
"\<\"MoebiusMu[n]\"\>", "\<\"-\"\>", "\<\"M\"\>", "\<\"1\"\>", "\<\"?\"\>", 
      TagBox[
       FormBox[
        FractionBox["1", 
         TemplateBox[{"s"},
          "Zeta"]],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"1-x\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(k\\)]\\)\"\>", "\<\"M\
\[ODoubleDot]bius function of order k\"\>", "\<\"nMoebiusMu[k,n]\"\>", "\<\"-\
\"\>", "\<\"M\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[Phi]\"\>", "\<\"Euler Totient function\"\>", \
"\<\"EulerPhi[n]\"\>", "\<\"\[Mu]*N\"\>", "\<\"M\"\>", "\<\"\[Mu]N*1\"\>", \
"\<\"3/\\!\\(\\*SuperscriptBox[\\(\[Pi]\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\) + O(x Log[x])\"\>", 
      TagBox[
       FormBox[
        FractionBox[
         TemplateBox[{
           RowBox[{"s", "-", "1"}]},
          "Zeta"], 
         TemplateBox[{"s"},
          "Zeta"]],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"(1-x)/(1-px)\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(J\\), \\(k\\)]\\)\"\>", "\<\"Jordan \
Totient function\"\>", "\<\"nJordanTotient[k,n]\"\>", \
"\<\"\[Mu]*\\!\\(\\*SuperscriptBox[\\(N\\), \\(k\\)]\\) ; \
\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(k\\)]\\)*\[Mu]*\[Mu]\"\>", \
"\<\"M\"\>", "\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]N\\), \\(k\\)]\\)*1\"\>", "\
\<\"?\"\>", 
      TagBox[
       FormBox[
        FractionBox[
         TemplateBox[{
           RowBox[{"s", "-", "k"}]},
          "Zeta"], 
         TemplateBox[{"s"},
          "Zeta"]],
        TraditionalForm],
       TraditionalForm,
       Editable->
        True], "\<\"(\\!\\(\\*SuperscriptBox[\\(p\\), \
\\(k\\)]\\)-1)/(1-\\!\\(\\*SuperscriptBox[\\(p\\), \\(k\\)]\\)x)\"\>"},
     {"\<\"\[Tau]\"\>", "\<\"-\"\>", "\<\"DivisorSigma[0,n]\"\>", \
"\<\"1*1\"\>", "\<\"M\"\>", "\<\"\[Mu]*\[Mu]\"\>", "\<\"x \
Log[x]+(2\[Gamma]-1)x+O(\\!\\(\\*SqrtBox[\\(x\\)]\\))\"\>", 
      TagBox[
       FormBox[
        SuperscriptBox[
         TemplateBox[{"s"},
          "Zeta"], "2"],
        TraditionalForm],
       TraditionalForm,
       Editable->
        True], "\<\"1/(1-x\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\)\"\>"},
     {"\<\"\\!\\(\\*SuperscriptBox[\\(\[Tau]\\), \\((k)\\)]\\)\"\>", "\<\"The \
number of ways of expressing n\\nas a product of k positive factors\"\>", "\<\
\"nDirichletPower\\n[DivisorSigma[0,#]&,k][n]\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(1\\), \\((k + 1)\\)]\\)\"\>", "\<\"M\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]\\), \\((k + 1)\\)]\\)\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[Sigma]\"\>", "\<\"-\"\>", "\<\"DivisorSigma[1,n]\"\>", "\<\"N*1 \
; \[Sigma]=\[Phi]*\[Tau]\"\>", "\<\"M\"\>", "\<\"\[Mu]*\[Mu]N\"\>", "\<\"\
\[Zeta](2)/2 \\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)+O(x Log[x])\"\>", 
      TagBox[
       FormBox[
        RowBox[{
         TemplateBox[{
           RowBox[{"s", "-", "1"}]},
          "Zeta"], " ", 
         TemplateBox[{"s"},
          "Zeta"]}],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"1/((1-px)(1-x))\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(a\\)]\\)\"\>", "\<\"a\
\[GreaterEqual]2\"\>", "\<\"DivisorSigma[a,n]\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(N\\), \\(a\\)]\\)*1 ; \
\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(1\\)]\\)=\[Phi]*\[Tau]\"\>", \
"\<\"M\"\>", "\<\"\[Mu]*\\!\\(\\*SuperscriptBox[\\(\[Mu]N\\), \
\\(a\\)]\\)\"\>", "\<\"\[Zeta](a+1)/(a+1)\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(a + 1\\)]\\)+O(\\!\\(\\*SuperscriptBox[\\(x\\), \\(a\\)]\\))\"\>", \
"\<\"\\!\\(\\*TagBox[FormBox[RowBox[{TemplateBox[{RowBox[{\\\"s\\\", \
\\\"-\\\", \\\"a\\\"}]},\\\"Zeta\\\"], \\\" \\\", \
TemplateBox[{\\\"s\\\"},\\\"Zeta\\\"]}],TraditionalForm],TraditionalForm,\
Editable->True]\\)\"\>", "\<\"1/((1-\\!\\(\\*SuperscriptBox[\\(p\\), \\(a\\)]\
\\)x)(1-x))\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(GCD\\), \\(k\\)]\\)\"\>", "\<\"-\"\>", \
"\<\"GCD[k,n]\"\>", "\<\"-\"\>", "\<\"M\"\>", "\<\"\\!\\(\\*SubscriptBox[\\(\
\[Mu]GCD\\), \\(k\\)]\\)\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[Gamma]\"\>", "\<\"Core\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"M\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", \
"\<\"(1-(1-p)x)/(1-x)\"\>"},
     {"\<\"\[Lambda]\"\>", "\<\"-\"\>", \
"\<\"LiouvilleLambda[n]\\n(-1\\!\\(\\*SuperscriptBox[\\()\\), \
\\(PrimeOmega[n]\\)]\\)\"\>", "\<\"-\"\>", "\<\"M\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]\\), \\(2\\)]\\) ; |\[Mu]|\"\>", \
"\<\"?\"\>", 
      TagBox[
       FormBox[
        FractionBox[
         TemplateBox[{
           RowBox[{"2", " ", "s"}]},
          "Zeta"], 
         TemplateBox[{"s"},
          "Zeta"]],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"1/(1+x)\"\>"},
     {"\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]\\), \\(2\\)]\\)\"\>", "\<\"1 if \
squarefree, 0 otherwise\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"M\"\>", "\<\"\
\[Lambda]\"\>", "\<\"?\"\>", "\<\"\[Zeta](s)/\[Zeta](2s)\"\>", "\<\"1+x\"\>"},
     {"\<\"\[Lambda]*1\"\>", "\<\"1 if square, 0 otherwise\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"M\"\>", "\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]\\), \
\\(2\\)]\\)*\[Mu]\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]\\), \\(2\\)]\\)*1\"\>", \
"\<\"Number of square-free divisors\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(2\\), \\(PrimeNu[n]\\)]\\)\"\>", \
"\<\"|\[Mu]|*1\"\>", "\<\"M\"\>", "\<\"\[Lambda]*\[Mu]\"\>", "\<\"?\"\>", 
      TagBox[
       FormBox[
        FractionBox[
         SuperscriptBox[
          TemplateBox[{"s"},
           "Zeta"], "2"], 
         TemplateBox[{
           RowBox[{"2", " ", "s"}]},
          "Zeta"]],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"(1+x)/(1-x)\"\>"},
     {"\<\"a\"\>", "\<\"Number of abelian groups\"\>", \
"\<\"FiniteAbelianGroupCount[n]\"\>", "\<\"-\"\>", "\<\"M\"\>", "\<\"?\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(k\\)]\\)\"\>", "\<\"Euler \
Totient function of order k\"\>", "\<\"nEulerPhi[k,n]\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(Faulhaber\\), \
\\(k\\)]\\)*\\!\\(\\*SuperscriptBox[\\(\[Mu]N\\), \\(k\\)]\\)\"\>", \
"\<\"-\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[Nu]\"\>", "\<\"-\"\>", "\<\"PrimeNu[n]\"\>", "\<\"-\"\>", "\<\"A\
\"\>", "\<\"None\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[CapitalOmega]\"\>", "\<\"-\"\>", "\<\"PrimeOmega[n]\"\>", "\<\"-\
\"\>", "\<\"CA\"\>", "\<\"None\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[CapitalLambda]\"\>", "\<\"-\"\>", "\<\"MangoldtLambda[n]\"\>", "\
\<\"-\"\>", "\<\"-\"\>", "\<\"None\"\>", "\<\"?\"\>", "\<\"-\[Zeta]'(s)/\
\[Zeta](s)\"\>", "\<\"?\"\>"},
     {"\<\"L\"\>", "\<\"-\"\>", "\<\"Log[n]\"\>", \
"\<\"\[CapitalLambda]*1\"\>", "\<\"CA\"\>", "\<\"None\"\>", "\<\"?\"\>", \
"\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[Nu]*\[Mu]\"\>", "\<\"1 if prime, 0 otherwise\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"?\"\>", "\<\"None\"\>", "\<\"?\"\>", "\<\"?\"\>", \
"\<\"?\"\>"},
     {"\<\"?\"\>", "\<\"1 if k-th-powerfree, 0 otherwise\"\>", "\<\"-\"\>", "\
\<\"-\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", \
"\<\"\[Zeta](s)/\[Zeta](ks)\"\>", "\<\"?\"\>"},
     {"\<\"?\"\>", "\<\"Von Sterneck function\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"?\"\>", "\<\"Lehmer Divisor function\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"?\"\>", "\<\"Ramanujan sum\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(M\\), \\(k\\)]\\)\"\>", "\<\"Lehmer \
Inverse\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"M\"\>", "\<\"?\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"S\"\>", "\<\"Number of divisors of \
\\!\\(\\*SuperscriptBox[\\(n\\), \\(2\\)]\\)\"\>", "\<\"-\"\>", "\<\"1*\\!\\(\
\\*SuperscriptBox[\\(2\\), \\(PrimeNu\\)]\\)\"\>", "\<\"M\"\>", "\<\"?\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"ARF", "Remark", "Mathematica", "Alt. Def.", "(C)M/A/-", 
       "Inverse", 
       "Asymptotic \!\(\*UnderscriptBox[\(\[Sum]\), \(n \[LessSlantEqual] \
x\)]\)", "Dirichlet Series", "Bell Series"}}]]]], "Output",
 CellChangeTimes->{
  3.801653928705162*^9, 3.8016680020892267`*^9, 3.8016681042460833`*^9, 
   3.8017495021461854`*^9, 3.8017512850271235`*^9, 3.801752331203334*^9, 
   3.8018014708504624`*^9, 3.8018016799844437`*^9, 3.801815020077207*^9, 
   3.8018152741208963`*^9, 3.8019781718562155`*^9, 3.801978291034566*^9, 
   3.8019825855468807`*^9, 3.801982636688262*^9, 3.801984441095993*^9, 
   3.8019844764709177`*^9, 3.8019847848978853`*^9, {3.8019848952370677`*^9, 
   3.8019849108942413`*^9}, 3.8019849459062505`*^9, 3.8019855260044584`*^9, 
   3.8019856886637955`*^9, 3.801986763456809*^9, 3.8020630901578236`*^9, 
   3.802063440071601*^9, 3.802069981098548*^9, 3.8022575888088226`*^9, 
   3.8024050163776765`*^9, 3.8024163850319138`*^9, 3.8024193017593575`*^9, 
   3.802419806699851*^9, 3.8024198374912567`*^9, 3.8026959860412626`*^9, 
   3.8027779742401257`*^9, 3.802778152611266*^9, 3.803354943036064*^9, 
   3.803706011171733*^9, 3.803706058738119*^9, 3.8037060987977514`*^9, 
   3.803706170881019*^9},
 CellLabel->
  "Out[587]//TableForm=",ExpressionUUID->"6b6c944c-597e-46c7-8ef9-\
4e3301a0ab9c"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Example-1",
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.5019607843137255, 0.5019607843137255, 
   0.5019607843137255]]], "Subsubsection",
 CellChangeTimes->{{3.7828068396307926`*^9, 3.782806841526989*^9}, {
  3.7997366854379716`*^9, 
  3.7997366854849415`*^9}},ExpressionUUID->"09a9c9df-99fe-4e36-b5fe-\
3c176165071a"],

Cell[TextData[{
 "So...: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderscriptBox["\[Product]", 
      RowBox[{"d", "|", "n"}]], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"\[CapitalOmega]", "(", "d", ")"}]], 
      SuperscriptBox[
       RowBox[{"\[Mu]", "(", 
        FractionBox["n", "d"], ")"}], "2"]}]}], "=", 
    StyleBox[
     RowBox[{"I", "(", "n", ")"}],
     FontSlant->"Plain"]}], TraditionalForm]],ExpressionUUID->
  "a878275e-13d3-4ca6-9684-f56d6766482d"],
 "?"
}], "Text",
 CellChangeTimes->{{3.7988983337908287`*^9, 
  3.798898478365624*^9}},ExpressionUUID->"14b53f8f-828b-4b9d-a344-\
a468ab54ad02"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"DirichletConvolve", "[", 
       RowBox[{
        RowBox[{"Floor", "[", 
         FractionBox["1", "k"], "]"}], ",", 
        RowBox[{"DirichletConvolve", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"PrimeOmega", "[", "j", "]"}]], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"MoebiusMu", "[", "j", "]"}], "]"}], ",", "j", ",", "k"}], 
         "]"}], ",", "k", ",", "n"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "8"}], "}"}]}], "]"}], "//", 
  "tf"}], "\[IndentingNewLine]", 
 RowBox[{"DirichletTransform", "[", 
  RowBox[{
   RowBox[{"DirichletConvolve", "[", 
    RowBox[{
     RowBox[{"DivisorSigma", "[", 
      RowBox[{"0", ",", "k"}], "]"}], ",", 
     RowBox[{"DirichletConvolve", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Abs", "[", 
        RowBox[{"MoebiusMu", "[", "j", "]"}], "]"}], ",", "j", ",", "k"}], 
      "]"}], ",", "k", ",", "n"}], "]"}], ",", "n", ",", "s"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7978336902073603`*^9, 3.797833715847153*^9}, {
   3.797860608433714*^9, 3.7978606233190327`*^9}, {3.7979179109785347`*^9, 
   3.797917941902741*^9}, {3.7981044441665125`*^9, 3.7981044511150384`*^9}, {
   3.7981713337204704`*^9, 3.798171392021165*^9}, {3.798898492929424*^9, 
   3.7988985119256024`*^9}, {3.799383555567053*^9, 3.7993835581505985`*^9}, {
   3.799482520451276*^9, 3.799482560922038*^9}, 3.799485206535454*^9, {
   3.7996470263390017`*^9, 3.799647027442378*^9}, 3.799653361245256*^9, 
   3.799653488629921*^9, {3.799653540620739*^9, 3.799653542762411*^9}, {
   3.799653769162269*^9, 3.7996538017520933`*^9}, {3.7996538556337404`*^9, 
   3.799653855927557*^9}, {3.799653908385085*^9, 3.7996539221745496`*^9}, {
   3.7996544092670326`*^9, 3.7996544267152367`*^9}, {3.79965449314611*^9, 
   3.799654493463915*^9}, {3.8020664396645255`*^9, 3.8020665714701333`*^9}, {
   3.8020674618550196`*^9, 3.8020674620597544`*^9}},
 CellLabel->
  "In[999]:=",ExpressionUUID->"a2698e06-8f3b-492f-bdf7-841b76d725dd"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1"},
    {"2", "0"},
    {"3", "0"},
    {"4", "0"},
    {"5", "0"},
    {"6", "0"},
    {"7", "0"},
    {"8", "0"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.799653472901656*^9, 3.7996534901040063`*^9}, 
   3.7996535434250007`*^9, {3.7996537854301977`*^9, 3.799653803138236*^9}, 
   3.799653857488592*^9, 3.7996539230210276`*^9, {3.7996544202102604`*^9, 
   3.7996544277386007`*^9}, 3.7996544945462437`*^9, 3.79973659510577*^9, 
   3.802066530245015*^9, 3.8020665745957146`*^9, 3.8020674637259235`*^9},
 CellLabel->
  "Out[999]//TableForm=",ExpressionUUID->"e5e52097-ff9a-461f-acc8-\
d06469462c55"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"Zeta", "[", "s", "]"}], "4"], 
  RowBox[{"Zeta", "[", 
   RowBox[{"2", " ", "s"}], "]"}]]], "Output",
 CellChangeTimes->{{3.799653472901656*^9, 3.7996534901040063`*^9}, 
   3.7996535434250007`*^9, {3.7996537854301977`*^9, 3.799653803138236*^9}, 
   3.799653857488592*^9, 3.7996539230210276`*^9, {3.7996544202102604`*^9, 
   3.7996544277386007`*^9}, 3.7996544945462437`*^9, 3.79973659510577*^9, 
   3.802066530245015*^9, 3.8020665745957146`*^9, 3.8020674637835193`*^9},
 CellLabel->
  "Out[1000]=",ExpressionUUID->"45afbba0-4ecf-4ebf-9a5a-a042f8a2ae49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      SuperscriptBox["2", 
       RowBox[{"PrimeNu", "[", "k", "]"}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "8"}], "}"}]}], "]"}], "//", "tf"}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"caa3cf05-4d08-40ce-b637-14415b90bb10"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1"},
    {"2", "2"},
    {"3", "2"},
    {"4", "2"},
    {"5", "2"},
    {"6", "4"},
    {"7", "2"},
    {"8", "2"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[31]//TableForm=",ExpressionUUID->"f93a73fa-49b5-4f5d-89e8-\
c2f5aa215f23"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Bijection between \[DoubleStruckCapitalN] and \[DoubleStruckCapitalQ] \
", "Section",
 CellChangeTimes->{{3.794663636549914*^9, 3.794663637950187*^9}, {
   3.7960219696311207`*^9, 3.7960220475973544`*^9}, 
   3.798709029250471*^9},ExpressionUUID->"40d3c714-e711-4449-9662-\
b09cb735022c"],

Cell[CellGroupData[{

Cell["Experiments", "Subsection",
 CellChangeTimes->{{3.795012066409512*^9, 3.7950120719300947`*^9}, {
  3.79862816381929*^9, 3.798628203434038*^9}, {3.7987094250938845`*^9, 
  3.7987094273105125`*^9}},ExpressionUUID->"99b84f84-760f-4fba-96cd-\
a24c9c89b930"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"nNaturalToQuotient", "[", "k", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "101", ",", "111"}], "}"}]}], "]"}], "//", 
  "tf"}]], "Input",
 CellLabel->
  "In[422]:=",ExpressionUUID->"f5f9f753-db1e-4021-b7db-ee5a5913c6df"],

Cell[BoxData[
 TagBox[GridBox[{
    {"101", 
     FractionBox["5", "2"]},
    {"102", 
     RowBox[{"-", 
      FractionBox["1", "51"]}]},
    {"103", 
     FractionBox["1", "51"]},
    {"104", 
     RowBox[{"-", 
      FractionBox["2", "13"]}]},
    {"105", 
     FractionBox["2", "13"]},
    {"106", 
     RowBox[{"-", 
      FractionBox["1", "53"]}]},
    {"107", 
     FractionBox["1", "53"]},
    {"108", 
     RowBox[{"-", 
      FractionBox["1", "18"]}]},
    {"109", 
     FractionBox["1", "18"]},
    {"110", 
     RowBox[{"-", 
      FractionBox["1", "55"]}]},
    {"111", 
     FractionBox["1", "55"]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[422]//TableForm=",ExpressionUUID->"087080a2-b78b-4f99-9c2b-\
c07c093db6ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nQuotientToNatural", "[", 
  FractionBox["5", "2"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"nQuotientToNatural", "[", 
  FractionBox[
   RowBox[{"-", "1"}], "53"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"nQuotientToNatural", "[", 
  FractionBox["1", "55"], "]"}]}], "Input",
 CellLabel->
  "In[423]:=",ExpressionUUID->"c04f2df2-18ad-4078-b0f1-94be0edba2c9"],

Cell[BoxData["101"], "Output",
 CellLabel->
  "Out[423]=",ExpressionUUID->"4348722c-aba8-4505-9717-5d32dd29f10f"],

Cell[BoxData["106"], "Output",
 CellLabel->
  "Out[424]=",ExpressionUUID->"68f724ce-831a-4d9b-a7dd-0a096376ca89"],

Cell[BoxData["111"], "Output",
 CellLabel->
  "Out[425]=",ExpressionUUID->"67e4f9f8-ffbf-4e48-aaa8-6996e4f04bfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"nNaturalToQuotient", "[", "k", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "6606600", ",", "6606609"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[303]:=",ExpressionUUID->"204ba2ca-604e-4a1d-9db4-0884ac000498"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6606600", ",", 
     RowBox[{"-", 
      FractionBox["110", "273"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606601", ",", 
     FractionBox["110", "273"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606602", ",", 
     RowBox[{"-", 
      FractionBox["1", "3303301"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606603", ",", 
     FractionBox["1", "3303301"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606604", ",", 
     RowBox[{"-", 
      FractionBox["1", "3303302"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606605", ",", 
     FractionBox["1", "3303302"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606606", ",", 
     RowBox[{"-", 
      FractionBox["1", "3303303"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606607", ",", 
     FractionBox["1", "3303303"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606608", ",", 
     RowBox[{"-", 
      FractionBox["1", "1651652"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606609", ",", 
     FractionBox["1", "1651652"]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[303]=",ExpressionUUID->"ddbe29ae-c97e-4b17-a172-996bbe1f70f2"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["tmp-1 ( Sum expression for Zeta(3) )", "Section",ExpressionUUID->"27993ea5-e291-4fcf-802a-e9b5cd525f22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "4"}], 
     SuperscriptBox["\[Pi]", "2"]}], "7"], 
   RowBox[{"Sum", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"Zeta", "[", 
       RowBox[{"2", "k"}], "]"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "k"}], "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "k"}], "+", "2"}], ")"}], 
       SuperscriptBox["2", 
        RowBox[{"2", "k"}]]}]], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "//", 
  "N"}]], "Input",
 CellLabel->
  "In[125]:=",ExpressionUUID->"30e4362a-8d19-4151-a459-38954891e15b"],

Cell[BoxData["1.2020569062547903`"], "Output",
 CellLabel->
  "Out[125]=",ExpressionUUID->"4e24bc06-badf-4e74-9328-8814c2a8b2af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Zeta", "[", "3", "]"}], "//", "N"}]], "Input",
 CellLabel->
  "In[126]:=",ExpressionUUID->"98423d18-a8e4-45a3-b0d3-839e9918a427"],

Cell[BoxData["1.2020569031595942`"], "Output",
 CellLabel->
  "Out[126]=",ExpressionUUID->"171c1485-49f3-4bbf-bbf2-4c7af6fea5b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "4"}], 
   SuperscriptBox["\[Pi]", "2"], 
   RowBox[{
    RowBox[{"Zeta", "'"}], "[", 
    RowBox[{"-", "2"}], "]"}]}], "//", "N"}]], "Input",
 CellLabel->
  "In[128]:=",ExpressionUUID->"406e9af7-f49d-456a-b32d-41e462737112"],

Cell[BoxData["1.2020569031595945`"], "Output",
 CellLabel->
  "Out[128]=",ExpressionUUID->"d0dae065-0899-4289-8a54-e855bf66eabe"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["tmp-2 ( Research Object 1 )", "Section",ExpressionUUID->"91a5e561-a3d5-405d-9599-621acb255a90"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"IntegerPartitions", "[", "#", "]"}]}], "&"}], ",", 
      RowBox[{"Range", "[", "3", "]"}]}], "]"}], "//", "Association"}], "//", 
   "Dataset"}]}], "\[IndentingNewLine]", 
 RowBox[{"p", ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"FactorInteger", "[", "#", "]"}]}], "&"}], ",", 
      RowBox[{"Range", "[", "10", "]"}]}], "]"}], "//", "Association"}], "//",
    "Dataset"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"[", "6", "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"#", "&"}], ",", "f"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
  RowBox[{"[", "10", "]"}], "]"}]}], "Input",
 CellLabel->
  "In[311]:=",ExpressionUUID->"5ea66255-8476-44f4-9db7-7d5661d10018"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {1, 1}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 2], "Path" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 2, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{41., {25.35052490234375, 29.64947509765625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{41., {25.35052490234375, 29.64947509765625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[314]=",ExpressionUUID->"ccd4a19a-cdb4-479b-9e37-e1cc9b2e8dc3"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {5, 1}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 2], "Path" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 2, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{41., {25.35052490234375, 29.64947509765625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{41., {25.35052490234375, 29.64947509765625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[315]=",ExpressionUUID->"a5c27747-4df4-4f2a-9535-65bff3fc8eb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"p", "\[IndentingNewLine]", "f"}], "Input",
 CellLabel->
  "In[317]:=",ExpressionUUID->"2822b7f1-d943-4ada-b4e6-db73fd552693"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {{1}}, 2 -> {{2}, {1, 1}}, 3 -> {{3}, {2, 1}, {1, 1, 1}}|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 2, 
          DirectedInfinity[1], {All}]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
        TypeSystem`AnyLength], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 2, 
          DirectedInfinity[1], {All}]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
        TypeSystem`AnyLength], 3], "Path" -> {}, "DisplayedRowCount" -> 3, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 3, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{70., {64.35052490234375, 68.64947509765625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{70., {64.35052490234375, 68.64947509765625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[317]=",ExpressionUUID->"24940570-b977-449a-a882-5af24bd835a7"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {{1, 1}}, 2 -> {{2, 1}}, 3 -> {{3, 1}}, 4 -> {{2, 2}}, 
       5 -> {{5, 1}}, 6 -> {{2, 1}, {3, 1}}, 7 -> {{7, 1}}, 8 -> {{2, 3}}, 
       9 -> {{3, 2}}, 10 -> {{2, 1}, {5, 1}}|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 1, 
          DirectedInfinity[1], {All}]]], 10, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength], 10], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 1, 
          DirectedInfinity[1], {All}]]], 10, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength], 10], 
     "Path" -> {}, "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 10, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{5, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{5, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{7, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{7, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{70., {124.35052490234375`, 128.64947509765625`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{70., {124.35052490234375`, 128.64947509765625`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[318]=",ExpressionUUID->"5073efb2-cd3a-4964-a450-1ad50a17c672"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "&"}], ",", 
   RowBox[{"Dataset", "[", 
    RowBox[{"Association", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "->", 
         RowBox[{"FactorInteger", "[", "#", "]"}]}], "&"}], ",", 
       RowBox[{"Range", "[", "10", "]"}]}], "]"}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[332]:=",ExpressionUUID->"ca213c44-fff7-41dc-968d-ef74e58a5d54"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {1}, 2 -> {1}, 3 -> {1}, 4 -> {2}, 5 -> {1}, 6 -> {1, 1}, 7 -> {1},
        8 -> {3}, 9 -> {2}, 10 -> {1, 1}|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`UnknownShape[False]]], 10, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 10], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`UnknownShape[False]]], 10, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 10], "Path" -> {}, 
     "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     10, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{70., {109.35052490234375`, 113.64947509765625`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{70., {109.35052490234375`, 113.64947509765625`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[332]=",ExpressionUUID->"a6836e16-9116-463e-8070-8f8c9fb6ee82"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"p", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"IntegerPartitions", "[", "#", "]"}]}], "&"}], ",", 
      RowBox[{"Range", "[", "3", "]"}]}], "]"}], "//", "Association"}], "//", 
   "Dataset"}]}], "\[IndentingNewLine]", 
 RowBox[{"f", ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "&"}], ",", 
    RowBox[{"Dataset", "[", 
     RowBox[{"Association", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "->", 
          RowBox[{"FactorInteger", "[", "#", "]"}]}], "&"}], ",", 
        RowBox[{"Range", "[", "10", "]"}]}], "]"}], "]"}], "]"}]}], 
   "]"}]}]}], "Input",
 CellLabel->
  "In[333]:=",ExpressionUUID->"6faf4c56-8a8a-4f79-95cd-a7fe55715c4e"],

Cell[CellGroupData[{

Cell[BoxData[{"p", "\[IndentingNewLine]", "f"}], "Input",
 CellLabel->
  "In[337]:=",ExpressionUUID->"e43fa3ae-13f0-4b81-964f-9560aceee46e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {{1}}, 2 -> {{2}, {1, 1}}, 3 -> {{3}, {2, 1}, {1, 1, 1}}|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 2, 
          DirectedInfinity[1], {All}]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
        TypeSystem`AnyLength], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 2, 
          DirectedInfinity[1], {All}]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
        TypeSystem`AnyLength], 3], "Path" -> {}, "DisplayedRowCount" -> 3, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 3, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{70., {64.35052490234375, 68.64947509765625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{70., {64.35052490234375, 68.64947509765625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[337]=",ExpressionUUID->"47101c13-4a1f-4be1-9cae-9c36770cc5ac"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {1}, 2 -> {1}, 3 -> {1}, 4 -> {2}, 5 -> {1}, 6 -> {1, 1}, 7 -> {1},
        8 -> {3}, 9 -> {2}, 10 -> {1, 1}|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`UnknownShape[False]]], 10, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 10], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`UnknownShape[False]]], 10, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 10], "Path" -> {}, 
     "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     10, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{70., {109.35052490234375`, 113.64947509765625`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{70., {109.35052490234375`, 113.64947509765625`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[338]=",ExpressionUUID->"f0ccd9c3-fe6c-416c-8911-ecb32aeb22b3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["tmp-5 ( Research Object 2 )", "Section",ExpressionUUID->"16744f27-e851-44de-9fee-e736ce631986"],

Cell[CellGroupData[{

Cell["Pre-amble tmp-5", "Subsection",ExpressionUUID->"0cd18d76-9d52-4214-8cf2-49db18ece860"],

Cell[BoxData[
 RowBox[{"info", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"1", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], "->", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "5", ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "2", "}"}], "->", 
          RowBox[{"{", 
           RowBox[{"4", ",", "9"}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], "->", 
          RowBox[{"{", 
           RowBox[{"6", ",", "10"}], "}"}]}]}], "}"}]}], ",", 
      RowBox[{"3", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "3", "}"}], "->", 
          RowBox[{"{", "8", "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}], "//", "Association"}], "//", 
   "Dataset"}]}]], "Input",
 CellLabel->
  "In[418]:=",ExpressionUUID->"e576d98b-d28e-49c2-9217-1e3581b6243d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"IntegerPartitions", "[", "#", "]"}]}], "&"}], ",", 
      RowBox[{"Range", "[", "3", "]"}]}], "]"}], "//", "Association"}], "//", 
   "Dataset"}]}], "\[IndentingNewLine]", "p", "\[IndentingNewLine]", 
 RowBox[{"f", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"FactorInteger", "[", "#", "]"}]}], "&"}], ",", 
      RowBox[{"Range", "[", "10", "]"}]}], "]"}], "//", "Association"}], "//",
    "Dataset"}]}], "\[IndentingNewLine]", "f", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"#", "&"}], ",", "f"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
   RowBox[{"[", "10", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"#", "&"}], ",", "f"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], ";"}]}], "Input",
 CellLabel->
  "In[411]:=",ExpressionUUID->"e5d83fbe-6026-43da-9c8a-16dbad50c4a3"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {{1}}, 2 -> {{2}, {1, 1}}, 3 -> {{3}, {2, 1}, {1, 1, 1}}|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 2, 
          DirectedInfinity[1], {All}]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
        TypeSystem`AnyLength], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 2, 
          DirectedInfinity[1], {All}]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
        TypeSystem`AnyLength], 3], "Path" -> {}, "DisplayedRowCount" -> 3, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 3, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{70., {64.35052490234375, 68.64947509765625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{70., {64.35052490234375, 68.64947509765625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[412]=",ExpressionUUID->"9d185394-b0ae-4810-9bc2-93e3e27d2b14"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {{1, 1}}, 2 -> {{2, 1}}, 3 -> {{3, 1}}, 4 -> {{2, 2}}, 
       5 -> {{5, 1}}, 6 -> {{2, 1}, {3, 1}}, 7 -> {{7, 1}}, 8 -> {{2, 3}}, 
       9 -> {{3, 2}}, 10 -> {{2, 1}, {5, 1}}|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 1, 
          DirectedInfinity[1], {All}]]], 10, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength], 10], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 1, 
          DirectedInfinity[1], {All}]]], 10, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength], 10], 
     "Path" -> {}, "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 10, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{5, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{5, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{7, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{7, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{70., {124.35052490234375`, 128.64947509765625`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{70., {124.35052490234375`, 128.64947509765625`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[414]=",ExpressionUUID->"8aa2e1f3-89d4-4c75-a1f1-235626765b26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "&"}], ",", 
   RowBox[{"Dataset", "[", 
    RowBox[{"Association", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "->", 
         RowBox[{"FactorInteger", "[", "#", "]"}]}], "&"}], ",", 
       RowBox[{"Range", "[", "10", "]"}]}], "]"}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[410]:=",ExpressionUUID->"ac9a6875-492f-40cc-8bed-49d8de213790"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {1}, 2 -> {1}, 3 -> {1}, 4 -> {2}, 5 -> {1}, 6 -> {1, 1}, 7 -> {1},
        8 -> {3}, 9 -> {2}, 10 -> {1, 1}|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`UnknownShape[False]]], 10, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 10], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`UnknownShape[False]]], 10, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 10], "Path" -> {}, 
     "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     10, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{70., {109.35052490234375`, 113.64947509765625`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{70., {109.35052490234375`, 113.64947509765625`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[410]=",ExpressionUUID->"8e86b686-69de-430b-9752-bcbaceddb6d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inf2", "=", 
  RowBox[{"info", "//", "Normal"}]}]], "Input",
 CellLabel->
  "In[469]:=",ExpressionUUID->"3ccfbe17-d216-4b54-bbfc-ad8ff2c39425"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"1", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "5", ",", "7"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"2", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "2", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"4", ",", "9"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"6", ",", "10"}], "}"}]}]}], "}"}]}], ",", 
   RowBox[{"3", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "3", "}"}], "\[Rule]", 
       RowBox[{"{", "8", "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->
  "Out[469]=",ExpressionUUID->"c21f5e16-e510-454d-9311-df74ccbad4ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "inf2", "]"}]], "Input",
 CellLabel->
  "In[480]:=",ExpressionUUID->"6f668242-c645-4355-9751-f50999743734"],

Cell[BoxData["Association"], "Output",
 CellLabel->
  "Out[480]=",ExpressionUUID->"df15e6c5-3c93-4aac-adab-6563d806fef7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Append", "[", 
  RowBox[{
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"inf2", "[", 
         RowBox[{"1", ";", "1"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "11"}], "]"}], ",", 
     "13"}], "]"}], ",", "17"}], "]"}]], "Input",
 CellLabel->
  "In[495]:=",ExpressionUUID->"a15caaa9-83fe-4d46-91a4-47ae595db19e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17"}], 
  "}"}]], "Output",
 CellLabel->
  "Out[495]=",ExpressionUUID->"fc1bab8b-165c-4d63-8925-6094459e0af3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["tmp 5.1 - Testing / Experimenting", "Subsection",ExpressionUUID->"241bd142-cde8-4684-b6ca-ca7a6ad353bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Log", "[", 
   RowBox[{"2", "\[Pi]"}], "]"}], "//", "N"}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"dea2ee0c-4e4f-44f0-9b18-18ba4afb2083"],

Cell[BoxData["1.8378770664093453`"], "Output",
 CellLabel->"Out[10]=",ExpressionUUID->"fea1af9e-901d-4c76-a388-0f2905d57916"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"Log", "[", "t", "]"}]], 
    FractionBox["1", 
     RowBox[{"t", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["t", "2"], "-", "1"}], ")"}]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"ZetaZero", "[", "5", "]"}], ",", "Infinity"}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"0344be43-6e24-4750-b0b9-2094d511c65f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.00010189089868972271`"}], "+", 
  RowBox[{"0.00003700539781332788`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellLabel->"Out[9]=",ExpressionUUID->"c5fac19f-a14b-4ed3-afec-92633d8efd7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DirichletTransform", "[", 
  RowBox[{
   RowBox[{"MangoldtLambda", "[", "n", "]"}], ",", "n", ",", "s"}], 
  "]"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"f8ada038-cfee-45f6-8c57-9579991ebc3b"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["Zeta", "\[Prime]",
     MultilineFunction->None], "[", "s", "]"}], 
   RowBox[{"Zeta", "[", "s", "]"}]]}]], "Output",
 CellLabel->"Out[11]=",ExpressionUUID->"476d8604-9c4f-4db4-aec3-8e4eaa7b6d98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "/", "131"}], "//", "N"}]], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"3803716e-3ab6-4b6a-93a0-59f3a4dc49d7"],

Cell[BoxData["0.007633587786259542`"], "Output",
 CellLabel->"Out[12]=",ExpressionUUID->"1c71962b-b1b1-45dc-a326-18444ed9e3a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseMellinTransform", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Log", "[", 
     RowBox[{"Zeta", "[", "s", "]"}], "]"}], "s"], ",", "s", ",", "x"}], 
  "]"}]], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"06d97977-7946-47a3-9dcf-5655b6c3a86d"],

Cell[BoxData[
 RowBox[{"InverseMellinTransform", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Log", "[", 
     RowBox[{"Zeta", "[", "s", "]"}], "]"}], "s"], ",", "s", ",", "x"}], 
  "]"}]], "Output",
 CellLabel->"Out[13]=",ExpressionUUID->"77561ea0-b8e6-4b35-a3bc-12e9593cc88c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MellinTransform", "[", 
  RowBox[{
   RowBox[{"Floor", "[", "x", "]"}], ",", "x", ",", "s"}], "]"}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"d5c3ff5a-d576-4163-9249-74801a3583c0"],

Cell[BoxData[
 RowBox[{"MellinTransform", "[", 
  RowBox[{
   RowBox[{"Floor", "[", "x", "]"}], ",", "x", ",", "s"}], "]"}]], "Output",
 CellLabel->"Out[14]=",ExpressionUUID->"af3d502e-37c0-4aaa-be41-93ea50739288"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DirichletTransform", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "n"], ",", "n", ",", "s"}], "]"}]], "Input",
 CellLabel->"In[97]:=",ExpressionUUID->"9eb4b410-acba-4ae9-9e97-a986760b047b"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["2", 
       RowBox[{"1", "-", "s"}]]}], ")"}], " ", 
    RowBox[{"Zeta", "[", "s", "]"}]}], ")"}]}]], "Output",
 CellLabel->"Out[97]=",ExpressionUUID->"6e834e33-29f4-4972-a3d7-0b3c5140e103"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Zeta", "[", 
  RowBox[{"ZetaZero", "[", "115", "]"}], "]"}]], "Input",
 CellLabel->
  "In[106]:=",ExpressionUUID->"0c29745d-e6ab-4c2e-ab8f-0d23c1bfab28"],

Cell[BoxData["0"], "Output",
 CellLabel->
  "Out[106]=",ExpressionUUID->"92deadeb-e357-4b7a-a985-25659a256656"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DirichletEta", "[", 
  RowBox[{"ZetaZero", "[", "3", "]"}], "]"}]], "Input",
 CellLabel->
  "In[108]:=",ExpressionUUID->"2f61d6f2-6624-4bdf-8f3e-c0204d7e6e5e"],

Cell[BoxData["0"], "Output",
 CellLabel->
  "Out[108]=",ExpressionUUID->"3b76a36a-ca3b-4da6-9be8-57b34e565775"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DirichletTransform", "[", 
  RowBox[{
   RowBox[{"MangoldtLambda", "[", "n", "]"}], ",", "n", ",", "s"}], 
  "]"}]], "Input",
 CellLabel->
  "In[115]:=",ExpressionUUID->"61b99e57-9477-473f-bdab-b0e8da68cf60"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["Zeta", "\[Prime]",
     MultilineFunction->None], "[", "s", "]"}], 
   RowBox[{"Zeta", "[", "s", "]"}]]}]], "Output",
 CellLabel->
  "Out[115]=",ExpressionUUID->"b67a782b-30ef-4561-9630-66c6df903d75"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Arithmetical Functions", "Chapter",ExpressionUUID->"cb3d783c-0a5e-48c0-979f-f66168ac24a4"],

Cell[CellGroupData[{

Cell["Section: Scratch & More & Ideas, etc.", "Section",ExpressionUUID->"ccf69e5f-b1ec-480c-a723-6142516e46c4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SuperscriptBox["2", "5"], " ", 
  SuperscriptBox["3", "4"], " ", 
  SuperscriptBox["5", "3"], "  ", 
  SuperscriptBox["7", "2"], " ", "11"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Divisors", "[", 
   RowBox[{
    SuperscriptBox["2", "5"], " ", 
    SuperscriptBox["3", "4"], " ", 
    SuperscriptBox["5", "3"], "  ", 
    SuperscriptBox["7", "2"], " ", "11"}], "]"}], "//", "Length"}]}], "Input",
 CellLabel->"In[37]:=",ExpressionUUID->"d5caf1f4-7d18-4bc2-be67-96e8c5d2a25d"],

Cell[BoxData["174636000"], "Output",
 CellLabel->"Out[37]=",ExpressionUUID->"f22cebfe-1dac-4c74-b352-f5ff22fb46b1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["*Table of Arithmetical Functions ( -under construction- )", "Section",
 CellChangeTimes->{{3.7971443454340277`*^9, 3.7971443807461643`*^9}, {
  3.797237164033742*^9, 
  3.797237184536951*^9}},ExpressionUUID->"ad410748-a014-4deb-b946-\
9dae16b689db"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Definition",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.7826654768540397`*^9, 3.782665485158893*^9}, 
   3.782715887476343*^9, {3.782716848474037*^9, 3.782716871121205*^9}, {
   3.7827173361574907`*^9, 3.7827173415799327`*^9}, {3.7828031783556767`*^9, 
   3.78280318145585*^9}, {3.7828034538688183`*^9, 3.7828034574366493`*^9}, {
   3.7833530768548527`*^9, 3.7833530903994584`*^9}, {3.783358080038978*^9, 
   3.7833580879180937`*^9}, {3.7853375280890074`*^9, 
   3.7853375294890585`*^9}, {3.7853377669291077`*^9, 3.785337780886693*^9}, {
   3.785589310595995*^9, 3.785589311435477*^9}},
 FontColor->GrayLevel[
  0],ExpressionUUID->"ebfaecb3-08a3-432e-90ff-9a7e5985c8be"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Table",
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.5019607843137255, 0.5019607843137255, 
   0.5019607843137255]]], "Subsubsection",
 CellChangeTimes->{{3.7828068396307926`*^9, 3.782806841526989*^9}, {
  3.7979508055149355`*^9, 
  3.7979508261551304`*^9}},ExpressionUUID->"ad0e0f7f-fe32-40d0-8545-\
a1d3d05a229f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*Cell[\"I\",ExpressionUUID->\"77878252-9a1d-4b58-b066-\
202a47535308\"]\)\>\"", ",", "\"\<-\>\"", ",", "\"\<Floor[1/n]\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<CM\>\"", ",", "\"\<I\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<1\>\"", ",", "\"\<1\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<1\>\"", ",", "\"\<-\>\"", ",", "\"\<1\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<CM\>\"", ",", "\"\<\[Mu]\>\"", ",", "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{"1", ",", "n", ",", "s"}], "]"}], "//", "TraditionalForm"}], 
       ",", "\"\<1/(1-x)\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<N\>\"", ",", "\"\<-\>\"", ",", "\"\<n\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<CM\>\"", ",", "\"\<\[Mu]N\>\"", ",", "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{"n", ",", "n", ",", "s"}], "]"}], "//", "TraditionalForm"}], 
       ",", "\"\<1/(1-px)\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[\(N\), \(a\)]\)\>\"", ",", 
       "\"\<a\[GreaterSlantEqual]0\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(n\), \(a\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(a\)]\)*\[Mu] ; \
\!\(\*SubscriptBox[\(J\), \(a\)]\)*1\>\"", ",", "\"\<CM\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(\[Mu]N\), \(a\)]\)\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(x\), \(a + \
1\)]\)/(a+1)+O(\!\(\*SuperscriptBox[\(x\), \(a\)]\))\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          SuperscriptBox["n", "a"], ",", "n", ",", "s"}], "]"}], "//", 
        "TraditionalForm"}], ",", 
       "\"\<1/(1-\!\(\*SuperscriptBox[\(p\), \(a\)]\)x)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Mu]\>\"", ",", "\"\<Sum of primitive\\nn-th roots of unity\>\"", 
       ",", "\"\<MoebiusMu[n]\>\"", ",", "\"\<-\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<1\>\"", ",", "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"MoebiusMu", "[", "n", "]"}], ",", "n", ",", "s"}], "]"}], "//",
         "TraditionalForm"}], ",", "\"\<1-x\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(k\)]\)\>\"", ",", 
       "\"\<M\[ODoubleDot]bius function of order k\>\"", ",", 
       "\"\<nMoebiusMu[k,n]\>\"", ",", "\"\<-\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Phi]\>\"", ",", "\"\<Euler Totient function\>\"", ",", 
       "\"\<EulerPhi[n]\>\"", ",", "\"\<\[Mu]*N\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\[Mu]N*1\>\"", ",", 
       "\"\<3/\!\(\*SuperscriptBox[\(\[Pi]\), \(2\)]\) \
\!\(\*SuperscriptBox[\(x\), \(2\)]\) + O(x Log[x])\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"EulerPhi", "[", "n", "]"}], ",", "n", ",", "s"}], "]"}], "//",
         "TraditionalForm"}], ",", "\"\<(1-x)/(1-px)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(J\), \(k\)]\)\>\"", ",", 
       "\"\<Jordan Totient function\>\"", ",", "\"\<nJordanTotient[k,n]\>\"", 
       ",", "\"\<\[Mu]*\!\(\*SuperscriptBox[\(N\), \(k\)]\) ; \
\!\(\*SubscriptBox[\(\[Sigma]\), \(k\)]\)*\[Mu]*\[Mu]\>\"", ",", "\"\<M\>\"", 
       ",", "\"\<\!\(\*SuperscriptBox[\(\[Mu]N\), \(k\)]\)*1\>\"", ",", 
       "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"DirichletConvolve", "[", 
           RowBox[{
            SuperscriptBox["j", "k"], ",", 
            RowBox[{"MoebiusMu", "[", "j", "]"}], ",", "j", ",", "n"}], "]"}],
           ",", "n", ",", "s"}], "]"}], "//", "TraditionalForm"}], ",", 
       "\"\<(\!\(\*SuperscriptBox[\(p\), \(k\)]\)-1)/(1-\!\(\*SuperscriptBox[\
\(p\), \(k\)]\)x)\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Tau]\>\"", ",", "\"\<-\>\"", ",", "\"\<DivisorSigma[0,n]\>\"", 
       ",", "\"\<1*1\>\"", ",", "\"\<M\>\"", ",", "\"\<\[Mu]*\[Mu]\>\"", ",", 
       "\"\<x Log[x]+(2\[Gamma]-1)x+O(\!\(\*SqrtBox[\(x\)]\))\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"DivisorSigma", "[", 
           RowBox[{"0", ",", "n"}], "]"}], ",", "n", ",", "s"}], "]"}], "//", 
        "TraditionalForm"}], ",", 
       "\"\<1/(1-x\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[\(\[Tau]\), \((k)\)]\)\>\"", ",", 
       "\"\<The number of ways of expressing n\\nas a product of k positive \
factors\>\"", ",", "\"\<nDirichletPower\\n[DivisorSigma[0,#]&,k][n]\>\"", 
       ",", "\"\<\!\(\*SuperscriptBox[\(1\), \((k + 1)\)]\)\>\"", ",", 
       "\"\<M\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \((k + 1)\)]\)\>\"", ",", 
       "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Sigma]\>\"", ",", "\"\<-\>\"", ",", "\"\<DivisorSigma[1,n]\>\"", 
       ",", "\"\<N*1 ; \[Sigma]=\[Phi]*\[Tau]\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\[Mu]*\[Mu]N\>\"", ",", 
       "\"\<\[Zeta](2)/2 \!\(\*SuperscriptBox[\(x\), \(2\)]\)+O(x \
Log[x])\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"DivisorSigma", "[", 
           RowBox[{"1", ",", "n"}], "]"}], ",", "n", ",", "s"}], "]"}], "//", 
        "TraditionalForm"}], ",", "\"\<1/((1-px)(1-x))\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(a\)]\)\>\"", ",", 
       "\"\<a\[GreaterEqual]2\>\"", ",", "\"\<DivisorSigma[a,n]\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(N\), \(a\)]\)*1 ; \!\(\*SubscriptBox[\(\
\[Sigma]\), \(1\)]\)=\[Phi]*\[Tau]\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\[Mu]*\!\(\*SuperscriptBox[\(\[Mu]N\), \(a\)]\)\>\"", ",", 
       "\"\<\[Zeta](a+1)/(a+1)\!\(\*SuperscriptBox[\(x\), \(a + 1\)]\)+O(\!\(\
\*SuperscriptBox[\(x\), \(a\)]\))\>\"", ",", 
       "\"\<\!\(\*TagBox[FormBox[RowBox[{TemplateBox[{
RowBox[{\"s\", \"-\", \"a\"}]},\"Zeta\"], \" \", \
TemplateBox[{\"s\"},\"Zeta\"]}],TraditionalForm],TraditionalForm,Editable->\
True]\)\>\"", ",", 
       "\"\<1/((1-\!\(\*SuperscriptBox[\(p\), \(a\)]\)x)(1-x))\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(GCD\), \(k\)]\)\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<GCD[k,n]\>\"", ",", "\"\<-\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Mu]GCD\), \(k\)]\)\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Gamma]\>\"", ",", "\"\<Core\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<M\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<(1-(1-p)x)/(1-x)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Lambda]\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<LiouvilleLambda[n]\\n(-1\!\(\*SuperscriptBox[\()\), \
\(PrimeOmega[n]\)]\)\>\"", ",", "\"\<-\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \(2\)]\) ; |\[Mu]|\>\"", ",", 
       "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"LiouvilleLambda", "[", "n", "]"}], ",", "n", ",", "s"}], 
         "]"}], "//", "TraditionalForm"}], ",", "\"\<1/(1+x)\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \(2\)]\)\>\"", ",", 
       "\"\<1 if squarefree, 0 otherwise\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<M\>\"", ",", "\"\<\[Lambda]\>\"", ",", 
       "\"\<?\>\"", ",", "\"\<\[Zeta](s)/\[Zeta](2s)\>\"", ",", 
       "\"\<1+x\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Lambda]*1\>\"", ",", "\"\<1 if square, 0 otherwise\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<-\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \(2\)]\)*\[Mu]\>\"", ",", 
       "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \(2\)]\)*1\>\"", ",", 
       "\"\<Number of square-free divisors\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(2\), \(PrimeNu[n]\)]\)\>\"", ",", 
       "\"\<|\[Mu]|*1\>\"", ",", "\"\<M\>\"", ",", "\"\<\[Lambda]*\[Mu]\>\"", 
       ",", "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"DirichletConvolve", "[", 
           RowBox[{"1", ",", 
            RowBox[{"Abs", "[", 
             RowBox[{"MoebiusMu", "[", "j", "]"}], "]"}], ",", "j", ",", 
            "n"}], "]"}], ",", "n", ",", "s"}], "]"}], "//", 
        "TraditionalForm"}], ",", "\"\<(1+x)/(1-x)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<a\>\"", ",", "\"\<Number of abelian groups\>\"", ",", 
       "\"\<FiniteAbelianGroupCount[n]\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<M\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(k\)]\)\>\"", ",", 
       "\"\<Euler Totient function of order k\>\"", ",", 
       "\"\<nEulerPhi[k,n]\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(Faulhaber\), \
\(k\)]\)*\!\(\*SuperscriptBox[\(\[Mu]N\), \(k\)]\)\>\"", ",", "\"\<-\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", 
       "\"\<?\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Nu]\>\"", ",", "\"\<-\>\"", ",", "\"\<PrimeNu[n]\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<A\>\"", ",", "\"\<None\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[CapitalOmega]\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<PrimeOmega[n]\>\"", ",", "\"\<-\>\"", ",", "\"\<CA\>\"", ",", 
       "\"\<None\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[CapitalLambda]\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<MangoldtLambda[n]\>\"", ",", "\"\<-\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<None\>\"", ",", "\"\<?\>\"", ",", 
       "\"\<-\[Zeta]'(s)/\[Zeta](s)\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<L\>\"", ",", "\"\<-\>\"", ",", "\"\<Log[n]\>\"", ",", 
       "\"\<\[CapitalLambda]*1\>\"", ",", "\"\<CA\>\"", ",", "\"\<None\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Nu]*\[Mu]\>\"", ",", "\"\<1 if prime, 0 otherwise\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<-\>\"", ",", "\"\<?\>\"", ",", "\"\<None\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<?\>\"", ",", "\"\<1 if k-th-powerfree, 0 otherwise\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<-\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<\[Zeta](s)/\[Zeta](ks)\>\"", ",", 
       "\"\<?\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<?\>\"", ",", "\"\<Von Sterneck function\>\"", ",", "\"\<-\>\"", 
       ",", "\"\<-\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"",
        ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<?\>\"", ",", "\"\<Lehmer Divisor function\>\"", ",", "\"\<-\>\"", 
       ",", "\"\<-\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"",
        ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<?\>\"", ",", "\"\<Ramanujan sum\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(M\), \(k\)]\)\>\"", ",", 
       "\"\<Lehmer Inverse\>\"", ",", "\"\<-\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<M\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<S\>\"", ",", 
       "\"\<Number of divisors of \!\(\*SuperscriptBox[\(n\), \(2\)]\)\>\"", 
       ",", "\"\<-\>\"", ",", 
       "\"\<1*\!\(\*SuperscriptBox[\(2\), \(PrimeNu\)]\)\>\"", ",", 
       "\"\<M\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\""}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<ARF\>\"", ",", "\"\<Remark\>\"", ",", " ", "\"\<Mathematica\>\"", 
        ",", "\"\<Alt. Def.\>\"", ",", "\"\<(C)M/A/-\>\"", ",", 
        "\"\<Inverse\>\"", ",", 
        "\"\<Asymptotic \!\(\*UnderscriptBox[\(\[Sum]\), \(n \
\[LessSlantEqual] x\)]\)\>\"", ",", " ", "\"\<Dirichlet Series\>\"", ",", 
        " ", "\"\<Bell Series\>\""}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7972367655373945`*^9, 3.797236884803892*^9}, {
   3.797236970117671*^9, 3.7972370049302177`*^9}, {3.797237037066684*^9, 
   3.797237040523458*^9}, {3.797237072980253*^9, 3.7972371450179987`*^9}, {
   3.797237210675645*^9, 3.797237284144663*^9}, {3.7972378562419376`*^9, 
   3.7972379472652473`*^9}, {3.7972379903724394`*^9, 3.797238017913464*^9}, {
   3.7972380531228695`*^9, 3.7972381171997576`*^9}, {3.797238183322748*^9, 
   3.7972382285513644`*^9}, 3.797238356823968*^9, {3.7972383969222074`*^9, 
   3.7972384030612307`*^9}, 3.797238458764307*^9, {3.797238598255804*^9, 
   3.7972386293702965`*^9}, {3.7972387374107122`*^9, 3.797238754921446*^9}, {
   3.7972389178876357`*^9, 3.797238949423573*^9}, {3.797239060577543*^9, 
   3.7972390609339514`*^9}, {3.7972390979742804`*^9, 3.797239122901398*^9}, 
   3.7972391788704824`*^9, {3.797242734660542*^9, 3.797242779289898*^9}, {
   3.797323991593075*^9, 3.797324131251282*^9}, {3.797324252907699*^9, 
   3.797324255809094*^9}, {3.7973242888115635`*^9, 3.7973242922008677`*^9}, {
   3.797324573056706*^9, 3.797324573462454*^9}, {3.797327727746457*^9, 
   3.79732783940443*^9}, {3.7973278971165967`*^9, 3.7973279717548532`*^9}, {
   3.797328113339966*^9, 3.7973282567672048`*^9}, {3.797328490029185*^9, 
   3.7973284909894905`*^9}, {3.7973285234672165`*^9, 
   3.7973285777076435`*^9}, {3.7973292156547227`*^9, 
   3.7973292524828587`*^9}, {3.7973293559723253`*^9, 3.797329356617699*^9}, {
   3.797329413107662*^9, 3.797329457592304*^9}, {3.7973295400368423`*^9, 
   3.797329540408251*^9}, {3.7973295735138516`*^9, 3.797329665908766*^9}, {
   3.7973297044323797`*^9, 3.797329720429721*^9}, {3.797329751068718*^9, 
   3.7973297539246745`*^9}, {3.7973297977087297`*^9, 
   3.7973299356867294`*^9}, {3.797330035978756*^9, 3.7973301211516714`*^9}, {
   3.7973303470779085`*^9, 3.7973303675405397`*^9}, {3.797330522302568*^9, 
   3.797330539811192*^9}, {3.7973321056111946`*^9, 3.7973321094799967`*^9}, 
   3.797332281006474*^9, {3.797332347814085*^9, 3.7973325129633102`*^9}, {
   3.7973348040823927`*^9, 3.7973348093500853`*^9}, {3.7973416926729665`*^9, 
   3.797341767228052*^9}, {3.797343372346616*^9, 3.7973434264144735`*^9}, {
   3.797406466857822*^9, 3.797406508471693*^9}, {3.797575956435258*^9, 
   3.797575995455349*^9}, {3.7975767506637173`*^9, 3.79757676868353*^9}, {
   3.79757886912611*^9, 3.797578919530611*^9}, {3.7975789686225386`*^9, 
   3.797578968922269*^9}, {3.7975797053214827`*^9, 3.797579716749736*^9}, {
   3.7975824827606363`*^9, 3.79758248371721*^9}, {3.7975829924337406`*^9, 
   3.79758299654786*^9}, {3.7975830554248776`*^9, 3.797583056045585*^9}, {
   3.7975848986971245`*^9, 3.797584903752351*^9}, {3.7975883843324237`*^9, 
   3.7975883919303493`*^9}, {3.7976569429783444`*^9, 
   3.7976570042996683`*^9}, {3.797657165388465*^9, 3.7976572258337955`*^9}, {
   3.797657285619481*^9, 3.7976572911691465`*^9}, {3.797657556408805*^9, 
   3.7976575744632664`*^9}, {3.7976576086390066`*^9, 3.797657686651658*^9}, {
   3.7977520465798955`*^9, 3.797752050296607*^9}, {3.7980153847742295`*^9, 
   3.7980155257197857`*^9}, {3.798015592061627*^9, 3.7980157048176703`*^9}, {
   3.798015751586655*^9, 3.7980157526250114`*^9}, {3.7980164618869767`*^9, 
   3.7980164665850677`*^9}, {3.798016642195405*^9, 3.7980166607419014`*^9}, {
   3.7984624816202517`*^9, 3.7984624981609917`*^9}, {3.7984626148795795`*^9, 
   3.7984626355907288`*^9}, {3.7993834908450165`*^9, 3.7993835000575457`*^9}, 
   3.7993836064999237`*^9, {3.7993836368872895`*^9, 3.799383637349717*^9}, {
   3.7994055436381555`*^9, 3.799405550404771*^9}, {3.7994055909409084`*^9, 
   3.799405662995284*^9}, {3.7994062368248634`*^9, 3.799406238557459*^9}, {
   3.7994063057432985`*^9, 3.799406318116599*^9}, {3.7994066727568*^9, 
   3.7994066730179186`*^9}, {3.7994067086889353`*^9, 3.799406731263775*^9}, {
   3.7994068161621804`*^9, 3.7994068279988422`*^9}, {3.7994068891478405`*^9, 
   3.7994068922308016`*^9}, {3.7994070560638123`*^9, 3.7994070929481*^9}, {
   3.7994795609054623`*^9, 3.7994795790061803`*^9}, {3.7994796729366817`*^9, 
   3.7994796730367975`*^9}, {3.799482093396386*^9, 3.799482123927994*^9}, 
   3.79948249014421*^9, {3.79948286612393*^9, 3.799482891886905*^9}, {
   3.7994829360811777`*^9, 3.7994829382940946`*^9}, {3.7994830094967427`*^9, 
   3.7994830556177883`*^9}, {3.7995691354180326`*^9, 3.799569142041932*^9}, 
   3.7995692083548827`*^9, {3.799572736566614*^9, 3.799572744953421*^9}, {
   3.7996445855010777`*^9, 3.7996447289313045`*^9}, {3.7996448244601808`*^9, 
   3.7996448298488455`*^9}, {3.7996448945937757`*^9, 
   3.7996449039200068`*^9}, {3.7996449537051888`*^9, 
   3.7996450359523706`*^9}, {3.7996472555331087`*^9, 
   3.7996472609200754`*^9}, {3.799653647000885*^9, 3.7996536516070356`*^9}, 
   3.799654136779707*^9, 3.7996541713263226`*^9, {3.79965420645058*^9, 
   3.799654264343746*^9}, {3.799655275614562*^9, 3.7996552804695573`*^9}, {
   3.799655326542037*^9, 3.799655331052244*^9}, {3.7996553692146206`*^9, 
   3.7996554076068554`*^9}, {3.7996554989413185`*^9, 3.7996555023632*^9}, {
   3.79965790230407*^9, 3.7996579079762697`*^9}, {3.7996579582074385`*^9, 
   3.7996579641461997`*^9}, {3.7996580055364485`*^9, 
   3.7996580116005154`*^9}, {3.799658075090721*^9, 3.7996580828340993`*^9}, {
   3.799666154008635*^9, 3.799666194167477*^9}, {3.799666237744564*^9, 
   3.7996662743828087`*^9}, {3.799759330692809*^9, 3.7997594220600576`*^9}, {
   3.79977808521562*^9, 3.7997781370135546`*^9}, {3.799812072557211*^9, 
   3.7998120730569*^9}, 3.7998297904328756`*^9, {3.7998440733226166`*^9, 
   3.7998440775979714`*^9}, {3.8008639471437216`*^9, 
   3.8008640554350276`*^9}, {3.8008641095725136`*^9, 
   3.8008641442130747`*^9}, {3.800941932296118*^9, 3.8009419557535973`*^9}, {
   3.8009419955619535`*^9, 3.800942082461163*^9}, {3.8009422119679966`*^9, 
   3.800942257202996*^9}, {3.8013802348310843`*^9, 3.801380295396325*^9}, {
   3.801380344870739*^9, 3.8013803561876817`*^9}, {3.801380714066635*^9, 
   3.801380740225103*^9}, {3.8013864534965563`*^9, 3.8013864539496665`*^9}, 
   3.801390578760848*^9, {3.8013946144372606`*^9, 3.801394670513377*^9}, {
   3.8014589659385414`*^9, 3.80145902748678*^9}, {3.8014590641327944`*^9, 
   3.8014590787652507`*^9}, {3.8014591463201933`*^9, 
   3.8014591806760483`*^9}, {3.801459880436472*^9, 3.8014598857004457`*^9}, {
   3.801459967303751*^9, 3.8014599843596754`*^9}, {3.801476855920661*^9, 
   3.8014768699200163`*^9}, {3.8014783034273243`*^9, 3.801478309120784*^9}, {
   3.8016538907459345`*^9, 3.8016539071894183`*^9}, {3.801667966470323*^9, 
   3.8016679960325394`*^9}, {3.8016680960828958`*^9, 3.801668099890047*^9}, {
   3.801749478861636*^9, 3.801749494420245*^9}, {3.80175117497995*^9, 
   3.8017511844322414`*^9}, {3.801751228902465*^9, 3.8017512623012056`*^9}, {
   3.8017522138750534`*^9, 3.8017522423041487`*^9}, 3.8017522739682684`*^9, {
   3.801752319399583*^9, 3.8017523200477123`*^9}, {3.801801451795803*^9, 
   3.801801464393262*^9}, {3.801801648193982*^9, 3.8018016753408055`*^9}, {
   3.801814910366765*^9, 3.8018150146983156`*^9}, {3.8018152516728635`*^9, 
   3.801815269406106*^9}, {3.801978108477476*^9, 3.8019781672573338`*^9}, {
   3.8019782601026554`*^9, 3.8019782840402327`*^9}, {3.8019824563345847`*^9, 
   3.801982492013088*^9}, {3.801982528068801*^9, 3.801982579360976*^9}, {
   3.801982613404452*^9, 3.8019826288193345`*^9}, {3.8019843954135733`*^9, 
   3.8019844331538687`*^9}, {3.8019844652047615`*^9, 
   3.8019844716410756`*^9}, {3.8019847797354937`*^9, 
   3.8019847810921755`*^9}, {3.8019848439684277`*^9, 
   3.8019849405550227`*^9}, {3.801985472079074*^9, 3.8019855106861687`*^9}, {
   3.8019856132054815`*^9, 3.801985675082782*^9}, {3.801986695104598*^9, 
   3.8019867540613146`*^9}, {3.802062970951729*^9, 3.802062993635459*^9}, {
   3.8020633847844734`*^9, 3.8020634264723563`*^9}, {3.802069974958353*^9, 
   3.802069978809571*^9}, {3.8022575633228273`*^9, 3.8022575783212256`*^9}, {
   3.8024049973271284`*^9, 3.802405009260539*^9}, {3.802416357386174*^9, 
   3.802416379801156*^9}, {3.802419272340622*^9, 3.8024192994360957`*^9}, {
   3.8024198018225513`*^9, 3.8024198327711897`*^9}, {3.802695974541159*^9, 
   3.802695978417035*^9}, 3.802777969227388*^9, {3.802778121702602*^9, 
   3.8027781492364655`*^9}, {3.8033549214715633`*^9, 3.803354932812893*^9}, {
   3.803705851380985*^9, 3.803705857473088*^9}, {3.803705894288554*^9, 
   3.8037059382630725`*^9}, {3.8037059711032953`*^9, 3.803705996336035*^9}, 
   3.803706051634448*^9, {3.8037060827860484`*^9, 3.8037060918766813`*^9}, {
   3.803706162539256*^9, 3.8037061653958964`*^9}},
 CellLabel->
  "In[587]:=",ExpressionUUID->"53210cbb-a248-43aa-b47a-fa9ba9872beb"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"ARF\"\>",
       HoldForm], 
      TagBox["\<\"Remark\"\>",
       HoldForm], 
      TagBox["\<\"Mathematica\"\>",
       HoldForm], 
      TagBox["\<\"Alt. Def.\"\>",
       HoldForm], 
      TagBox["\<\"(C)M/A/-\"\>",
       HoldForm], 
      TagBox["\<\"Inverse\"\>",
       HoldForm], 
      TagBox["\<\"Asymptotic \\!\\(\\*UnderscriptBox[\\(\[Sum]\\), \\(n \
\[LessSlantEqual] x\\)]\\)\"\>",
       HoldForm], 
      TagBox["\<\"Dirichlet Series\"\>",
       HoldForm], 
      TagBox["\<\"Bell Series\"\>",
       HoldForm]},
     {"\<\"\\!\\(\\*Cell[\\\"I\\\"]\\)\"\>", "\<\"-\"\>", \
"\<\"Floor[1/n]\"\>", "\<\"-\"\>", "\<\"CM\"\>", "\<\"I\"\>", "\<\"?\"\>", \
"\<\"1\"\>", "\<\"1\"\>"},
     {"\<\"1\"\>", "\<\"-\"\>", "\<\"1\"\>", "\<\"-\"\>", "\<\"CM\"\>", "\<\"\
\[Mu]\"\>", "\<\"?\"\>", 
      TagBox[
       FormBox[
        TemplateBox[{"s"},
         "Zeta"],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"1/(1-x)\"\>"},
     {"\<\"N\"\>", "\<\"-\"\>", "\<\"n\"\>", "\<\"-\"\>", "\<\"CM\"\>", "\<\"\
\[Mu]N\"\>", "\<\"?\"\>", 
      TagBox[
       FormBox[
        TemplateBox[{
          RowBox[{"s", "-", "1"}]},
         "Zeta"],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"1/(1-px)\"\>"},
     {"\<\"\\!\\(\\*SuperscriptBox[\\(N\\), \\(a\\)]\\)\"\>", "\<\"a\
\[GreaterSlantEqual]0\"\>", "\<\"\\!\\(\\*SuperscriptBox[\\(n\\), \\(a\\)]\\)\
\"\>", "\<\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(a\\)]\\)*\[Mu] ; \
\\!\\(\\*SubscriptBox[\\(J\\), \\(a\\)]\\)*1\"\>", "\<\"CM\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]N\\), \\(a\\)]\\)\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(x\\), \\(a + \
1\\)]\\)/(a+1)+O(\\!\\(\\*SuperscriptBox[\\(x\\), \\(a\\)]\\))\"\>", 
      TagBox[
       FormBox[
        TemplateBox[{
          RowBox[{"s", "-", "a"}]},
         "Zeta"],
        TraditionalForm],
       TraditionalForm,
       Editable->
        True], "\<\"1/(1-\\!\\(\\*SuperscriptBox[\\(p\\), \\(a\\)]\\)x)\"\>"},
     {"\<\"\[Mu]\"\>", "\<\"Sum of primitive\\nn-th roots of unity\"\>", \
"\<\"MoebiusMu[n]\"\>", "\<\"-\"\>", "\<\"M\"\>", "\<\"1\"\>", "\<\"?\"\>", 
      TagBox[
       FormBox[
        FractionBox["1", 
         TemplateBox[{"s"},
          "Zeta"]],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"1-x\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(k\\)]\\)\"\>", "\<\"M\
\[ODoubleDot]bius function of order k\"\>", "\<\"nMoebiusMu[k,n]\"\>", "\<\"-\
\"\>", "\<\"M\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[Phi]\"\>", "\<\"Euler Totient function\"\>", \
"\<\"EulerPhi[n]\"\>", "\<\"\[Mu]*N\"\>", "\<\"M\"\>", "\<\"\[Mu]N*1\"\>", \
"\<\"3/\\!\\(\\*SuperscriptBox[\\(\[Pi]\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\) + O(x Log[x])\"\>", 
      TagBox[
       FormBox[
        FractionBox[
         TemplateBox[{
           RowBox[{"s", "-", "1"}]},
          "Zeta"], 
         TemplateBox[{"s"},
          "Zeta"]],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"(1-x)/(1-px)\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(J\\), \\(k\\)]\\)\"\>", "\<\"Jordan \
Totient function\"\>", "\<\"nJordanTotient[k,n]\"\>", \
"\<\"\[Mu]*\\!\\(\\*SuperscriptBox[\\(N\\), \\(k\\)]\\) ; \
\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(k\\)]\\)*\[Mu]*\[Mu]\"\>", \
"\<\"M\"\>", "\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]N\\), \\(k\\)]\\)*1\"\>", "\
\<\"?\"\>", 
      TagBox[
       FormBox[
        FractionBox[
         TemplateBox[{
           RowBox[{"s", "-", "k"}]},
          "Zeta"], 
         TemplateBox[{"s"},
          "Zeta"]],
        TraditionalForm],
       TraditionalForm,
       Editable->
        True], "\<\"(\\!\\(\\*SuperscriptBox[\\(p\\), \
\\(k\\)]\\)-1)/(1-\\!\\(\\*SuperscriptBox[\\(p\\), \\(k\\)]\\)x)\"\>"},
     {"\<\"\[Tau]\"\>", "\<\"-\"\>", "\<\"DivisorSigma[0,n]\"\>", \
"\<\"1*1\"\>", "\<\"M\"\>", "\<\"\[Mu]*\[Mu]\"\>", "\<\"x \
Log[x]+(2\[Gamma]-1)x+O(\\!\\(\\*SqrtBox[\\(x\\)]\\))\"\>", 
      TagBox[
       FormBox[
        SuperscriptBox[
         TemplateBox[{"s"},
          "Zeta"], "2"],
        TraditionalForm],
       TraditionalForm,
       Editable->
        True], "\<\"1/(1-x\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\)\"\>"},
     {"\<\"\\!\\(\\*SuperscriptBox[\\(\[Tau]\\), \\((k)\\)]\\)\"\>", "\<\"The \
number of ways of expressing n\\nas a product of k positive factors\"\>", "\<\
\"nDirichletPower\\n[DivisorSigma[0,#]&,k][n]\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(1\\), \\((k + 1)\\)]\\)\"\>", "\<\"M\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]\\), \\((k + 1)\\)]\\)\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[Sigma]\"\>", "\<\"-\"\>", "\<\"DivisorSigma[1,n]\"\>", "\<\"N*1 \
; \[Sigma]=\[Phi]*\[Tau]\"\>", "\<\"M\"\>", "\<\"\[Mu]*\[Mu]N\"\>", "\<\"\
\[Zeta](2)/2 \\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)+O(x Log[x])\"\>", 
      TagBox[
       FormBox[
        RowBox[{
         TemplateBox[{
           RowBox[{"s", "-", "1"}]},
          "Zeta"], " ", 
         TemplateBox[{"s"},
          "Zeta"]}],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"1/((1-px)(1-x))\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(a\\)]\\)\"\>", "\<\"a\
\[GreaterEqual]2\"\>", "\<\"DivisorSigma[a,n]\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(N\\), \\(a\\)]\\)*1 ; \
\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(1\\)]\\)=\[Phi]*\[Tau]\"\>", \
"\<\"M\"\>", "\<\"\[Mu]*\\!\\(\\*SuperscriptBox[\\(\[Mu]N\\), \
\\(a\\)]\\)\"\>", "\<\"\[Zeta](a+1)/(a+1)\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(a + 1\\)]\\)+O(\\!\\(\\*SuperscriptBox[\\(x\\), \\(a\\)]\\))\"\>", \
"\<\"\\!\\(\\*TagBox[FormBox[RowBox[{TemplateBox[{RowBox[{\\\"s\\\", \
\\\"-\\\", \\\"a\\\"}]},\\\"Zeta\\\"], \\\" \\\", \
TemplateBox[{\\\"s\\\"},\\\"Zeta\\\"]}],TraditionalForm],TraditionalForm,\
Editable->True]\\)\"\>", "\<\"1/((1-\\!\\(\\*SuperscriptBox[\\(p\\), \\(a\\)]\
\\)x)(1-x))\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(GCD\\), \\(k\\)]\\)\"\>", "\<\"-\"\>", \
"\<\"GCD[k,n]\"\>", "\<\"-\"\>", "\<\"M\"\>", "\<\"\\!\\(\\*SubscriptBox[\\(\
\[Mu]GCD\\), \\(k\\)]\\)\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[Gamma]\"\>", "\<\"Core\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"M\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", \
"\<\"(1-(1-p)x)/(1-x)\"\>"},
     {"\<\"\[Lambda]\"\>", "\<\"-\"\>", \
"\<\"LiouvilleLambda[n]\\n(-1\\!\\(\\*SuperscriptBox[\\()\\), \
\\(PrimeOmega[n]\\)]\\)\"\>", "\<\"-\"\>", "\<\"M\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]\\), \\(2\\)]\\) ; |\[Mu]|\"\>", \
"\<\"?\"\>", 
      TagBox[
       FormBox[
        FractionBox[
         TemplateBox[{
           RowBox[{"2", " ", "s"}]},
          "Zeta"], 
         TemplateBox[{"s"},
          "Zeta"]],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"1/(1+x)\"\>"},
     {"\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]\\), \\(2\\)]\\)\"\>", "\<\"1 if \
squarefree, 0 otherwise\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"M\"\>", "\<\"\
\[Lambda]\"\>", "\<\"?\"\>", "\<\"\[Zeta](s)/\[Zeta](2s)\"\>", "\<\"1+x\"\>"},
     {"\<\"\[Lambda]*1\"\>", "\<\"1 if square, 0 otherwise\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"M\"\>", "\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]\\), \
\\(2\\)]\\)*\[Mu]\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]\\), \\(2\\)]\\)*1\"\>", \
"\<\"Number of square-free divisors\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(2\\), \\(PrimeNu[n]\\)]\\)\"\>", \
"\<\"|\[Mu]|*1\"\>", "\<\"M\"\>", "\<\"\[Lambda]*\[Mu]\"\>", "\<\"?\"\>", 
      TagBox[
       FormBox[
        FractionBox[
         SuperscriptBox[
          TemplateBox[{"s"},
           "Zeta"], "2"], 
         TemplateBox[{
           RowBox[{"2", " ", "s"}]},
          "Zeta"]],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"(1+x)/(1-x)\"\>"},
     {"\<\"a\"\>", "\<\"Number of abelian groups\"\>", \
"\<\"FiniteAbelianGroupCount[n]\"\>", "\<\"-\"\>", "\<\"M\"\>", "\<\"?\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(k\\)]\\)\"\>", "\<\"Euler \
Totient function of order k\"\>", "\<\"nEulerPhi[k,n]\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(Faulhaber\\), \
\\(k\\)]\\)*\\!\\(\\*SuperscriptBox[\\(\[Mu]N\\), \\(k\\)]\\)\"\>", \
"\<\"-\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[Nu]\"\>", "\<\"-\"\>", "\<\"PrimeNu[n]\"\>", "\<\"-\"\>", "\<\"A\
\"\>", "\<\"None\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[CapitalOmega]\"\>", "\<\"-\"\>", "\<\"PrimeOmega[n]\"\>", "\<\"-\
\"\>", "\<\"CA\"\>", "\<\"None\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[CapitalLambda]\"\>", "\<\"-\"\>", "\<\"MangoldtLambda[n]\"\>", "\
\<\"-\"\>", "\<\"-\"\>", "\<\"None\"\>", "\<\"?\"\>", "\<\"-\[Zeta]'(s)/\
\[Zeta](s)\"\>", "\<\"?\"\>"},
     {"\<\"L\"\>", "\<\"-\"\>", "\<\"Log[n]\"\>", \
"\<\"\[CapitalLambda]*1\"\>", "\<\"CA\"\>", "\<\"None\"\>", "\<\"?\"\>", \
"\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[Nu]*\[Mu]\"\>", "\<\"1 if prime, 0 otherwise\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"?\"\>", "\<\"None\"\>", "\<\"?\"\>", "\<\"?\"\>", \
"\<\"?\"\>"},
     {"\<\"?\"\>", "\<\"1 if k-th-powerfree, 0 otherwise\"\>", "\<\"-\"\>", "\
\<\"-\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", \
"\<\"\[Zeta](s)/\[Zeta](ks)\"\>", "\<\"?\"\>"},
     {"\<\"?\"\>", "\<\"Von Sterneck function\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"?\"\>", "\<\"Lehmer Divisor function\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"?\"\>", "\<\"Ramanujan sum\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(M\\), \\(k\\)]\\)\"\>", "\<\"Lehmer \
Inverse\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"M\"\>", "\<\"?\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"S\"\>", "\<\"Number of divisors of \
\\!\\(\\*SuperscriptBox[\\(n\\), \\(2\\)]\\)\"\>", "\<\"-\"\>", "\<\"1*\\!\\(\
\\*SuperscriptBox[\\(2\\), \\(PrimeNu\\)]\\)\"\>", "\<\"M\"\>", "\<\"?\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"ARF", "Remark", "Mathematica", "Alt. Def.", "(C)M/A/-", 
       "Inverse", 
       "Asymptotic \!\(\*UnderscriptBox[\(\[Sum]\), \(n \[LessSlantEqual] \
x\)]\)", "Dirichlet Series", "Bell Series"}}]]]], "Output",
 CellChangeTimes->{
  3.801653928705162*^9, 3.8016680020892267`*^9, 3.8016681042460833`*^9, 
   3.8017495021461854`*^9, 3.8017512850271235`*^9, 3.801752331203334*^9, 
   3.8018014708504624`*^9, 3.8018016799844437`*^9, 3.801815020077207*^9, 
   3.8018152741208963`*^9, 3.8019781718562155`*^9, 3.801978291034566*^9, 
   3.8019825855468807`*^9, 3.801982636688262*^9, 3.801984441095993*^9, 
   3.8019844764709177`*^9, 3.8019847848978853`*^9, {3.8019848952370677`*^9, 
   3.8019849108942413`*^9}, 3.8019849459062505`*^9, 3.8019855260044584`*^9, 
   3.8019856886637955`*^9, 3.801986763456809*^9, 3.8020630901578236`*^9, 
   3.802063440071601*^9, 3.802069981098548*^9, 3.8022575888088226`*^9, 
   3.8024050163776765`*^9, 3.8024163850319138`*^9, 3.8024193017593575`*^9, 
   3.802419806699851*^9, 3.8024198374912567`*^9, 3.8026959860412626`*^9, 
   3.8027779742401257`*^9, 3.802778152611266*^9, 3.803354943036064*^9, 
   3.803706011171733*^9, 3.803706058738119*^9, 3.8037060987977514`*^9, 
   3.803706170881019*^9},
 CellLabel->
  "Out[587]//TableForm=",ExpressionUUID->"475a17d1-02a5-42f2-a58e-\
967ef8223ffc"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Example-1",
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.5019607843137255, 0.5019607843137255, 
   0.5019607843137255]]], "Subsubsection",
 CellChangeTimes->{{3.7828068396307926`*^9, 3.782806841526989*^9}, {
  3.7997366854379716`*^9, 
  3.7997366854849415`*^9}},ExpressionUUID->"7fd663dc-7019-4275-998e-\
2e8bce23576b"],

Cell[TextData[{
 "So...: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderscriptBox["\[Product]", 
      RowBox[{"d", "|", "n"}]], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"\[CapitalOmega]", "(", "d", ")"}]], 
      SuperscriptBox[
       RowBox[{"\[Mu]", "(", 
        FractionBox["n", "d"], ")"}], "2"]}]}], "=", 
    StyleBox[
     RowBox[{"I", "(", "n", ")"}],
     FontSlant->"Plain"]}], TraditionalForm]],ExpressionUUID->
  "df6bc3b0-6cbd-437d-b383-3d79c28da168"],
 "?"
}], "Text",
 CellChangeTimes->{{3.7988983337908287`*^9, 
  3.798898478365624*^9}},ExpressionUUID->"bfb5380e-1ed0-41b8-a4d7-\
5272c0fac512"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"DirichletConvolve", "[", 
       RowBox[{
        RowBox[{"Floor", "[", 
         FractionBox["1", "k"], "]"}], ",", 
        RowBox[{"DirichletConvolve", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"PrimeOmega", "[", "j", "]"}]], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"MoebiusMu", "[", "j", "]"}], "]"}], ",", "j", ",", "k"}], 
         "]"}], ",", "k", ",", "n"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "8"}], "}"}]}], "]"}], "//", 
  "tf"}], "\[IndentingNewLine]", 
 RowBox[{"DirichletTransform", "[", 
  RowBox[{
   RowBox[{"DirichletConvolve", "[", 
    RowBox[{
     RowBox[{"DivisorSigma", "[", 
      RowBox[{"0", ",", "k"}], "]"}], ",", 
     RowBox[{"DirichletConvolve", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Abs", "[", 
        RowBox[{"MoebiusMu", "[", "j", "]"}], "]"}], ",", "j", ",", "k"}], 
      "]"}], ",", "k", ",", "n"}], "]"}], ",", "n", ",", "s"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7978336902073603`*^9, 3.797833715847153*^9}, {
   3.797860608433714*^9, 3.7978606233190327`*^9}, {3.7979179109785347`*^9, 
   3.797917941902741*^9}, {3.7981044441665125`*^9, 3.7981044511150384`*^9}, {
   3.7981713337204704`*^9, 3.798171392021165*^9}, {3.798898492929424*^9, 
   3.7988985119256024`*^9}, {3.799383555567053*^9, 3.7993835581505985`*^9}, {
   3.799482520451276*^9, 3.799482560922038*^9}, 3.799485206535454*^9, {
   3.7996470263390017`*^9, 3.799647027442378*^9}, 3.799653361245256*^9, 
   3.799653488629921*^9, {3.799653540620739*^9, 3.799653542762411*^9}, {
   3.799653769162269*^9, 3.7996538017520933`*^9}, {3.7996538556337404`*^9, 
   3.799653855927557*^9}, {3.799653908385085*^9, 3.7996539221745496`*^9}, {
   3.7996544092670326`*^9, 3.7996544267152367`*^9}, {3.79965449314611*^9, 
   3.799654493463915*^9}, {3.8020664396645255`*^9, 3.8020665714701333`*^9}, {
   3.8020674618550196`*^9, 3.8020674620597544`*^9}},
 CellLabel->
  "In[999]:=",ExpressionUUID->"1a5cf6fd-6688-4370-bbbf-83eabf77e03e"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1"},
    {"2", "0"},
    {"3", "0"},
    {"4", "0"},
    {"5", "0"},
    {"6", "0"},
    {"7", "0"},
    {"8", "0"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.799653472901656*^9, 3.7996534901040063`*^9}, 
   3.7996535434250007`*^9, {3.7996537854301977`*^9, 3.799653803138236*^9}, 
   3.799653857488592*^9, 3.7996539230210276`*^9, {3.7996544202102604`*^9, 
   3.7996544277386007`*^9}, 3.7996544945462437`*^9, 3.79973659510577*^9, 
   3.802066530245015*^9, 3.8020665745957146`*^9, 3.8020674637259235`*^9},
 CellLabel->
  "Out[999]//TableForm=",ExpressionUUID->"a321da9a-6401-4183-82be-\
cdd0b4375174"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"Zeta", "[", "s", "]"}], "4"], 
  RowBox[{"Zeta", "[", 
   RowBox[{"2", " ", "s"}], "]"}]]], "Output",
 CellChangeTimes->{{3.799653472901656*^9, 3.7996534901040063`*^9}, 
   3.7996535434250007`*^9, {3.7996537854301977`*^9, 3.799653803138236*^9}, 
   3.799653857488592*^9, 3.7996539230210276`*^9, {3.7996544202102604`*^9, 
   3.7996544277386007`*^9}, 3.7996544945462437`*^9, 3.79973659510577*^9, 
   3.802066530245015*^9, 3.8020665745957146`*^9, 3.8020674637835193`*^9},
 CellLabel->
  "Out[1000]=",ExpressionUUID->"3ad35c71-78a0-4ce7-8735-db7dee1d695a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      SuperscriptBox["2", 
       RowBox[{"PrimeNu", "[", "k", "]"}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "8"}], "}"}]}], "]"}], "//", "tf"}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"432573b9-c4d0-4b00-a2be-3264e0b07049"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1"},
    {"2", "2"},
    {"3", "2"},
    {"4", "2"},
    {"5", "2"},
    {"6", "4"},
    {"7", "2"},
    {"8", "2"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[31]//TableForm=",ExpressionUUID->"8a8f1573-0945-4da2-b2be-\
2c9d5209e4b4"],

Cell[BoxData["720"], "Output",
 CellLabel->"Out[38]=",ExpressionUUID->"896dea19-c699-4708-8125-2c52086c9c2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SuperscriptBox["2", "6"], " ", 
  SuperscriptBox["3", "6"], " ", 
  SuperscriptBox["5", "1"], "  ", 
  SuperscriptBox["7", "1"], " ", 
  SuperscriptBox["11", "1"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Divisors", "[", 
   RowBox[{
    SuperscriptBox["2", "6"], " ", 
    SuperscriptBox["3", "6"], " ", 
    SuperscriptBox["5", "1"], "  ", 
    SuperscriptBox["7", "1"], " ", 
    SuperscriptBox["11", "1"]}], "]"}], "//", "Length"}]}], "Input",
 CellLabel->"In[41]:=",ExpressionUUID->"21ec275b-c077-4ce7-97fd-321e3c18c62a"],

Cell[BoxData["17962560"], "Output",
 CellLabel->"Out[41]=",ExpressionUUID->"21c935be-c4ab-4cdf-a530-9f5071fa3313"],

Cell[BoxData["392"], "Output",
 CellLabel->"Out[42]=",ExpressionUUID->"c9da2683-def2-4613-a46d-31a984551dff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SuperscriptBox["2", "11"], " ", 
  SuperscriptBox["3", "7"], " ", 
  SuperscriptBox["5", "5"], "  ", 
  SuperscriptBox["7", "3"], " ", 
  SuperscriptBox["11", "2"]}], "\[IndentingNewLine]", 
 RowBox[{"12", " ", "8", " ", "6", " ", "4", " ", 
  "3"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Divisors", "[", 
   RowBox[{
    SuperscriptBox["2", "11"], " ", 
    SuperscriptBox["3", "7"], " ", 
    SuperscriptBox["5", "5"], "  ", 
    SuperscriptBox["7", "3"], " ", 
    SuperscriptBox["11", "2"]}], "]"}], "//", "Length"}]}], "Input",
 CellLabel->"In[65]:=",ExpressionUUID->"3cd88ca8-3e14-4c10-9532-6b427f3fbfee"],

Cell[BoxData["580909190400000"], "Output",
 CellLabel->"Out[65]=",ExpressionUUID->"66bad4e0-3132-4652-8a09-dd35bbd45d84"],

Cell[BoxData["6912"], "Output",
 CellLabel->"Out[66]=",ExpressionUUID->"820534ed-a7c3-465c-9a9e-ca63ff2d5e2e"],

Cell[BoxData["6912"], "Output",
 CellLabel->"Out[67]=",ExpressionUUID->"b153231d-7d42-4b88-8309-0bc2031f9325"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SuperscriptBox["2", "13"], " ", 
  SuperscriptBox["3", "11"], " ", 
  SuperscriptBox["5", "7"], "  ", 
  SuperscriptBox["7", "5"], " ", 
  SuperscriptBox["11", "3"], " ", 
  SuperscriptBox["13", "2"]}], "\[IndentingNewLine]", 
 RowBox[{"14", " ", "12", " ", "8", " ", "6", " ", "4", " ", 
  "3"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Divisors", "[", 
   RowBox[{
    SuperscriptBox["2", "13"], " ", 
    SuperscriptBox["3", "11"], " ", 
    SuperscriptBox["5", "7"], "  ", 
    SuperscriptBox["7", "5"], " ", 
    SuperscriptBox["11", "3"], " ", 
    SuperscriptBox["13", "2"]}], "]"}], "//", "Length"}]}], "Input",
 CellLabel->"In[61]:=",ExpressionUUID->"e502154b-2535-4d80-b2cd-703395419968"],

Cell[BoxData["428616352408083840000000"], "Output",
 CellLabel->"Out[61]=",ExpressionUUID->"419dae46-58e6-4eb7-9488-beccf27f76cf"],

Cell[BoxData["96768"], "Output",
 CellLabel->"Out[62]=",ExpressionUUID->"86fd10f7-9d92-4b86-afa1-ffa2b7e2b2a3"],

Cell[BoxData["96768"], "Output",
 CellLabel->"Out[63]=",ExpressionUUID->"56db0b7a-504f-485a-84d6-1e497c06e224"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"96768", "/", "6912"}]], "Input",
 CellLabel->"In[64]:=",ExpressionUUID->"574c36ef-e862-4f5f-9238-f655a2af4fb4"],

Cell[BoxData["14"], "Output",
 CellLabel->"Out[64]=",ExpressionUUID->"22e4e555-f05b-4590-a68a-7b0c935329c5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"l1", ":=", 
  RowBox[{"Primes", "[", "2", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"l2", ":=", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"target", ":=", 
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["2", "2"], ",", 
    SuperscriptBox["4", "3"], ",", 
    SuperscriptBox["6", "4"]}], "}"}]}]}], "Input",
 CellLabel->
  "In[106]:=",ExpressionUUID->"2cc80b23-6df9-4955-86aa-a41b689955ea"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["tmp", "Section",ExpressionUUID->"b413bc38-f40e-41ff-9f95-91df4bf5808c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", 
    FractionBox[
     RowBox[{"Log", "[", "2", "]"}], 
     RowBox[{"Log", "[", "12", "]"}]]}], "+", 
   FractionBox[
    RowBox[{"Log", "[", "3", "]"}], 
    RowBox[{"Log", "[", "12", "]"}]]}], "//", "N"}]], "Input",
 CellLabel->
  "In[113]:=",ExpressionUUID->"4f9cfb9d-178f-4921-b4cb-fb1a048a9221"],

Cell[BoxData["1.`"], "Output",
 CellLabel->
  "Out[113]=",ExpressionUUID->"4a644f5d-8fae-4ef8-b546-57ebaa94fe08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"Log", "[", "2", "]"}], 
    RowBox[{"Log", "[", "30", "]"}]], "+", 
   FractionBox[
    RowBox[{"Log", "[", "3", "]"}], 
    RowBox[{"Log", "[", "30", "]"}]], "+", 
   FractionBox[
    RowBox[{"Log", "[", "5", "]"}], 
    RowBox[{"Log", "[", "30", "]"}]]}], "//", "N"}]], "Input",
 CellLabel->
  "In[114]:=",ExpressionUUID->"8be2385e-4870-4bcf-8972-ce19aa6e6d9c"],

Cell[BoxData["0.9999999999999999`"], "Output",
 CellLabel->
  "Out[114]=",ExpressionUUID->"66135b88-cb12-43e3-9384-b331f3c3ab83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nDirichletProduct", "[", " ", 
  RowBox[{
   RowBox[{"DivisorSigma", "[", 
    RowBox[{"0", ",", "n"}], "]"}], ",", 
   RowBox[{"Floor", "[", 
    RowBox[{"1", "/", "n"}], "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[120]:=",ExpressionUUID->"ff723ee4-8607-4d71-a876-3de871e5d568"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"NumberTheory`Private`a$", ",", 
   TagBox[
    RowBox[{
     UnderscriptBox["\[Sum]", 
      RowBox[{"\[FormalN]", "\[Divides]", 
       TagBox["NumberTheory`Private`a$",
        Identity,
        Editable->True,
        Selectable->True]}]], 
     RowBox[{
      RowBox[{
       RowBox[{"DivisorSigma", "[", 
        RowBox[{"0", ",", "n"}], "]"}], "[", "\[FormalN]", "]"}], " ", 
      RowBox[{
       RowBox[{"Floor", "[", 
        FractionBox["1", "n"], "]"}], "[", 
       FractionBox["NumberTheory`Private`a$", "\[FormalN]"], "]"}]}]}],
    InterpretTemplate[
    DivisorSum[#, DivisorSigma[0, NumberTheory`n][#] 
      Floor[NumberTheory`n^(-1)][NumberTheory`Private`a$/#]& ]& ],
    Editable->False,
    SelectWithContents->True,
    Selectable->True]}], "]"}]], "Output",
 CellLabel->
  "Out[120]=",ExpressionUUID->"13aa7ba8-ee18-4077-b8cc-470b9ea2e49a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "k_", "]"}], ":=", 
  RowBox[{"DirichletConvolve", "[", 
   RowBox[{"1", ",", 
    RowBox[{"EulerPhi", "[", "n", "]"}], ",", "n", ",", "k"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"f", "[", "k", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "10"}], "}"}]}], "]"}], "//", 
  "tf"}]}], "Input",
 CellLabel->
  "In[160]:=",ExpressionUUID->"f70f7329-2c68-4a91-98c3-00a10c3d44cf"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1"},
    {"2", "2"},
    {"3", "3"},
    {"4", "4"},
    {"5", "5"},
    {"6", "6"},
    {"7", "7"},
    {"8", "8"},
    {"9", "9"},
    {"10", "10"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[161]//TableForm=",ExpressionUUID->"8dc5ffe6-648b-41f0-86c9-\
149676c22b5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "k_", "]"}], ":=", 
  RowBox[{"DirichletConvolve", "[", 
   RowBox[{"1", ",", 
    RowBox[{"MangoldtLambda", "[", "n", "]"}], ",", "n", ",", "k"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "k_", "]"}], ":=", 
  RowBox[{"DirichletConvolve", "[", 
   RowBox[{"1", ",", 
    RowBox[{"MoebiusMu", "[", "n", "]"}], ",", "n", ",", "k"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "k_", "]"}], ":=", 
  RowBox[{"DivisorSum", "[", 
   RowBox[{"k", ",", 
    RowBox[{
     RowBox[{"MoebiusMu", "[", "#", "]"}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"DivisorSum", "[", 
          RowBox[{"k", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"MoebiusMu", "[", "#", "]"}], 
             RowBox[{"Log", "[", "#", "]"}]}], "&"}]}], "]"}]}], "//", 
        "Simplify"}], ",", 
       RowBox[{
        RowBox[{"f", "[", "k", "]"}], "//", "Simplify"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "10"}], "}"}]}], "]"}], "//", "tf"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"f", "[", "k", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "10"}], "}"}]}], "]"}], "//", "tf", 
  "\[IndentingNewLine]"}]}], "Input",
 CellLabel->
  "In[217]:=",ExpressionUUID->"7c776fd4-3ba0-4632-9c9c-4f3305161e79"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1"},
    {"2", "0"},
    {"3", "0"},
    {"4", "0"},
    {"5", "0"},
    {"6", "0"},
    {"7", "0"},
    {"8", "0"},
    {"9", "0"},
    {"10", "0"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[221]//TableForm=",ExpressionUUID->"e762f65a-4d91-486b-bcbe-\
8e450549dac0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"DirichletTransform", "[", 
  RowBox[{
   RowBox[{"LiouvilleLambda", "[", "n", "]"}], ",", "n", ",", "s"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"DirichletTransform", "[", 
  RowBox[{
   RowBox[{"MangoldtLambda", "[", "n", "]"}], ",", "n", ",", "s"}], 
  "]"}]}], "Input",
 CellLabel->
  "In[222]:=",ExpressionUUID->"6c386109-6837-4612-84d0-82c95520222c"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Zeta", "[", 
   RowBox[{"2", " ", "s"}], "]"}], 
  RowBox[{"Zeta", "[", "s", "]"}]]], "Output",
 CellLabel->
  "Out[222]=",ExpressionUUID->"9bc61d7f-a438-41a7-9a35-1cc8b1ff5679"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["Zeta", "\[Prime]",
     MultilineFunction->None], "[", "s", "]"}], 
   RowBox[{"Zeta", "[", "s", "]"}]]}]], "Output",
 CellLabel->
  "Out[223]=",ExpressionUUID->"31d64e1b-790c-4717-a45a-e687ede68020"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Apostol 11.11 Mystery", "Section",ExpressionUUID->"4a80f327-34a6-4333-a819-45f1cebe2928"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvXWcFMf3/Y0vtlh2cd/g7u7uvrgvGhyCE9zd3YIEDxLcdXEnuAV3WCRA
AvO8f32/1NOfMWYVCHX+mFdPdXV16bnndldXJWvSvmrzMKFCheockZ+qjbsV
6dSpcY9qMfhTo13nVi3aNfMp065LsxbNOuVuEpbAP4i7NXSoUP/v2KKhoaGh
oaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGh
oaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGh
oaGhoaGhoaGhoaGhoRGCeP/+/eHDh1+9emUVfv/+/ZMnTzq58MOHD2fOnLl3
755V+OvXr0nw7du3/srG5cuXSdBflyi8fPlyzZo1//zzT8AuD0L8+++/VMib
N2/snv348eM9AyGcVe777NmzkLyjhsZ/EhcuXGjcuHGoUKGGDh1qDh8/fryH
h0eCBAkcXcio79mzJxc2bNjQHO7r61u8eHHC169f73o2Ll26FD16dH79mf3/
w6ZNm7jjtWvXAnZ5UOHRo0ddunQhJ4sWLbIbYcyYMcmSJXN3d+/WrZuthQom
7N69mzaqXLmyv666evVqoUKFUqRI0adPH6xAIPPw7t07suHj4+OvXhG0oHXo
1U2bNu3bt+/jx4+x6W3btuXv4sWLnVtqIkyaNCnE8qnxNQOOatasmS1hLly4
MFKkSE4IE/3Zr18/W8I8cuRI6dKl/UuYP//8M5f079/fn9n/P6Bmp06dis78
bMyjR48G7BauAK3evn17R4TJuIsYMSIHc+fOzZEjx/Hjx4MvJ2bMmjWLLPmL
MO/evZsuXbp169YtX76ca+GZgN3az88PmuLgzp071apVs+1mIYYXL16UKVMG
eqTTRo0aNW3atEmTJqVmpL2c9wpvb++iRYuGWFY1vnIcOnTIbk/OmTOnE8K0
GMPBljAtn0ao64SJ/EiSJAmX8Hvz5k2XM+5vnDp1KmvWrMGXPhCGsUuY5cqV
c3NzC9a7O0K+fPn8RZgjR46kFHQMpNfTp08D/KgERT127Fg5dtTNQgYIAO5+
+fJljleuXKlygnhGQp8/f97JtRji169fB+y+q1atun79esCu1fg68cUJ87ff
fmvXrp0okDlz5phPrVmzpn79+iNGjCDODz/8UKdOnYcPH1pdLg8GlyxZwtCW
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
VSrXt3DVcBGQA0xiRYxnz56luYN7o6UDBw60bt0a4sK1EVpDZFaqVEm+UoH0
fHx8xD5Wr15dHnTDZmXLli1TpowshnDs2LE0adJYJas+/oIk1bpPmGZk54MH
D2RhPVC/fn1o+fXr1zhKjIu2bdtKebmRXoZdw2I864ajXNz+CYGBdaZf0Z3m
z5+PIQ7a4YMHdPz4cdc/Yf7zzz9xFVesWBGEedAQwFEBWKD+vwp6ZiCXGNX4
bwCTffHiRf8uRf7s2TOu+uJfsqxbtw4pcujQoS+bjf8k/vjjD9S7noKooaGh
4Qp27doFZ/70009fOiMaGhoa3wBevHhhd704DQ0NDQ0NDQ0NDQ0NDQ0NDQ0N
DQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0N
DQ0NDQ0NDQ0NDQ0NDQ0NDY3/JO7evfuls6ChoeE/7N27N3/+/J6enuXKlStT
pkz8+PFDctetlStXFitWLHny5GQgb9683J2DDh06hFgGvggOHjyYIUOGbNmy
femMaGho+BuTJk2SPbXfvHnTunXr0KFD9+3b10n8I0eO7N6922pfzjt37hB4
6tQpf93633//zZIlS7Ro0V59Arpr7NixASjFN4R//vmnadOmqVKl+tIZ0dDQ
8DemTp0KYW7ZsoXjpUuXcoz+gTkLGEABDhw48O3bt5y9ePGij48PpwYNGlSj
Ro0ePXoQyKk2bdq0a9eOwOrVq48ePdrPz2/kyJE9e/asX79+48aNe/fuLbuI
2gXpR48e3e6ply9fQuPc1Cr848ePMK1/i1mxYkUKAs8H68bTVnj8+PHRo0dt
w1u2bCmEifWxMj2bN29++vSp82QpvmzSqqGhEcIwE+bkyZM5Hjx4MMMcqTlv
3rxp06YRIhvH16pVC0pEiHJ8/PjxOHHibN26deLEiQkSJJDd5xnpMWPGXLVq
1eHDh6NGjTpgwAAU44QJExYtWuTo7mbCJCm1s+2aNWsaNGhQtWpVEl+/fj0h
9+7d8/b2LlSoEM5s1qxZrdJB4nbu3DnrJ9hubnX79m3KFTt27Jw5c+IUO98U
EtaqUqWKSg3ethtt+/btnB0zZszOnTvz5MkDDT5//nzOnDn58+c/c+YMZytV
qpQsWbIKFSpY7dhLTCqKykRdY54uXbpEIJeUKlUKeU9SGzZsIGTPnj3t27en
UTgmD82aNXv48CHWp27duvAttikAhkNDQyMwEMIsWrRotWrVvLy8GN2Qya1b
t8KECQOxwJychfSIGS9ePMhBXViiRIly5cqlS5cOtakCc+XKBQNwAJ127Njx
+vXriKjXr187ujuEGS5cOG4KPXLJixcvLAZRwDOiLaELd3f3GzduwEXo1QgR
IkyZMmXu3LnmRGDv1KlTFy9efNy4cTly5IDkb968afd2z549g8dIx9PTE2Fs
dwfeESNG/PDDD926devSpQuMt3r1asmVLRCrSZIk6devH8dwHaVA+C1fvhxC
g59Tpkzp6+sL21OBvXr1Ml8IYVLYP/74gxr+8ccfhw4dSiC2oHbt2hxAmKVL
l7YYBih58uSod4uxMyzmA8lasGBBGmX+/Pkkq3ct19AIYQhhIlcWLlx44cIF
CYQiwoYNCwkg/woXLnz58mUC0ZxWhAntcG3Dhg1VIIQZP358i0GY0E7atGnR
pU7ublaYJC5KrFOnTrCfBN6/f59b9OnTh2OoEj60TQTpBXHJZvTQ/rVr1z5b
6gMHDpDVyJEjQ8XmcD8/P7QfCcpxyZIl5XGEI8CNZElikk+UYc+ePffu3Qtt
RowYkXRaGJg+fbr5KuWSgwIFCrRu3ZoDdCbKFrb38PCIGzeunEU2E5NKQK7/
/vvv0CYmg3ah8qnbVq1afbakGhoaQQizS64ghIkPmzRpUvTY+/fvCUTpWRFm
7ty5cXIdESYijQPnKsjuM0wIEx0lxx8/fiR74mI7IswiRYrIveBM7m73saHC
iRMnOnToACsOGjRo3759Vl4t/Mnt5KErzjViz8qbtsKhQ4cgRkQpvAdpIwKz
ZMkiWYXQPnz4YPeq8ePHmwlT+BmnO1++fLjknFKEicymfqh29DB/kdDUMHXi
JEsaGhrBh+7du0MRaBtzIL4kgcgwUUroHNzPevXqwWPy9G/btm0w6u7du0eO
HJkgQQJ5B/Ho0aOECROKv5w9e/auXbuqoc0B7rntSLdLmNBCtGjRTp48aTHc
0jBhwoj0dUSYlStXhrI4GDVqVNSoUe0+AeDWyL/q1auT2+HDhystbYV79+65
ubnhqhM/Y8aMTZs2NecfdrUtAqRKXVFRiEAOZFrUqVOnOIb5ueTmzZtWk7UQ
82bChGYpJkVu37496WOGFGFK6agBKlOqHZ0vj5TfvHlDRdkthYaGRnBg/fr1
SDJIBi/v7NmzKhxiIRDSgx6XLl2KHps5cyY608fHp0GDBoxTmBP9aTHeZeNy
8heNCsNAEQQyolGYpPDkyRNJcNmyZYx6Kyo7cuQIChaCWrNmjTkcKihXrlym
TJlwQhs1ajRjxgwCubZChQowyYMHD6xKweXorsmTJ+fPn3/x4sV2S4pGJeez
Z8+2+9zSDEgSzTxs2DAyAH9ajLfSkCHhcKDt1KmhQ4cmSpTo+fPnp0+fptSH
Dx+W8Jo1a4YygON/584dFR/TQ/XGihULc3P58uV06dLlzZuXaz09PSkdxIiF
ihIliiJDhC62adOmTVLbxI8RIwZaFMo1N5mGhsbXCbteqnPXFQlqK+quXr16
3MCZM2esTr17905OyRtkACONN2D3hQ7OOJEVP9tCqM9FQF+kpv7i46dPn54C
hgsXzuqZJ+CmKktWc4RWr169du1aq2eqz549k6LdunWLXMkx4vzPP/+ESDEi
lBTafPz4scT38/P79ddfzQVBiCJZV65c6XqJNDQ0NEIGaFfU5qRJk9zd3Z2/
A9LQ0ND4zrFv3z4UZpkyZbJly4Y+/NLZ0dDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ
0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0PgMzp49
O96ErVu3fukcafgbx01wtNLpN4Rz5849evTINvzJkyeyv5UtrJbJ0tAIJsyZ
M2fFihVRokQpWrTowoULa9as+aVzpOE/3Lp1K0uWLJUrVw4VKtTIkSOTJUt2
5MiRL52pgOPp06dZs2a9e/eu7akHDx7kzJlz9uzZVuH//PNP2LBhT58+HSIZ
1PgmwTDJkyfP8OHDA3AtHezw4cNqv90XL15EjBhxx44dHw0EaTY1Po9Xr15h
swoVKiQL+7t41fv372UHEGm1du3aFStW7O+//7ZdsPSzoAPIjgN79+4dNGgQ
As9fl5PnLl26VKxYUbbtIzPLli0bPXq0bcy//vpr7ty5jjYuAZyKGzeuk3Wh
yWqpUqVkjy0FDASe0du3b729vStVqiQbymhomNG+fXtkoe12up/F48ePCxcu
jBopWbKkhODH8dd2EWONEMDz58+jRo1aokSJyJEjT5kyxZWNg2GkqVOnenp6
1qtXz8/PTwKzZ8/eoEGDAGSAFPr16/fLL7907949R44cu3bt6tGjh/NdmK0A
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
6S9SpEjFihVduTw4CNNizJzRc4BdBISpFKZCq1atzO8fnSwGAmHWqFEjqDIj
D/fixIkT73/h7u7ur4k3586dkzf706dPh/avXLmCI3z69Ono0aPjOH/2ctvF
NyyGfTx58uTBgwf9/Py6d+9uK1MhTLSx3lpFwwnGjx/fuXNnq0BPT095N/FZ
QJjyXaHGl8LSpUsrVapkFZgpU6YSJUq4smhSEC6+gfGFiLo6wGc3I1O4f/8+
7Jo9e/Zp06Z5e3tDlVhPvDYITS2K7hy3bt0KHTq01ccF8G2MGDGw702bNoXD
5dt/M8qWLWu7bIiGhsKFCxeyZctmNfeDzhkmTBhXZtBZDMJ0fSBoBDkePnyY
NGlSqykEb968weS5OPaDdrWioEKdOnXohGjLyZMnx40b17+XYynKlClj+y6V
pDJkyIDTXbVqVas1h8+ePZs8eXLzfFcNDTMw2bVr17ZdVWbYsGF4VXguriRS
vXp1VwgTtVOvXr2cOXO2a9euYMGCAd4sRsMM2JL6t22pO3fu0ILz5s1zJREI
Uy3E5AgQcpMmTWRGKE3ZqFEjeb4dAKASzROVHSFt2rTyoKBbt24B+44AGWlV
A2vWrAkfPrwsH2deskAAORcpUiQAN9L4HgBbpkmTZuLEiYsXL160aJH5Qwk6
aqpUqVxcq79WrVp2NwIw4+7du3hS/fv3xw+6fPkyHdVfS25q2MWDBw8wPb6+
vuioq1evbtq0SZ3q0qULhGmenO8EJUuW/Kys+vDhQ69evXbu3EmyK1as6NOn
j9X6ey9evIBU1VNBDtRXV+b9ImfNmhU9evTPWthr167FihVLSlStWjXcfFcK
YoXNmzfD7eYQOjkO0aNHj86dO4csl29UVQHbt29/4MCB/4+9sw6v4nj/dhLc
vbgUSyC4F2twS5HiUNyLa3C3UqQUpwR3Ke4Q3AsEdwsQ3IIECTnv/Tvzstd+
95ycHKLIc/9xrj2zs7OzszOfeZ7d2ZkQnEj4Hhg+fHgWHdrs0wsWLIgXLx6e
i+1ZdFC/v/76C9WtXr26FkgT/ucT48aNM6x2gYWJlxQe1/J9gsnnoEP7/j0g
IECNKbLRkaEP9JVjx4599eoVzrv+q2o8Du0D9qNHj+rHKnBbqRuWC+aizHnz
5u3Tp4+Li4sKadSokVa16tSpo//QO9hZ+GD+/Pno6tOnT+lqM2XKlD9//pMn
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
1tmCPHnyFCtWLDRZSp8+/YkTJ9q3b1+tWrXQpBOuPHjwgCu1Z5oRYmbNmvXS
pUsRkCtBECKGiRMnOjg43L17157Ir169ihEjhkMQdOrUyc6TYt/euHFDmalz
5849efIkG61bt54zZ07atGltDPOOdBYvXqyfqIR+hwvRhtzfu3dPW3oDBg4c
aNtzFwTh6+Knn37CC7axgpge9GH16tULrUG4GjRoD76+viVKlMidO/f06dPT
pUuXMmVKFf748WM7pTtSuH79Olm9fPmyFoI8NmrUCBP96tWrK1aswKRcsGCB
tvfFixfu7u5WF3cTBOGr4+XLl0mSJBk5cmTEn7pp06ZRokTByJw9e7Y2vdsX
jqenZ5UqVQyBdCIlzbRp08ay32nYsKHVBSsFQfjqQK9wpdUUlGHCgwcPLJeq
sQQfNlWqVIhPYGBg//79bXw5+EXRuHFjq4OpJkyYQDFanZVowIABamFNQRC+
djp06GD/A0x7GDhwICZrsNFOnz6NG6tmLipWrJjlStxfIE+ePMmbN6/Vj9Bn
zZpFMW7fvt1yF3469nNETvchCEKYg2mHaqVPnz5mzJinTp2yHXn8+PGVKlXC
iV65cqXJ/GpjzJgx2IdqzGTv3r21mFeuXLFHMJcsWZI5c2aT2dR0dHQkcXsm
jYxcvLy8KCvL8ICAgHbt2pUvX7569eqXLl0yLPZx69atdOnSrV27NqKyKQhC
2PPx48d/PnHgwAHbkadPn44Muri4qElu/fz8Fi9ePPcT+vW51EqUwZ790KFD
f//9t8k8TyYe68KFC0N3NZ8Nxu3QoUOtTigXFFx7woQJ9SGUYYECBdzc3Hx9
fc+fP68eMlhOWlKwYEGZzVIQvh8wI4cNG1a0aFElmDiYnTt3bvcJ/VThV69e
tUcwI51ffvnlc9d96N+/f7ly5fQhWOmbN29Wg/9N5lXFb968aXkggtmgQYPQ
5FYQhK8Ff39/PHeMsWTJktWvX992ZMw2XOxJkyZFTN5CzMiRIz9XMCtXrmwQ
TDvBhBbBFITvh/fv36tfnFDbMd+asXNUZySiF0xMxIULF5YpU4ZANd2Qyexu
q6XDx40bt2vXLv4imOXLlw/Bubp165YuXbqwzL0gCEIEogmmn59ftWrV/vzz
zwMHDjg7Ozds2DAgIMBkHs8/bNiw8ePHOzk5FShQ4MKFCwgm9nMIzoVgpk2b
NqyvQBAEIYLQBHPQoEG5c+dWgdu3bydQLQaRMGHCHTt2sJEzZ87mzZubzC55
yARz8ODBIpiCIHy9aILZ2owKxNokUI0zx9rs0qWLySyY6q2WpWD26dOnggVj
x441nEssTEEQvmr0gqlZmEow1VScvXv3dnFxadu27YwZM9QyHOKSC4LwfaIJ
Jm64k5PT1KlTTebRoTly5FDDhDJmzNiyZcvRZtTKmAhmyBbWEcEUBOGrZtq0
aYMHD966dWtgYOCaNWvKlSuH9digQQM1aXxAQABmZ+nSpcuYyZw5865du7A2
QzasSN6SC4LwDYN4dujQQQ2m+vjx44gRI/DTR40aFTLB7Nixo4zDFAThWwVt
jBkz5i+//NKuXbs2bdpgWxK4fPnykE1DJ1/6CILwbbNjxw5c6Z49e+7evVuF
7N+/3+rkGybzfMgm89R2akiSAfmWXBCE7413797hkk+bNk0fGBAQgPOeKFGi
06dPu7i4xI0b9+LFi/oI3t7e7D1x4kTEZlYQBCGS6dix47hx4wyBK1ascHBw
6NKly61bt6JGjXrw4EH93sGDB9eqVcvPzy8CsykIghD5DBw4EM00BGJhxooV
68qVK4cPH44SJYphcXY3NzcUNQLzKAiC8EVw+fLlXLly6UMCAwNz5sypFvqZ
N29e9uzZ9XvfvHlTqVIlbf43QRCE74cPHz40bdp027ZtWghiiD+unluqSdf1
awR37dpVDYkXBEH4DvH19a1Ro4b299WrV/ny5VNueNmyZStUqKCttfHkyZP8
+fN/yasGC4IghDfDhg2zuhSagfbt23t6ekZAfgRBEL5YHj9+XKZMmQsXLtiI
4+3tXbVqVX9//wjLlSAIwpfJ6dOnS5QoEdTE8ihqihQpcMkjOFeCIAhfJidP
nrQxHF0GXgqCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIIQtV69effXqlSHw1KlTQc03eP36dS8vr3DKzPv378+f
Px9OiQuCIISGlStXRokS5fDhw4bwsmXLtm3b1jL+unXrkiVLVrp06fDIjL+/
v4uLS4YMGcI22Rs3bkyaNGn06NGGFatDxtGjRw9acPbs2dCn/Llw76qYqVev
3oMHDwipVauWChk4cGDE58cGFStWPHnypNpevHgx90L7aw/379/v2LHj06dP
wzxjfn5+t27dCvNkvzd8fHy+ijRDT2BgIIJZrVo1Q3hAQMDHjx+tHvLLL7/Y
Fkzk13LxaDszs2zZMnsEE9U6cOCAPWlismbLlm2KGVdXVyUsIQbrl+IqVapU
njx5HBwcUqVKVaZMmQIFChASmmRDxrNnzzgv2Zg8ebK6WY8fP+Zv/PjxX7x4
EfH5sUHVqlXV3JV9+/ZFz6lv7u7u9h++adOm5MmTHzp0KMwzNmHChHLlytmO
E1RD+FZJkyZN+/bt7Y9Pb0ij2LdvX1hl4O7/a++sw6Q4vq+Puy2yiwR3De5h
g7u7u0OQZXG34A7Bg7u7S4K7u7sEh2CB+X3evm/66W/3zOzs7LILpM4f+/TW
VFdXV90699zq6uq7dxmqlPnx48fAKtNfmD17to+Pz9GjR1evXs3B9OnTSdy6
deuIESM4CBMmDBz45s0bPLhuG4y4S5cuyTEKjRMx2nfv3tn+JUzyDx06FHFl
uhaZc+bMmTt3bt28KQf+lA1d379/D53i0//44w/EqvELAhcvXuQqXbp00QmT
U55qgL2NlyAlS5Ys/fv3//vvv/XEzZs379q1y3rvdH3cuHHlGAHWtGlTUwYK
Wb58OW1inZewom/fvtScAzgKapo2bRrHhw8fbtasmZ/n+guYiitb4Pbp04dq
nDp1Sk8JGTJkrFixArcygYg8efJgDDT1t6Lr8LObNm0K7loEKfAgv/76q/M8
jJrff/9djrF/jDDghAn5MIrlmJCQMoOLMBnXsOK8efOIg+LFi9e8eXMSZ86c
KezBTwkSJEiWLBmUDl9RbZoiQoQInTp14tcdO3akSJFi/fr1+fPnh/bhSQgz
cuTI5Pfw8KA0eNh4LYLTH3/8kVPWrl3Lv3PnzkVO/Pzzz1GiRDl//vygQYO4
SoECBYoVK4Yja9iwoV5Dsg0cODBVqlRCmBBvtWrVMNekSZPq1C2A3KgAORcu
XMi/V69erVq1at26dbko9TfdO3UeNmyYHA8ePJizjCITUiLDuHHj2rVrx4Ek
jhkzhprAgb169XLUpN26daND9Xt3hWydqL5Xr15B5gSq1AcjIaCmDTNmzLhy
5UrnZfpJmJTQpk0b2n/SpEmUTB3wIB07dsT3+fr6tmzZknPp8R49euzevdum
SXfUIK7w/v37jur/+PHjX375Rb7GiIDHBSMaaS5vb+979+5ZK4nuhSQvXLhA
mTFjxkyTJo3+YUfB8+fPhw8frvs7DPXGjRvGDE+ePMGp2bQYZMqUKfQOF7Vu
t44GoIu5F71BMDkMmLhgwYIFJ0+eNOWn2XHf27Zts2khFdXDod++fVu/0+3b
t9OYNWvWlCkXjB9HSX7d0WN7WA6JJ06c0OfeaQQKEXWhw/Sv6e4Ya1euXNHz
0KqUoF8FhcC/Yre0lbWRyaBzi5MLuQj6SCcuu+ASderUQRRJTXTCxAmieYw5
UVm636fvsATqyb08ePDAWuyyZcty5Mghxzph0svGWJIUsYQvDUJI0ZN58+aF
r+gLuEs+vQdhNm7cmI6YM2cOlcSKGEEZMmSoXbs2LQN9YQxkg0VJocIQJjqB
eJCcCRMmhG1M16pYsaIEXIwseHLs2LHwITwJ5ZKYPHnyAQMG2DSRRtdIQ6VL
lw6DsWkOXQizfv36XIgDiNfavOQRbqQaFLho0SKOL1++HDZs2Pnz5xtzcnc6
YVITbtAoRDEMMtAaS5Ys4YDuphCYHBvGGPr16+eoPYsUKUIkLl93dRHofG7K
7k84DrQ6RE3TwZywJSMdJ75u3bpZs2Y5KVMIE6bq3LkzNFivXj3+1QmTDqWn
GMhbtmwhpOVXOpTejx49uk1zH2QWGsmXL98xDbly5SJzpkyZZNaFfsRhHTly
hH7nJ3hvz549XI4KR4oUafHixbRAtmzZKIfKo/npDmsl6SkyQD6MLFwzFcAb
GjNwFhXgolAWXRA1alT4zZgBygoXLhwl0EoVKlQgBYI1DRxuhDyYdKVKlega
SI+YBYceP3587oKwMVq0aCZDgksTJUqEN4HAOSVOnDgwPyZNAwo7QQJUhkQK
Z+Bz4/jQ2LFj00f8igvAyULg9FeMGDHQIRAdF8KwJciCTrFnHASjj5rY/UI6
XIcBT506FQkhhoo4odgGDRpwisy64yBowFatWnGMoVKasQRCHiophcNInGV0
oCb4OY2/cePGUKFC0ctIHQzG7jQIAiZixIjcMj7X9i9hoks9PT0ZRIwym8Zs
hQsXFl20dOlS+oJ+pwvIRmZ6isYxVYycsAR9bfuXMGEAbBWWkC/Rk6dUqVII
ibRp037ppwY9e/aEKnEByEJqQn24F/mJe6xRo4bURwiTY0YB9Hj27FlSTHrA
OIeJzsQkTNfSCXPVqlU0ES2/RAPjzqYRJgONAxpBCBNxqE+iQp5CmHQcrccg
pbWtt0Mehqdkw1p0SYAt6U5KvzsnhAkYpB06dKAL+IlxylhOnTo15XDsyFnj
K7nxypUrO2ptTGisBXgo5B/VM8Xa165dQ1PJMZxAm+jKlgs5nw0WwiS/tDDa
20iYjB0aX45pZH7CWaOpCB/wZdAjKZyCrKpevTp54CL6HTZgjON6kAdQCnnE
l2Hwd+7cgWGQQ9wOB3ALFISCJQ9VdVRJaIQ+4tY4xhHjna15kOgwM2aAdKRB
jJMtNi2m4BK4D+w2fPjw+GgIzfRFSNw6Vsc4RRiQGcdHIqKdYm2aiqMOWJfp
ujQLhIlCgPcYxYxrWoNBCv9LBkhA4lPIAQbgxmklyl+xYgUNjhnYNEsmBW6h
ZeBn7FzahHoygiBYYiUy2112ggtAVDD8aQFif9oKhS+hX9asWcXGoEEiIwkM
J0+eDJsZS6DyXIjBQnQAXbdt29Y63UGr/vTTT9SfXsMCIfMqGqwODnvDSmkE
fCLc5UgS4DvEc9n+JUzMm6FECzDA6YVGjRrhwbk7GJLRSsPi4+g7okKyYaIy
fo1An0AXciyESYMgRylBCApZhWwjFIJa6TWTkQQu0EvhNOCJYCGaFwqVn2QO
02YhzK5duwph6voczwKHoEyMhNm+fXvTtSBMBpdN02/wM4VIujgF8ae2/yVM
bEPy6IQJMAwMhuqhlEyXIA9RoU0jTKQOw1/SaVuoz5TTSJgoHKNrQ5AgbIhA
aRYhTEnkuvxrd52ATeMxfhXFbhdUuKsF2A9nIR5MsSFDWxSy7d/hY1SVVgFv
hJOQnFED6enzb8I56DeMmUb47bff+vbti30yghhNUoHEiROjjl5qEDMgUEVI
SADC+II5KZ94Yb0GRiijlV+dEyZFRY4c2TlhAgwJa2FkWX/SCZOrEAIjb7gF
rm7KhpaGM2lhI2ESC8ivWIKVMMnA0OMAJ45lSmLBggUZ3XKsEyaiEcW1/l9A
KbQtNcGc6DVUGQ0OKdFKeh6YnxNpYdjVUeNA+4wXXBgMI/14+vRpeIwojO6D
ACUbZgCNkxk1a5rSt2mcScMyqE3SXQcmR30QzOsNwBtan2fBk3QxlWGQwt6O
qm0lTJnDxHRxEFAZEQ3ML5bPveDgUD4y3gFinrYylQlhQolybJzDZBhC9XQo
N9iyZUspE4/m6JuhgQXULCMCxsMAqLk+E2IiTOE3CJO6YZ/0JmYMsSMXoUFO
79atm5Ew8WimC8E2RFg0GuEGbEbLwJwMSXjJphEm/temcZ00YO/evePGjSvi
H7ulqRlijGjGDi2G9Vo5WSdMxgj9q6tcAiukgjEnoQ2UKMcYc61atYy/EiNz
y9STs4QwsdVt27bJXBklW6fyAM6UzH5OMJqAiWJmMvVnBA0Fd4lxonUhKP1+
GRrE2k7KdEKYKBaGmO4ssGT8Mv5arz+GjZFzgAEgHW2ahsTjiB0ybGWSkB6B
DdA8KHOy4XP1G8dU3rx5I3VwQpiAmvhJmPA2lbdymk0jTPQh2hjzo7PoFNyi
aakGvQbt8NOaNWuMhIklSwa7hAkH6oSJFpW7MBEmBs8BYxZbElWDXoUMqQy8
nSVLFlzh7NmzbdrUQYoUKaQQ/sp495MwEZAYM90BTZECD5cuXXrGjBlIQZ0w
uRwkQ/nEfXbLQXUgbh3NpeMoe1owatQoa69hoiE0OKmz7X8JE/eKVeiEyZAn
hb7Q5zNpByxZF0g2x4SpK0yMzUiYeCsJiPQHEFipc5MLOHBSIiTgBIaMJBLI
SJxIUyPAuCNiB2ybaAvSQ1egKkmkqrQDd8F4z5MnD7YHB8J4EKaQv/FC8+fP
58YlNCbYxOSwdniSc4kQ6VZobefOnfnz5+cnTBrzo0GwPQyPMUvjN2nSBMlH
nIjZMIStWgLq41zhamwbkpFnAZi0KeetW7cYCDAh+gSxYVJ3VI8wAX2LMsFi
ubW1a9cyxJD9xA6OFgvhOo3C20WgQ+zSr02bhqJHmjVrljlzZioAy8Eq3Duu
WeamXrx4AXOaZtShLwYUNSGPxKcMK/6ltYUAaRlam8iaYJCcunClTcgmwomu
1IW0TBrAIfC2TCXZtNgEz45EhBttGuMR6S9fvhw7gUkgDbwtpclQxVromq1b
txrryV1jPKJ17RImHIgd0oPIG7qA2zSt/sJ7MsTgZ2oIr3KzDC4JUXUQtdEv
jx494r6oj7xbgXXRvzbN9WDSVsKUJ5I2jTA5S9yZkTBpQDQt7U9fkIF0mKR1
69Y0y969e3HuK/7FgwcPRo8eTR7+0qE0ozS4kTBhdaSRUSIy1iSA6t69O6bO
2OROZZwWL15cJ0ybpivoHXnuYG1AYmFGAQEC3WR9uMwliLVpOrQK5EwfjdRg
IlhORB0xjmgBpAVF0b80O6PVVCCEKY8k5CzoUSdMUSBUnk5HdeMOsBN0OILB
dcIU1aoTZurUqW2a22VsUiDmzY180ZDcETBmrNHuQysdtCrRNPV0vVhOkfFl
02ZgHEUKOrBzqkGsR8OKFLFpgQaJerhtBD2Cw9InWGDsMxrsLplDqWIqrVq1
kklUEyBSkVIIbHkcT21xLpiNXc1PZFGnTh3MSSYWAhHURD+GjRHkstIAoAzh
0pkzZxrzU4FaGnATMpmPRJEUXfb36tULOyTF+CyMAYs8kLuDTo3+iLtGkJPf
SHoMWwkKAG1IVIjp4oYYvPQyITBcJA/y8Eecrg8lAaKIDJAwdMG50ILE+wLY
D7dLzRkdx48fp1gTE9o0/0gJhDnkwSSIlRiDplUHtEDKlCnJBqcxrLgFbDtX
rlzwFa4HtuEn2Ng48wlLEwOmSZMGvwlzMkIJVaBrvEPu3LnF6fj6+nKzxIBc
Dg/OMeXI00BiIjghoQbUOyTDfclkOOnFihWD9pG7UaJEwfzkitAav4rOF5AB
lqBnaeQuXbrIsg3IhD6lxykZnpGcjAvhDSO4Is2FvORmcakEF8QCbjMJ3Ii3
lUn1sGHD0o9QJY2Px9Qn1gR4JRIzZswIdSAtuClEDtelMhzjmLANihKxitti
gGNyOC+GD0YCwRJUmiZIMVEuSgm0PC0mE+w4dyQZPhoKpespgXQurbOEgkLw
wvoggMFoknxOnsPCtD169HD7iqZHOUED/Ox1DShMGECOdXdJ9fToT79xnA5h
ka73KAFytmkrQyAQFJ2wFqTKse4Kb9y4gYo2Bhp4HDJAKXCmuHs0g5xCTTjQ
hcrKlSutrgRlgo+TAqF0CN+0Istf4E7hJTnGPYnTRIdUqlTJtBiVuyOnTDgj
I2kurkubSNPJdB+RI8TLv7g57GeOBoQoZ8mx6eo0BY2Ad6NwKYf7IlGOKU2u
RSxg9DgKCt8uGHFEhdZ52u8PEHvs2LHRxqM1QCmm9Wx2gXbyrzexaRNHlF+k
SJHTp0+7VdkAgbDL+hBBQUFBwV8gzOzQoQPhM8Lviy4LRHdBzvKKWdDjw4cP
1ufyCgoKCgoKCgoKCgpfAxo2bGh6l9wJDhw4oD/bevv2rfE57IsXL+bNm7d2
7Vp5uebp06dOHis4wp49e0zPB7nKrl279LWIXxqvX7/evXt3EO8Y8OTJE3k8
QdPZfZVbQUHBv3j27NmX2B+mcePG1j0Q7OLQoUM1a9aUtwLh2B9++EF/BePy
5csJEybctm3byJEjc+TIwcCHAX766Sd5h91F3LhxI2zYsPqWKbLA7OrVq9my
ZYsRI4b/7spdHD9+PESIEEHMWgUKFJg+ffrt27dTpkyZL1++oLy0gsL3itat
W//222/6v/KqQlBWoHjx4mvWrJHjDRs2JEuWTCfM9u3by8YC6MNIkSLJir7D
hw+3bNnSX5fgpmT5x5EjR/T91nr37h1khIlmTpo06ZfYPnHTpk2ONjt6/vy5
LMUZMWJEmDBhXLz6+fPnTa8kKygoCMaNGxcyZEhEnbw2uHnz5kqVKiVPnhxG
kg2U+vfvP3bsWB8fn3Pnzs2fP79o0aJVqlThb926dQmimzRpkjNnTv6aipW3
/s+ePYt27du3b/fu3QcNGsRZXbt2Nb21NGPGDJjEKHHJqRMmV2nXrp0cZ82a
Vd+MJXz48MaHjxxTz0WLFt26dau/BoTo48ePOeAvlYEB0HiXLl1Kly5drFix
Jk+ebNMIM3r06Pfv3+/YsSMXtfs6lawDvHDhQgC3xmrTpg0yz6a9Fme9EHJ3
9OjRuAN5J1oaEN9B/XUyJB1dzd+9e/fu3LlT2O/AgQORI0d++PAh6aTgSuiy
VatWyZ4Y3LusA6cHo0WLxi1QoL5s8pMG0/GHDx8KFy7cp08f+Zdi6ffly5fr
/1ImPPzPP/986bfPFBS+TqROnVpWvRL/EqVevHgRYpS19L6+vrIpRMmSJQlp
a9Wqxb8NGzYcM2ZMzJgxQ4UK1alTJwYXAa8pqEf2eHh4LFmyZN++fSlSpAgd
OjSk2qFDB3k3ypjz119/Nb1mCKEZCVNeT7NphKlvvgFhGnfEgpnjxIlTrlw5
6KVQoUJeXl6QA6E3joABLm80Dxs2DJ1ZuXLl+PHjy1wBhEk6dM0lEGATJkww
VgOiKF++PNXesmWLp6en1SlAGm/evHn58qW+jBkXw3XtTlRmypRJXsaBsU07
c3JKlixZZs+evXv3buoDuSGnf/zxx8GDB9eoUQOaPX36NJcgD79myJAhSpQo
tKfs0Up0QGL9+vUJCnr16kWPcCNkwEOtXr06TZo0sqGW7MWUOHHiCBEihAsX
TvQ8PpEUuvvkyZN0Fs3CVeTVbNpNmhevRyOQjZaHJ2mKVKlS5ciRAyf7dX4m
QEHhSwPClBWz06ZNixgxYpV/QZzOWGag6XunP3jwgH9lwX/t2rWzZ89u096v
J9G6EQSRNYTJQdu2beVlfCiInKbVubCciTDJoBPmjh07iJq7aaBu+qYK0OOQ
IUOMZyHP8uTJY/t3w3N0IzwgeyPYtI1PZQsmlJ4uU40hOfdbtWpV0y0UK1YM
ooCaqBJMZfp13rx5MBU1gWoaNWo0cOBA9DM3K3utGyEbDiBxuSJK3qTNkNAy
wwAjoeQRh/ny5dPXA5cqVQrJZ9Nmd8WL2bQXEuV92+vXr5OovyLKrekbdcJ+
/CSbXwlhIrARzM2aNcPd4DtwLiSK7yAbx6KiM2bMKLMWVBjnRSfKfk0kFi9e
vFWrVqhQjuX1QAWF/xogTBmejDUTdwlhmna8kQlPAm0jYVr3v9UJE6byF2Gi
cHTCBOguKEjUoOyjDhImTGgiTAQwMonYHN5DaMFgUI0+GWuXMJFwRsI0fUsC
FkJaCwlTWsWKFe22HkILkWZ3d1wdZKDyZcqUQV5aF/rCQqZtnSA0fZ3A0KFD
IVt81u3btylENqCDMHEfNnuEKYxqs0eYElZLLxDv869OmA0aNDASJsxv07aX
xxdM+xdHjhwZPny47Adr3aJcQeE/Aj0k37hxI3w4fvx4m/ZiJnxilzBHjRpl
03YrFcJEbzDk3SZMLm0izDp16hgJUwCb5c2bV9+Fj8DQRJiAyBqy9fb27t+/
P4GnvoehTSNMmaSFMGVnV5u2P4yRME3PkQ8dOkRtkZdclPpbP7YIn9SwB+tH
T9auXRspUqQWLVpEjx5d33hEB1TMrembg+3ZswfCnDFjhvxKd3h5eV24cIGf
AoUwb9y4IVGDkTAnTpxoJEz5PghnpU2bVi+ca6GNSUR2cnW1xYHCfxNEfLlz
5547dy5DLGfOnGHDhoVGGBRPnz5leDKO9Gem58+f59+OHTvatECS4c9wu3z5
ctKkSfUd8AQUhTgRapVNgyGKAwcOcLpJTckGMvpO469fv/7xxx+php6BFOQN
pGrcl8C4YbgOSAaeXL169enTpxGZxtAYwpQllwTpVIyafPz4ETJ0QpgwA/KS
bFyXasO3ps0fHjx4sNoeTJu32LSdFWlk+WzHJg3GX0V/ctfz58+nDtA4zcW/
svypS5cusjGdcKNdwtT3PbYSpuxaZiRMmiVDhgzytRHZN5hEAm0rYZ44cUJi
B5qLuk2dOpVIhEAeZ5omTRp9kyIFhf8Udu7c2bRpUxk4DJlx48YtXrxYPtvk
4+MDUw0cOFByTpgwAaFFXAyFlixZkp+IHGfOnNlKg7FMQmMyQBRz5swpVKgQ
OVFZ8nzHtC/l3r17CaV1Th4wYAB5oBcZ+FABjIEoNT4qYsxCjNa1o2QuXbq0
HPv6+uqnMNgpU/ZaPHr0KN6BoPLhw4cwP+mIq+PHj1evXh3ON37eDran/jZt
RVCYMGHQh24/F86fP7888eEvV7RuIQiZQ92RI0eWL1BcuXIlU6ZM5cuXx7mg
wB89egRvyzQjPXXv3r04ceLgEdDA3CP8Rmb0Hq4HZycb49g0/Ux+aRBuQfZJ
oyUhW9lSj9uBOdHqtDYCmMyySWOtWrXwR7ITJvm5UOjQockGgXNu5cqV+/bt
6+npGVzvLyso/McBJ+i7FrsCiNf6CcivGUbN6d72U6jBfRqQ9IhDOZYlQ7iJ
3bt3W6dGb926RR59S647d+4sWLAAN2ScE+DcIUOGrFixYv/+/Xg0kaDE4KTo
2wohgPWonMpTJn5TzWEqKAQXGIaIH1c+RyuZ0V3B9VViBQUFhWAHbOn8QbMO
4tmA7IOqoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg
oKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoPA14PPnz68N
kA/x+IlXr14dP37cXxcyfQ4j2CGfLdahf9A8EEGZaptTBYXvCc+ePfPy8sqX
L1+IECFatWrl6el54sQJ56dAfQkTJly8eLHdX8uXL2939/KiRYteuHAhEGoc
GPjnn3/q1KlTunRp7rpUqVIpU6bs06ePn2fNnDlTPh9swtSpUwcPHmxNX7Ro
Uf/+/QNe2wBixYoV3bp1a9euHX99fX03btwY3DVSUPhW8ejRI1QlVAlnvnnz
Rj656Bx169bt1KmTo1/Xrl1bqFAhk568f/8+45TEy5cvM2ytH5oMYnz48OHe
vXtHjhyRr0xeu3bNz92ez58/Hz9+fPlu3f79+9evX//+/Xv5iTaEdU1fgoOT
L126dOfOnVOnTpUoUSK4PhhENaZPn75hwwbutF+/fhMnTrR+ZV5BQcEJiED3
7Nmzb98+PSV79uyNGjVy5VyIwvrJYBMWLlxYs2ZNY8rKlSujRo3KAcSSPn36
4JKaM2bMgK7li2lg0qRJ0IgrJ0L12bJlgyfl36pVq3I7V65c0TPgdPA4RndD
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
Hv3799++fTsHxh1pbNr2bi5+ZeyLQgjz3r17bpwrD2WMKbAopa1YsYK7s37j
++TJk+HChbO7O2gQQBGmgkIgAsK0fu7QRfTo0cP0WRyb9hXICBEi3L17d+XK
lR4eHsYnNY8fP44SJcrFixfdr24g4cGDB2HDhnWPMLt27WraFEJ2XE+YMGG3
bt2s+Zs1a9a2bVs3KxpgQJgJEiTwMxsy+JyGGzdu3Lx5MwgqpqDwLQLCdOUr
tz179ixVqlScOHGILrNnz96pUyeb9kIc0bdp1i5u3LgyXzdp0iTTWyFXrlzJ
kSPHV/JNn2TJkvlJmBBIhgwZsmbNCufUq1dPvvh2+PDhtGnTGrNBoYkTJ65Z
syYZrFt90hpuxP6BBQjT+cp2wcCBA7kFWRifLl26OnXqBEHdFBS+OTRt2nT1
6tXO80Bxx48fh+7QUUuWLEEiXrp0yaYtLipXrpzxgdHly5fJ8+jRI47hxtat
Wxs3nu3QoYM1Yg0WoHWhET9XyJw9e/bly5dFihQpUaIEfmHz5s3yCV3I1ri5
B7927Njx/v376dOnHz58uPGR1okTJ6pXr/5lbsIlTJ8+vXv37n5mo+M+fPhQ
rVo1Hx+fd+/eBWSlpYLC94fGjRsjBRnOqVKlMj7LXrx48cB/0bx58zt37ug/
rVmzRidDHRAgfKJ/iZtxlyRJEojo/fv3Xl5ecKa+kPL169fG75IHCyBAFFSN
GjW4u7Fjx+rp8OeoUaPkrn19fU3vyKOrZYdGHcuXLzdG5XCvrNuZOXNmzpw5
jZ9ZJxgPlifUEyZMQC7Onz+/bt26S5cu1dP37Nlj7F9iBP0ncXbr168P+toq
KHzlIKhkdKCUCCddPGXMmDGQoXWrh59++mnFihV+no4Gk6+fByPQxiFDhgwV
KlSBAgWs7zLbBTF4mDBhNm3aZEyUz1/a/WqD8SNHx44dK1q0aLB8/qxBgwb0
Lz4L0WjdXMguuEdOUSseFRSsYHQgMrt06eLiXuuMo4IFC9rdq5BQPWPGjM7D
W0J4pJfp+z7BgiVLlkyZMsX67TZHQKpBI9YtbXfv3p05c2bnOwVVqFDBxLRB
Bri6Q4cOrVq1cv2T6N26dSPc+EpmmBUUvmkwAIlkCVftbgE0Z84cNJsjzrxx
4wbUIdOe3xyaNGnStGlTK+1ALJ06dRo0aJDdsz5//tyvXz80uXNG/Xpw584d
QoA2bdp8oTcfFRQUdMAPiFVH3/hbt26daX/I7wMvXrzInj273ecjnz59atas
mYtRv4KCwn8NcKb+6Oe/g+fPn38Ny0oVFBQUFBQUFBQUFBQUFBQUFBQUFBQU
FBQUFBQUFBQUFBQUFBQUFBQUFBQUvieo7yMrKCgomDB48OBkyZIZt2h49uyZ
t7d3rFix1PtuCgoKCkYMGTIkRIgQN27c0FM+ffo0ceJEEuWTiAoKCgrfK96/
f//HH3+cO3dOf9/51q1b9+7du3bt2tatW00f6rJpO8SaCBP8/vvvQphXr141
bjP+zz//TJ8+/fr161I4fz98+MDfd+/eGTfLkhR9tx/+Xb9+/b59+9SGWgoK
Cl8PLl++7OHhgWiMGzeufO8PrRgpUiRPT88ffvghSpQo6dOnl5wXL15s2LCh
j49PhgwZHBFmvXr1EiRIEDt2bNmm5u3btxkzZmzRokX48OH79OlDFJ8jRw4K
LFGiROTIkbNkySKbQJ49e5ZEX1/fRIkS8RdGrVWrFmdRjbJly/4Ht61QUFD4
OjFq1CgIkIPu3buHChVKEgsWLFigQIEnT56gMMOFCwf7vXjxInXq1PKBG/kO
oF3CnDx58smTJ4sUKVKhQgUS4c86deosWLCgZMmScO/u3bvhQ8jzuoYwYcKs
WrWKbLlz55bPVbdt2zZNmjQjRozIly8fZ7Vu3ZoyZ8+eHcRtoqCgoGAXr1+/
/uuvv4YOHRotWjSdMGvUqNGqVSsOIEwoC805fPjwdOnSyQaqzkNyjjt16oR6
5CBx4sSNGjWapWHhwoUvX76En6FiOSVVqlSwIvE7zCkpaMtXr15VqlSpUKFC
s/6Fe997VVBQUAh0nDt3DiaEAwmZdcIk9DYRJloxYsSI8gEUu4S5f/9+I2Fm
ypTJpn1AcMCAAZ8/f7Zp338BVsI8cOAAJx4+fFgvqmrVqjVr1pRrQdGufzFB
QUFB4YuCcJgwmQMCYZ0w0XgmwiRg50C+k2iXMOU7szphxo8fnwPkJYlr1679
888/SeR0CFPXk0KYz549S5IkSfny5c+fP3/p0qWKFSuSh7PQtJzVv39/48f7
FBQUFIIR/fr1ixAhgre3d5UqVSDMrl27wm8eHh4w3unTp9u2bQt3EaG/efMm
adKkiRIl2rRpk3x0r3nz5nohaEj4jcSZM2cS4FNUzJgxz5w5gzhEasKQXAJC
JtwuVaoU2Xbs2AHrIlkrVKhAyStXriQxTpw4Xl5e06ZNe/78eeXKleWsWrVq
BWPjKCgoKBjx4cOHQxo+fvxIXHzv3j2ko6Sg/VB9HKAebdrzdIJlKG7YsGE9
evS4fv26tZCzZ8++ePFCjvX1SATdcvD333/LTxcvXoRO9et++vRp48aNI0eO
hKv1lUX6WQoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
CgoKCgoKCgoKCt8oHj58GNxVUPgm8ddffwV3FRQU3Mfz589/+umn5MmTp0yZ
MnPmzNWqVXv06JHzU+bOndu4ceOPHz9afxo5cmTv3r2t6RBs9uzZ37x5EziV
VvgKcOXKlcuXL9++fdv4XRjnKFu2bI8ePazpBw4cuH//vjX90KFD48aNC0gl
Fb4e/Pbbb6tXr3Yl59OnT8+fP8/Brl275s2b5ycjmfDp06cVK1YsXrxY/7TQ
iBEj9I8TGUEe+RCw64DKfv/9d24kTJgwFy5c6NOnz+PHj53k37p1a/z48c+e
PWv312fPnlWuXHn9+vWm9FevXi1atOjmzZtNmjShBfxVw28R6KiLFy8Gdy1s
t27dMn4P+sGDB3azuWjGRixdutRTQ8SIEdOnT4/P9fOUiRMnkg1jtv60YMEC
/PXLly9N6YyX4cOHc3Dq1CklTb9dtG/fPlasWCFChChYsOC9e/ecZ37y5EnP
nj1btmyJby1QoMCqVau6d+/ur8v5+vrCY+nSpfvjjz/4d8OGDQ0bNkQZWnMe
P368V69edrWfEbD3kCFDYF2dXdu1a5csWTI/awLVk+3gwYNO8sCN+fLlO3r0
qDGxadOmu3fvhs9pNP/e/rcILCRu3Ljv3r3TUyCrqlWrli5dGofiSgkQHYU0
a9aMnqpXrx5Oza6LdIL58+fXqlULQz1x4gT/Hj58mALt5qxTp86RI0f8LBCT
o8xjx45xTGXoaAybO5LPBTo/F5NLnTr127dv5V8cbuvWrY3OHavGSD58+KCn
/P333/v27cOYsRysbsqUKX7WUOErBBIrfPjw586dK1q06Pjx4/3MD0NOmjQJ
28C9Dh06lJSFCxe6LjJv3LiBpb148QKTE3srXrz4n3/+6Sh/zpw5nQsG7Dxv
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
QhADMzt16hTWfubMGeu3t4yAfNatW4dNBgFh+he+vr4+Pj523zI7ePBgunTp
HK3i48bbtm07a9Ys/y5c+Y8DSlyxYgV/BwwY4ORTETbN9+HOOnfuTJwbZNVz
EXPmzCGScrSAZMqUKVWqVHH0YSzGS5kyZfzc705B4ZsDUTlDw+5P+AjGsjL7
/yycOEqosk6dOvpn14wgNvfy8lJbpisoKCgY4egJuHoyrqCgECi4fPmy/h43
IfmiRYv89bxbQUFB4T8CItk0adLom2eeOXMmTJgwQfn9SgUFBYWvDbdv3x47
duyBAwf0V7EmTpxYpUqVypUrhw4detCgQTpnJkuWbPXq1f760r2CgoLC94Rz
586FCBHCw8MjfPjwkvLq1SsC8IgRI/bq1YsDeZ4CqWbJkqVu3br+2p9NQUFB
4XvCwYMHo0SJMnLkSJ0wixUrFk5DJA2yT0uPHj1ChQqVM2dOf+3PpqCgoPA9
YfLkyYUKFZowYULYsGH1919atGhh2s+qfPnyTZo0QYiSOTiqqaCgoBD8WL9+
/fbt248fP96zZ0898cKFC6aVjUjQZ8+eTZ8+Xb7dpqCgoKCgoKCgoKCgoKCg
oKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg
oKCg8B+E+saWgoKCgo7t27cPt4dr16798ssv3t7ewV1B+2jQoEHChAmDuxb+
w969exs1amTaQ+wrx/Pnzw/Yw8OHD4O7av8hXLhwwdE3c52cQjddvHjxC1Xp
CwG7otq3bt1ynu3w4cP+bZDAQsWKFevUqdO7d++iRYuGCBFi4MCBx48fr1u3
7owZM5o0aRIuXLhgqZWfgDCjRYvm6Nddu3Z9oet++vTp5MmT7p07ffp0Wnjt
2rWuZH7y5Im/Cqdi5cqVq1ChQtKkSWfNmuVWBe1g6tSpKVKkKFiwYKpUqah8
pkyZKlWqlCZNGtID6xLfIsaMGRM1atTly5cHzeWiR4++Zs0a1/M3b968Vq1a
bdu25cT169d/uYr5CSffArbi7du3uXLlwoB//PHHZ8+e2c3DuMicOTOm+PHj
x0Cqo/9w9uxZORgxYgTV2LNnD8d///33+/fvhw4dKoTJv2/evDGetXPnTlOK
Edy484uSAeliLOHDhw+k6B/s8xP9+vVzRJhIuNSpU3+h9pwzZ06JEiXcO/fS
pUtGwtQ/hWAF7cAt/PPPP64XTlCQMWNGDk6fPp0yZUq3Wd0EnOm9e/fkgMqf
P3+e41WrVv3Ht4hk1Hh4eCxdujRoLnfu3DnXBdXNmzdjxIghIo0anjp1ypWz
du/evW/fPveraA+IrtWrV7uef9u2bQyud+/ejRw50vot4M2bN8vBunXrgpEw
dQhhTp48WU+BMEOHDj1x4sQMGTJkzZr18ePHNm0sly9fvkCBAsiMDRs2WMuZ
OXNm+vTpc+fOXaZMGf5FYHft2rVly5alS5eWaBTO4dwhQ4bEjh172rRppOzY
saNevXqenp7kefToEZfg13z58nFpJA1tqH8jgCYlJ6UlSpTILmFyepIkSbiR
IkWKYGNwDmozf/78v//+O/x89+7dQYMGde/eHYHKJR48ePDrr782btwYwVCo
UKGaNWveuXOnRo0aOXLkGDt2rLVw7DZkyJBhwoTBfds0kt+yZUu2bNmWLVvG
MV1MR6MEKLl169b4FDkLA5g3b16vXr1q164thEnFxo8fDyU2a9aMEqwXErVf
vXp1iXxpEMJ5yrTb4IJYsWJxF3JMo/Xp08eah6FEnxYrVoxKChvD2JjfIg3O
vVXx4sXhYT9doYugHAxD95ibNm2iI6iVk1HAKXgB6qnvkS6F0Kd2v4T7119/
8RP9glbhQAYgf58+fSoZXr16Jb5AwO3f1eBI21+5cgVnRAZpKMwMOqJzuZAx
G11GJXGOxmIpkwaX8mlzDEDq9vr1a9QI5s2/Tp4XMPTEt77RQM3J7+jDGZgB
xkNILpeT++UUmUihbiSScv/+fQ6kBfibLl26AQMG+PdjHBSin0I7c4mrV68u
WbKEy/35559eXl5Vq1Z1wtjYHl2v/8uopOZ243FMFwsX2XnixImvhzBFYQoY
XKFChfLx8fntt9+SJ0/+yy+/kMgY79Kly7FjxwjT4D0YxlQOoQoEiFXnzZv3
xo0bBHQLFy6kESjc29v72rVrpIhNIr8bNWoEFcDGly9fxhII97Jnz45Vd+rU
ifzDhg1jjFCg0BdGGD9+fJHEkI8jhUm0yLl0GcewU8mSJRcvXgzBEqHQ1GnT
po0SJQpdg3lgMHny5MEpNGzYcNy4cQkSJMiZMyeET86wYcPaHTjkL1y4sBzT
LJRDoE1XQpJ4QK5Cm/Tt25fq/fDDD1KHFi1akI3hMHr0aCFMrksdsLSNGzd2
7tzZehUIlpx4Z4YbQ5Lq+fr64j5ixowJJ1vz00owud53MC0aw0SAeAciHU6n
72RAkQjV9+jRg8aHY3UmsYvEiRPT704yWIHB2BW6dHT9+vXxp3QNvT9p0iRc
J8McR4apOBoIeEmcWv/+/Yl6rl+/DufgOvHdeDdiNGt+rIvbPHr0aNOmTTng
Nm2a9XIWBx07dsQF0JuYseTv0KEDHUodMEJrafg1rLRy5coRI0aEFmwaYXIu
WiJy5MizZ8+WbBMmTKCz6H0MVRQRXczVy5YtS4NjyVReiJqR1bNnT4wEh8vg
Ig9e0u6NN2nSBMtkoNE4hKv0FK6W/FTebn6KxaQZR1gy1s5wI5H74hROjxs3
Lv0CU7Vr1w7TjRMnjk2TgtwX90LsYCqNuI/KY1HoFurJLUufMrRpdgybujG+
SClVqhSXwP6xUgrEGjngpo4cOWKtJLxK39E1qVKlQgngDhj1mAElMJSs+bNk
ycJPUArtIISJtKM+NAJcatOou1WrVtw7am3BggV2WyZwIYQpkk+gh+QAM5Mv
m9DCSJTWGhhB1NNUDoEh0QothlXQL5EiRaJrsHPy8xeLQp1KTgYObrdKlSoi
2AAKijps374d+2TI44JJRHbS3TaNJLFYyekkJIcwaXl4hsIxGKpdrVo1DJha
nTlzpk2bNmhIPTPMTI/LMeOXW7NpxkA1RFGbQGminCkfe6BuFE7J8eLFoykq
VqyIDdi0uFh8JewUPXr048eP2wwhOZoE+yTIJcWuT8fjYPOiUtCKDFUuxzE6
mXSroEK6G50d5s2/JsLkLGpOxWgEfm3fvj2J+TRQH9yQE4WJ++O6sKujDLDB
CQugOESpjCYjsGd+tWmahPEC1evKGVm+cuVKa/nkhO3nz5+PzdDs9Bq15S5g
KggWGrSegiAUwiQDLCFffqRKBw8epKcoBOOkg7g6hdDUESJEIBghs93hBg3C
GAxqvJ5IJggT5sH3Qf6Qs01zc+g0Cmf44+uxCnwu9SSEgXNs2sd8sWokJUoP
Y+OmoDXuiwLnzp0LndI11kuvWLGCG6FluDqSg0twU8uXL2dsSjNawf3KzA++
G07mANaiEMIcrs49Mi7Eg+gfGsaAyWwtigaHZtEPU6ZMQZ1Sf/E4DECZAoKm
5BIyRU9tdZNGP/Tu3dtaJiSM/4X/OaYLaHmhnebNm1OC3eeJjAh+kvsVwmRc
QJVcmgCWRLgUnmHI4yBghiD4bp0QpvFxCfZpJEzYgAMMDEJzUg4tgNOnKEYi
0TdmY9Tko0aNIqQ15i9XrpwMXtu/lAIPQ5iYtCTi8YUw4Q18qyQ6J0zcN34c
UUdpW7dufa5B9B6EiYXrmd0mzIsXL5IHC5fCJbqkiaSqyDkhzOHDh6M/ieVt
/zuHiUqBM7HDQYMGWa9iJEwIGfEj6SgrSkBtmvK7Qpg2jXaoIRalEybaEo+G
xdLmTmIcdCCn6JNIJhAa0265LUiWLJmYAe1jzD9w4ED9WNiAUayn2J0MsWkr
3DAkbID89BoKE4mCNeJtjZG1DjLALePHj4fBuEEqw83izmQugjuiMXGdlIaw
xDYIHsOHD48Xs2oAmzZtS2fB/zq3S0hu08QbDpoDaiJkAsQrYe0c4zKwAQ5o
cxIhFgb7H3/8QQq2JB2xfv16k1zRgbcVwuSYCotH3r17N4n6JIwJOmFSQ2Ez
hBnjTm95KoaB5c+ff//+/ZICYTr6mjCSD36TY0gJyYQzwrZRifhQrgWL2rQ5
RqpkfMbkiDAhEKxOn6XE3SALbX4RJlwkkwlCmDI7RJiAAqfL6B3GNTcIfxK1
BcF6SCFMox7et2+fkTBRxRygD2kfwjc0D06KRjOVg8FjkxihxNSYNOaBVsRc
uRH8O0xIQIR3oN0QjZSsPxRDqJCfYwiT/sWkbQbC5MDLy0uoCcLEI9t9aKKH
5DAGZoCylXR8Ab3snDARAza/CJPQw6ZNkRGLDR48WNKxT6Ej7shmIExCYA7+
/PNPm4EwqRhtS+8zSInIrFcRfyq6FMLEKiQdpUe69VkD5AD96moBsvLx8TE9
JsDMcF40zrVr13TCpAEhK0YKKXCLtSYCiWrtThU6Qbdu3WhS67QnF9KfgcK0
lCz6WWDXg1DPFi1a0HG0AH0qhMlZWBRDD9cp3tAEgv0oUaJUqFCBboUzCWYJ
muQnbJJwEskkhGnTZA8CHhpEUFmHGxXYtm0bhIl9ygoBu4Sph/MMYbF/m/Zg
F0VHcIqQQB5AI8Q70jtYi4uECUfZNErxF2HOmjVLCBN2wh3ohMnVuSLGDM8c
PnzYphGm1RELULM6YRIkcl3iJgY+kpsbZPwKYTK0rYSpayEjGPhURndMDCgR
Qv5SmOLf4XwIE4/Jjej2HzQgrhHfraeMGzcO1jp//jwDHNGCAmdwUXNuNoQG
uy6JX6k54QnECCti5OSElOBeIgKbNo5IoTHJcPLkSfqL/sVz0YD8lfEiE9f4
LAYpOoGwHYKCf+Ao2GD16tU0FBnsqhEkJT8RLtGnCAauC0lCIOg06l9KgzAt
NM5PVIOc0GNWDeTB++u9YwJ9SoGURv6ff/6Z8cgx1cYUcRNE6FTPpk0qUoJM
t+I98Qg0o6gpDIyBibGRnxgtZ86c1quISRD90YCTJ0/mKjI3zjDBtOx6T+6X
orAiGgrjR0GZMmDblMmlGUocwD/cKd0qYSDERWXsGgZtxUWRczJD4jp69uxp
dykFbEkzUsONGzfCYxzTC0KhxH12I2KcHTlxZJAk1oKV0ggyP4NGYrAYnx3o
YOjBpfQvARo9i8yTp/xr1qzB/KAgyFwIk5wSkGKN9K/+XEkHZMK5lFOwYEFY
kQyenp4mwoSEcejSnvzl0vrzILH5AQMGcGkOdCeON3SRMAnDOW7UqJG/CJMq
CWES4xB26YQpDSihMUPV5h/CRBVzrre3N2YvlxDCREibCBNVj5lZo2NcNvpW
vIlNU5jis1wkTDJAMrLElPLhJS5B5zIesSJ+hUKtD9kDF1A0A5MhQxAtz3Fw
2RyTQgsgjSZqEAFPZm6Q+MhuEIfBw2PQggQdZEYGEEpQmmSgtTEbShMFZdPC
WylfX3KDNuDf2bNn49blJ1HjeLEaGiBzBpfpAaWAMYUGQPvJI0gMkiblFOgL
zyinywOd06dPy78UxeCVY9hY5jlF1prASMHsMVSuAme2atWKwqFlyBzRKCUQ
PTEiOBDvQ7wMleEy0JOodLwJ41QeMEFEdkc6HIX/wgCwc24BR4MQZURDEQh1
uz3IKWiYli1bpkqVat26dXa7OE+ePFwXakVckY0K45I4hapyy46eDiPPsFXU
KY1vN4MbwJ4nTJjAPQqx4+NgMO4Xd2nXqLBJhhWDukiRItwFBAWBQKGYWc2a
NdFvjiZgcQTCQohJfe6aDoLZcBaQD84ob968tDPOjp4laGIMWsthLNNftBUk
QPPK8zsCJYYnFEqwc+TIERoQX0xP0cW4eOOCW5oav0lcRm9mz55dPCntyTBH
92JUOBfxYtZL0+/8RHNhvXQfN4t/JxIksW7dutb83AU6B+tFgVAfNAbDjaEk
0yPSUHAd16JMHLdEUgRHtKpdQQhh4pIY8gxtri6TAxgz1kuD0Gu4GIpCkHAJ
GkoPbbip6NGjy8NiExjg/EQzYtuYAdbLgCpcuDAlMCqt+VEO/MRFMRiMlvpI
sI/zIh0uQktzgEnQpDh3awkKrsP589/gKhyX5F/N5hxYHUNJHhraBSNa4iBG
je5rICjOcjKBCVld1fCl54WMM5lWUHnqAEGhizhgVFIxiA5hYzceF0BK+gyq
zPAIGPUMMRQL7mzJkiWSSFxgd5WXTVs0y0VhHpmOhgA5nX8fPHgwS4MIHlyh
tBXpxtNhA/3pADpZKEUKAdzIhg0bOJCpGxPIT4H4O6oq+UmhnhzoS9eMINuB
AwfQNsj7ZcuWkQ0Kwr9wgGjRZz+I3fSH+zZtRgLVajcigDBxK6NGjYKjUHqS
iMuTymDD/EV+4/U4IIwyzgVRrKPFxrgJaSvJQNPpd2fNTJlUAzdBRyBpJCcm
MX/+fA7kwT01xLkbZ8gVFBQUghjGkFxBQUFBwREQkLVr1ybUtbvcS0FBQUFB
h7wuB/z1VriCgoKCgoKCgoKCgoKCgsJ3iZIlSyZ2gBw5cgTu4pOvH4cOHfqP
b7eooKDgCA8ePAgfPvy9e/du3rx55syZhwZcunQpduzYTlbWBQoWLFjg6+tb
o0YNfZPS+/fvHzlyZO/evbIE+t27d61bt44UKVKRIkX69++/bdu2Jk2a/PLL
L2/evPnjjz+KFy8u7whs3769S5cuK1eu7NixY9myZa9fvz5z5sxSpUqRKKv9
yT98+HBKkDvi3Dp16ixZsqRmzZoUIgvV7ty5kzdvXi5kdyMCBQUFhWjRojla
Ody0adMvSpgnT56MGDHin3/+2adPn0SJEt24cePatWvRo0cPESIE6fLSE4xX
pUoVm7YTUbhw4c6ePSsvDz5+/Pjz588ZMmTw8vLiV0iVxLhx4w4cODBPnjyp
UqWSdwZDhw49bdq0V69ewaJIR/jQ09Pz+fPngwcPDhkyJB5hwIAB+fPnr1Sp
0qdPn5CXnJg8eXJ9ObGCgoKCEcFImBBXixYtULPG/TBRhvHixdO3TWjZsqW8
hAXFwaK2/92eIl++fEKYp06dIhH9yfHChQs5lvdKvL29R44cOWPGjCRJkkCh
cK9sufP333/DlrIFH/+SKO/9IUrt7kmooKCgYAtWwrRpr4lVr16dKNhImLLZ
nWDixIloTmJkaK106dK2/yVMYnNXCLNZs2bFihU79y+EjRMkSKAIU0FBwV8I
RsLcsmVLrFixCMNldya7hEmYnCZNGh8fnzVr1gjRCWHKW5/169e3S5jclLzG
K4TZu3dvypTt4D58+CCbKzoiTNj7y92ygoLCN41gJExi5KxZs/7555+y093o
0aNtFsJs27Zt4sSJK2hA+6Ebnzx5EjVq1AYNGhDIx4wZM0qUKKc0UILsSgRD
hgoVSjbxo/y+ffvKBk0VK1bkJzj20qVLsrPrpEmTbNo2TbLPns1AmC9evKB6
jvbnUVBQ+G8iGAnz9evXkBgicPbs2fAYgTNkSAAeOnRo2TsFNdixY0eq0VMD
zFa1alWbtmUlZ7Vp00a2OJbPh5FStGjRly9f/vzzzxw3b958ypQpHBQsWFAe
midPnjx//vyIVZu27b/8hGrlL8eya/2ECRO4eu7cuR88eECieolVQUHBiHTp
0gXjHKZzHD16lJhd/5rV6tWrjZsM+xfwqitfj3327FkQfJVDQUHhWwQKE5HW
VQPKrVevXl3/BULL7hbEQQZkXs6cOYm7M2tAbTr5IrmCgoLCl8Zvv/021gEI
Y4O7dv9vLnH37t3Tpk3z1wflFRQUFBQUFBQUFBQUFBT+I/g/piiuvw==
    "], {{0, 518.9351331083615}, {332.2084739407574, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96.012, 96.012},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{332.2084739407574, 518.9351331083615},
  PlotRange->{{0, 332.2084739407574}, {0, 518.9351331083615}}]], "Input",Expre\
ssionUUID->"e2cbbcb2-6b54-4ddd-84cd-d773bab39384"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"I", " ", "t", " ", "a", " "}]], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "T"}], ",", "T"}], "}"}]}], "]"}], "/.", 
  RowBox[{"a", ":>", " ", 
   RowBox[{"Log", "[", 
    FractionBox["x", "n"], "]"}]}]}]], "Input",
 CellLabel->
  "In[276]:=",ExpressionUUID->"5481ed00-e54f-40ae-8b71-d079ef1dc571"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"T", " ", 
     RowBox[{"Log", "[", 
      FractionBox["x", "n"], "]"}]}], "]"}]}], 
  RowBox[{"Log", "[", 
   FractionBox["x", "n"], "]"}]]], "Output",
 CellLabel->
  "Out[276]=",ExpressionUUID->"9e5a7012-9551-49e5-aea8-c0fad67b1985"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", "T"}]], 
    RowBox[{"Integrate", "[", 
     RowBox[{",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "T"}], ",", "T"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"T", "->", "Infinity"}]}], "]"}]], "Input",ExpressionUUID->\
"b19fe276-7e48-472b-8b1c-ece8c027d2ca"]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->{"RulerBar", "EditBar"},
WindowSize->{1140., 695.25},
WindowMargins->{{Automatic, 26.25}, {Automatic, 12.75}},
TrackCellChangeTimes->False,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (August 22, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, Visible -> False, 
  FrontEndVersion -> "13.1 for Microsoft Windows (64-bit) (August 22, 2022)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"80238ef8-3b61-4e63-b4e4-59011f638596"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 88, 0, 85, "Chapter",ExpressionUUID->"5a6c7533-8b40-45b9-bf5b-4812b4c0344f"],
Cell[CellGroupData[{
Cell[693, 26, 83, 0, 83, "Section",ExpressionUUID->"584864ba-1211-47c1-96bd-09b055380762"],
Cell[779, 28, 359, 9, 60, "Input",ExpressionUUID->"0dff1cfb-3f9f-456d-93b9-e60cdbe2bc42"],
Cell[CellGroupData[{
Cell[1163, 41, 140, 2, 35, "Input",ExpressionUUID->"720ab3c7-4c2b-42ad-98c1-8661b1045d5a"],
Cell[1306, 45, 315, 6, 40, "Output",ExpressionUUID->"b036b63a-8f3e-4507-ba80-fe47b6d02919"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1670, 57, 361, 6, 83, "Section",ExpressionUUID->"a73767dc-da7f-4f30-b355-4465af181835"],
Cell[CellGroupData[{
Cell[2056, 67, 671, 10, 68, "Subsection",ExpressionUUID->"647ffe1f-34c1-4183-b04e-b4fa274fb19d"],
Cell[2730, 79, 157, 3, 45, "Text",ExpressionUUID->"ca7ae836-4645-4cb2-b244-e563110366b9"],
Cell[2890, 84, 290, 7, 56, "Subsubsection",ExpressionUUID->"741ce6e3-3daf-4cc1-810c-8d6edfec343d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3229, 97, 255, 4, 65, "Section",ExpressionUUID->"4a28bc01-1314-4d89-86b1-d25783421b8d"],
Cell[CellGroupData[{
Cell[3509, 105, 710, 11, 68, "Subsection",ExpressionUUID->"ae085fba-bac2-41a1-b588-c3ceca0da615"],
Cell[CellGroupData[{
Cell[4244, 120, 341, 8, 56, "Subsubsection",ExpressionUUID->"0737d7a8-f14f-4786-b6fc-075c458198cc"],
Cell[CellGroupData[{
Cell[4610, 132, 22847, 417, 918, "Input",ExpressionUUID->"163d618f-dec4-431f-9d2a-074390a020dd"],
Cell[27460, 551, 12128, 270, 903, "Output",ExpressionUUID->"6b6c944c-597e-46c7-8ef9-4e3301a0ab9c"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39634, 827, 345, 8, 56, "Subsubsection",ExpressionUUID->"09a9c9df-99fe-4e36-b5fe-3c176165071a"],
Cell[39982, 837, 698, 24, 54, "Text",ExpressionUUID->"14b53f8f-828b-4b9d-a344-a468ab54ad02"],
Cell[CellGroupData[{
Cell[40705, 865, 2196, 48, 86, "Input",ExpressionUUID->"a2698e06-8f3b-492f-bdf7-841b76d725dd"],
Cell[42904, 915, 992, 28, 207, "Output",ExpressionUUID->"e5e52097-ff9a-461f-acc8-d06469462c55"],
Cell[43899, 945, 610, 12, 71, "Output",ExpressionUUID->"45afbba0-4ecf-4ebf-9a5a-a042f8a2ae49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44546, 962, 365, 10, 41, "Input",ExpressionUUID->"caa3cf05-4d08-40ce-b637-14415b90bb10"],
Cell[44914, 974, 624, 23, 207, "Output",ExpressionUUID->"f93a73fa-49b5-4f5d-89e8-c2f5aa215f23"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[45611, 1005, 294, 5, 65, "Section",ExpressionUUID->"40d3c714-e711-4449-9662-b09cb735022c"],
Cell[CellGroupData[{
Cell[45930, 1014, 259, 4, 66, "Subsection",ExpressionUUID->"99b84f84-760f-4fba-96cd-a24c9c89b930"],
Cell[CellGroupData[{
Cell[46214, 1022, 358, 11, 35, "Input",ExpressionUUID->"f5f9f753-db1e-4021-b7db-ee5a5913c6df"],
Cell[46575, 1035, 1079, 42, 378, "Output",ExpressionUUID->"087080a2-b78b-4f99-9c2b-c07c093db6ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47691, 1082, 384, 9, 151, "Input",ExpressionUUID->"c04f2df2-18ad-4078-b0f1-94be0edba2c9"],
Cell[48078, 1093, 113, 2, 40, "Output",ExpressionUUID->"4348722c-aba8-4505-9717-5d32dd29f10f"],
Cell[48194, 1097, 113, 2, 40, "Output",ExpressionUUID->"68f724ce-831a-4d9b-a7dd-0a096376ca89"],
Cell[48310, 1101, 113, 2, 40, "Output",ExpressionUUID->"67e4f9f8-ffbf-4e48-aaa8-6996e4f04bfb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48460, 1108, 332, 9, 35, "Input",ExpressionUUID->"204ba2ca-604e-4a1d-9db4-0884ac000498"],
Cell[48795, 1119, 1192, 39, 151, "Output",ExpressionUUID->"ddbe29ae-c97e-4b17-a172-996bbe1f70f2"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[50048, 1165, 110, 0, 65, "Section",ExpressionUUID->"27993ea5-e291-4fcf-802a-e9b5cd525f22"],
Cell[CellGroupData[{
Cell[50183, 1169, 694, 25, 68, "Input",ExpressionUUID->"30e4362a-8d19-4151-a459-38954891e15b"],
Cell[50880, 1196, 129, 2, 41, "Output",ExpressionUUID->"4e24bc06-badf-4e74-9328-8814c2a8b2af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51046, 1203, 164, 4, 36, "Input",ExpressionUUID->"98423d18-a8e4-45a3-b0d3-839e9918a427"],
Cell[51213, 1209, 129, 2, 41, "Output",ExpressionUUID->"171c1485-49f3-4bbf-bbf2-4c7af6fea5b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51379, 1216, 276, 9, 37, "Input",ExpressionUUID->"406e9af7-f49d-456a-b32d-41e462737112"],
Cell[51658, 1227, 129, 2, 41, "Output",ExpressionUUID->"d0dae065-0899-4289-8a54-e855bf66eabe"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[51836, 1235, 101, 0, 65, "Section",ExpressionUUID->"91a5e561-a3d5-405d-9599-621acb255a90"],
Cell[CellGroupData[{
Cell[51962, 1239, 1147, 36, 132, "Input",ExpressionUUID->"5ea66255-8476-44f4-9db7-7d5661d10018"],
Cell[53112, 1277, 20400, 355, 116, "Output",ExpressionUUID->"ccd4a19a-cdb4-479b-9e37-e1cc9b2e8dc3"],
Cell[73515, 1634, 20400, 355, 116, "Output",ExpressionUUID->"a5c27747-4df4-4f2a-9535-65bff3fc8eb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93952, 1994, 140, 2, 60, "Input",ExpressionUUID->"2822b7f1-d943-4ada-b4e6-db73fd552693"],
Cell[94095, 1998, 38461, 689, 246, "Output",ExpressionUUID->"24940570-b977-449a-a882-5af24bd835a7"],
Cell[132559, 2689, 63427, 1154, 446, "Output",ExpressionUUID->"5073efb2-cd3a-4964-a450-1ad50a17c672"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196023, 3848, 542, 17, 36, "Input",ExpressionUUID->"ca213c44-fff7-41dc-968d-ef74e58a5d54"],
Cell[196568, 3867, 52653, 965, 396, "Output",ExpressionUUID->"a6836e16-9116-463e-8070-8f8c9fb6ee82"]
}, Open  ]],
Cell[249236, 4835, 897, 28, 60, "Input",ExpressionUUID->"6faf4c56-8a8a-4f79-95cd-a7fe55715c4e"],
Cell[CellGroupData[{
Cell[250158, 4867, 140, 2, 60, "Input",ExpressionUUID->"e43fa3ae-13f0-4b81-964f-9560aceee46e"],
Cell[250301, 4871, 38461, 689, 246, "Output",ExpressionUUID->"47101c13-4a1f-4be1-9cae-9c36770cc5ac"],
Cell[288765, 5562, 52653, 965, 396, "Output",ExpressionUUID->"f0ccd9c3-fe6c-416c-8911-ecb32aeb22b3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[341467, 6533, 101, 0, 65, "Section",ExpressionUUID->"16744f27-e851-44de-9fee-e736ce631986"],
Cell[CellGroupData[{
Cell[341593, 6537, 92, 0, 68, "Subsection",ExpressionUUID->"0cd18d76-9d52-4214-8cf2-49db18ece860"],
Cell[341688, 6539, 1207, 37, 36, "Input",ExpressionUUID->"e576d98b-d28e-49c2-9217-1e3581b6243d"],
Cell[CellGroupData[{
Cell[342920, 6580, 1228, 38, 155, "Input",ExpressionUUID->"e5d83fbe-6026-43da-9c8a-16dbad50c4a3"],
Cell[344151, 6620, 38461, 689, 246, "Output",ExpressionUUID->"9d185394-b0ae-4810-9bc2-93e3e27d2b14"],
Cell[382615, 7311, 63427, 1154, 446, "Output",ExpressionUUID->"8aa2e1f3-89d4-4c75-a1f1-235626765b26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446079, 8470, 542, 17, 36, "Input",ExpressionUUID->"ac9a6875-492f-40cc-8bed-49d8de213790"],
Cell[446624, 8489, 52653, 965, 396, "Output",ExpressionUUID->"8e86b686-69de-430b-9752-bcbaceddb6d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499314, 9459, 167, 4, 35, "Input",ExpressionUUID->"3ccfbe17-d216-4b54-bbfc-ad8ff2c39425"],
Cell[499484, 9465, 1040, 33, 40, "Output",ExpressionUUID->"c21f5e16-e510-454d-9311-df74ccbad4ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500561, 9503, 143, 3, 35, "Input",ExpressionUUID->"6f668242-c645-4355-9751-f50999743734"],
Cell[500707, 9508, 121, 2, 40, "Output",ExpressionUUID->"df15e6c5-3c93-4aac-adab-6563d806fef7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500865, 9515, 455, 14, 35, "Input",ExpressionUUID->"a15caaa9-83fe-4d46-91a4-47ae595db19e"],
Cell[501323, 9531, 215, 6, 40, "Output",ExpressionUUID->"fc1bab8b-165c-4d63-8925-6094459e0af3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[501587, 9543, 110, 0, 50, "Subsection",ExpressionUUID->"241bd142-cde8-4684-b6ca-ca7a6ad353bc"],
Cell[CellGroupData[{
Cell[501722, 9547, 182, 4, 36, "Input",ExpressionUUID->"dea2ee0c-4e4f-44f0-9b18-18ba4afb2083"],
Cell[501907, 9553, 125, 1, 41, "Output",ExpressionUUID->"fea1af9e-901d-4c76-a388-0f2905d57916"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502069, 9559, 475, 15, 68, "Input",ExpressionUUID->"0344be43-6e24-4750-b0b9-2094d511c65f"],
Cell[502547, 9576, 225, 4, 41, "Output",ExpressionUUID->"c5fac19f-a14b-4ed3-afec-92633d8efd7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502809, 9585, 228, 5, 36, "Input",ExpressionUUID->"f8ada038-cfee-45f6-8c57-9579991ebc3b"],
Cell[503040, 9592, 272, 7, 68, "Output",ExpressionUUID->"476d8604-9c4f-4db4-aec3-8e4eaa7b6d98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[503349, 9604, 154, 3, 36, "Input",ExpressionUUID->"3803716e-3ab6-4b6a-93a0-59f3a4dc49d7"],
Cell[503506, 9609, 127, 1, 41, "Output",ExpressionUUID->"1c71962b-b1b1-45dc-a326-18444ed9e3a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[503670, 9615, 278, 7, 60, "Input",ExpressionUUID->"06d97977-7946-47a3-9dcf-5655b6c3a86d"],
Cell[503951, 9624, 279, 7, 65, "Output",ExpressionUUID->"77561ea0-b8e6-4b35-a3bc-12e9593cc88c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[504267, 9636, 213, 4, 36, "Input",ExpressionUUID->"d5c3ff5a-d576-4163-9249-74801a3583c0"],
Cell[504483, 9642, 214, 4, 41, "Output",ExpressionUUID->"af3d502e-37c0-4aaa-be41-93ea50739288"]
}, Open  ]],
Cell[CellGroupData[{
Cell[504734, 9651, 254, 6, 39, "Input",ExpressionUUID->"9eb4b410-acba-4ae9-9e97-a986760b047b"],
Cell[504991, 9659, 311, 9, 46, "Output",ExpressionUUID->"6e834e33-29f4-4972-a3d7-0b3c5140e103"]
}, Open  ]],
Cell[CellGroupData[{
Cell[505339, 9673, 177, 4, 35, "Input",ExpressionUUID->"0c29745d-e6ab-4c2e-ab8f-0d23c1bfab28"],
Cell[505519, 9679, 111, 2, 40, "Output",ExpressionUUID->"92deadeb-e357-4b7a-a985-25659a256656"]
}, Open  ]],
Cell[CellGroupData[{
Cell[505667, 9686, 183, 4, 35, "Input",ExpressionUUID->"2f61d6f2-6624-4bdf-8f3e-c0204d7e6e5e"],
Cell[505853, 9692, 111, 2, 40, "Output",ExpressionUUID->"3b76a36a-ca3b-4da6-9be8-57b34e565775"]
}, Open  ]],
Cell[CellGroupData[{
Cell[506001, 9699, 232, 6, 35, "Input",ExpressionUUID->"61b99e57-9477-473f-bdab-b0e8da68cf60"],
Cell[506236, 9707, 276, 8, 90, "Output",ExpressionUUID->"b67a782b-30ef-4561-9630-66c6df903d75"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[506585, 9723, 96, 0, 86, "Chapter",ExpressionUUID->"cb3d783c-0a5e-48c0-979f-f66168ac24a4"],
Cell[CellGroupData[{
Cell[506706, 9727, 111, 0, 83, "Section",ExpressionUUID->"ccf69e5f-b1ec-480c-a723-6142516e46c4"],
Cell[CellGroupData[{
Cell[506842, 9731, 509, 13, 66, "Input",ExpressionUUID->"d5caf1f4-7d18-4bc2-be67-96e8c5d2a25d"],
Cell[507354, 9746, 115, 1, 41, "Output",ExpressionUUID->"f22cebfe-1dac-4c74-b352-f5ff22fb46b1"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[507518, 9753, 255, 4, 67, "Section",ExpressionUUID->"ad410748-a014-4deb-b946-9dae16b689db"],
Cell[CellGroupData[{
Cell[507798, 9761, 710, 11, 68, "Subsection",ExpressionUUID->"ebfaecb3-08a3-432e-90ff-9a7e5985c8be"],
Cell[CellGroupData[{
Cell[508533, 9776, 341, 8, 56, "Subsubsection",ExpressionUUID->"ad0e0f7f-fe32-40d0-8545-a1d3d05a229f"],
Cell[CellGroupData[{
Cell[508899, 9788, 22847, 417, 688, "Input",ExpressionUUID->"53210cbb-a248-43aa-b47a-fa9ba9872beb"],
Cell[531749, 10207, 12128, 270, 903, "Output",ExpressionUUID->"475a17d1-02a5-42f2-a58e-967ef8223ffc"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[543923, 10483, 345, 8, 56, "Subsubsection",ExpressionUUID->"7fd663dc-7019-4275-998e-2e8bce23576b"],
Cell[544271, 10493, 698, 24, 48, "Text",ExpressionUUID->"bfb5380e-1ed0-41b8-a4d7-5272c0fac512"],
Cell[CellGroupData[{
Cell[544994, 10521, 2196, 48, 83, "Input",ExpressionUUID->"1a5cf6fd-6688-4370-bbbf-83eabf77e03e"],
Cell[547193, 10571, 992, 28, 206, "Output",ExpressionUUID->"a321da9a-6401-4183-82be-cdd0b4375174"],
Cell[548188, 10601, 610, 12, 66, "Output",ExpressionUUID->"3ad35c71-78a0-4ce7-8735-db7dee1d695a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548835, 10618, 365, 10, 41, "Input",ExpressionUUID->"432573b9-c4d0-4b00-a2be-3264e0b07049"],
Cell[549203, 10630, 624, 23, 206, "Output",ExpressionUUID->"8a8f1573-0945-4da2-b2be-2c9d5209e4b4"],
Cell[549830, 10655, 109, 1, 40, "Output",ExpressionUUID->"896dea19-c699-4708-8125-2c52086c9c2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[549976, 10661, 559, 15, 63, "Input",ExpressionUUID->"21ec275b-c077-4ce7-97fd-321e3c18c62a"],
Cell[550538, 10678, 114, 1, 40, "Output",ExpressionUUID->"21c935be-c4ab-4cdf-a530-9f5071fa3313"],
Cell[550655, 10681, 109, 1, 40, "Output",ExpressionUUID->"c9da2683-def2-4613-a46d-31a984551dff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[550801, 10687, 645, 17, 87, "Input",ExpressionUUID->"3cd88ca8-3e14-4c10-9532-6b427f3fbfee"],
Cell[551449, 10706, 121, 1, 40, "Output",ExpressionUUID->"66bad4e0-3132-4652-8a09-dd35bbd45d84"],
Cell[551573, 10709, 110, 1, 40, "Output",ExpressionUUID->"820534ed-a7c3-465c-9a9e-ca63ff2d5e2e"],
Cell[551686, 10712, 110, 1, 40, "Output",ExpressionUUID->"b153231d-7d42-4b88-8309-0bc2031f9325"]
}, Open  ]],
Cell[CellGroupData[{
Cell[551833, 10718, 730, 19, 87, "Input",ExpressionUUID->"e502154b-2535-4d80-b2cd-703395419968"],
Cell[552566, 10739, 130, 1, 40, "Output",ExpressionUUID->"419dae46-58e6-4eb7-9488-beccf27f76cf"],
Cell[552699, 10742, 111, 1, 40, "Output",ExpressionUUID->"86fd10f7-9d92-4b86-afa1-ffa2b7e2b2a3"],
Cell[552813, 10745, 111, 1, 40, "Output",ExpressionUUID->"56db0b7a-504f-485a-84d6-1e497c06e224"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552961, 10751, 135, 2, 35, "Input",ExpressionUUID->"574c36ef-e862-4f5f-9238-f655a2af4fb4"],
Cell[553099, 10755, 108, 1, 40, "Output",ExpressionUUID->"22e4e555-f05b-4590-a68a-7b0c935329c5"]
}, Open  ]],
Cell[553222, 10759, 469, 13, 87, "Input",ExpressionUUID->"2cc80b23-6df9-4955-86aa-a41b689955ea"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[553752, 10779, 77, 0, 83, "Section",ExpressionUUID->"b413bc38-f40e-41ff-9f95-91df4bf5808c"],
Cell[CellGroupData[{
Cell[553854, 10783, 352, 11, 60, "Input",ExpressionUUID->"4f9cfb9d-178f-4921-b4cb-fb1a048a9221"],
Cell[554209, 10796, 113, 2, 40, "Output",ExpressionUUID->"4a644f5d-8fae-4ef8-b546-57ebaa94fe08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554359, 10803, 427, 13, 60, "Input",ExpressionUUID->"8be2385e-4870-4bcf-8972-ce19aa6e6d9c"],
Cell[554789, 10818, 129, 2, 40, "Output",ExpressionUUID->"66135b88-cb12-43e3-9384-b331f3c3ab83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554955, 10825, 304, 8, 35, "Input",ExpressionUUID->"ff723ee4-8607-4d71-a876-3de871e5d568"],
Cell[555262, 10835, 915, 26, 79, "Output",ExpressionUUID->"13aa7ba8-ee18-4077-b8cc-470b9ea2e49a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556214, 10866, 549, 17, 60, "Input",ExpressionUUID->"f70f7329-2c68-4a91-98c3-00a10c3d44cf"],
Cell[556766, 10885, 659, 25, 249, "Output",ExpressionUUID->"8dc5ffe6-648b-41f0-86c9-149676c22b5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557462, 10915, 1607, 50, 155, "Input",ExpressionUUID->"7c776fd4-3ba0-4632-9c9c-4f3305161e79"],
Cell[559072, 10967, 658, 25, 249, "Output",ExpressionUUID->"e762f65a-4d91-486b-bcbe-8e450549dac0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559767, 10997, 385, 10, 60, "Input",ExpressionUUID->"6c386109-6837-4612-84d0-82c95520222c"],
Cell[560155, 11009, 217, 6, 61, "Output",ExpressionUUID->"9bc61d7f-a438-41a7-9a35-1cc8b1ff5679"],
Cell[560375, 11017, 276, 8, 61, "Output",ExpressionUUID->"31d64e1b-790c-4717-a45a-e687ede68020"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[560700, 11031, 95, 0, 83, "Section",ExpressionUUID->"4a80f327-34a6-4333-a819-45f1cebe2928"],
Cell[560798, 11033, 98781, 1623, 664, "Input",ExpressionUUID->"e2cbbcb2-6b54-4ddd-84cd-d773bab39384"],
Cell[CellGroupData[{
Cell[659604, 12660, 440, 13, 53, "Input",ExpressionUUID->"5481ed00-e54f-40ae-8b71-d079ef1dc571"],
Cell[660047, 12675, 320, 10, 77, "Output",ExpressionUUID->"9e5a7012-9551-49e5-aea8-c0fad67b1985"]
}, Open  ]],
Cell[660382, 12688, 381, 12, 56, "Input",ExpressionUUID->"b19fe276-7e48-472b-8b1c-ece8c027d2ca"]
}, Open  ]]
}, Open  ]]
}
]
*)

